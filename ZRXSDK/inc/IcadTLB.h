

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0500 */
/* at Tue Nov 16 15:04:41 2010
 */
/* Compiler settings for .\..\..\lib\AUTO\Icad.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __IcadTLB_h__
#define __IcadTLB_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IIcadPoint_FWD_DEFINED__
#define __IIcadPoint_FWD_DEFINED__
typedef interface IIcadPoint IIcadPoint;
#endif 	/* __IIcadPoint_FWD_DEFINED__ */


#ifndef __IIcadPoints_FWD_DEFINED__
#define __IIcadPoints_FWD_DEFINED__
typedef interface IIcadPoints IIcadPoints;
#endif 	/* __IIcadPoints_FWD_DEFINED__ */


#ifndef __IIcadVector_FWD_DEFINED__
#define __IIcadVector_FWD_DEFINED__
typedef interface IIcadVector IIcadVector;
#endif 	/* __IIcadVector_FWD_DEFINED__ */


#ifndef __IIcadMatrix_FWD_DEFINED__
#define __IIcadMatrix_FWD_DEFINED__
typedef interface IIcadMatrix IIcadMatrix;
#endif 	/* __IIcadMatrix_FWD_DEFINED__ */


#ifndef __IIcadLibrary_FWD_DEFINED__
#define __IIcadLibrary_FWD_DEFINED__
typedef interface IIcadLibrary IIcadLibrary;
#endif 	/* __IIcadLibrary_FWD_DEFINED__ */


#ifndef __IIcadUtility_FWD_DEFINED__
#define __IIcadUtility_FWD_DEFINED__
typedef interface IIcadUtility IIcadUtility;
#endif 	/* __IIcadUtility_FWD_DEFINED__ */


#ifndef __IIcadHyperlinks_FWD_DEFINED__
#define __IIcadHyperlinks_FWD_DEFINED__
typedef interface IIcadHyperlinks IIcadHyperlinks;
#endif 	/* __IIcadHyperlinks_FWD_DEFINED__ */


#ifndef __IIcadHyperlink_FWD_DEFINED__
#define __IIcadHyperlink_FWD_DEFINED__
typedef interface IIcadHyperlink IIcadHyperlink;
#endif 	/* __IIcadHyperlink_FWD_DEFINED__ */


#ifndef __IIcadAcCmColor_FWD_DEFINED__
#define __IIcadAcCmColor_FWD_DEFINED__
typedef interface IIcadAcCmColor IIcadAcCmColor;
#endif 	/* __IIcadAcCmColor_FWD_DEFINED__ */


#ifndef __IIcadPlotterPen_FWD_DEFINED__
#define __IIcadPlotterPen_FWD_DEFINED__
typedef interface IIcadPlotterPen IIcadPlotterPen;
#endif 	/* __IIcadPlotterPen_FWD_DEFINED__ */


#ifndef __IIcadPlotterPens_FWD_DEFINED__
#define __IIcadPlotterPens_FWD_DEFINED__
typedef interface IIcadPlotterPens IIcadPlotterPens;
#endif 	/* __IIcadPlotterPens_FWD_DEFINED__ */


#ifndef __IIcadPlotProperties_FWD_DEFINED__
#define __IIcadPlotProperties_FWD_DEFINED__
typedef interface IIcadPlotProperties IIcadPlotProperties;
#endif 	/* __IIcadPlotProperties_FWD_DEFINED__ */


#ifndef __IIcadPlotManager_FWD_DEFINED__
#define __IIcadPlotManager_FWD_DEFINED__
typedef interface IIcadPlotManager IIcadPlotManager;
#endif 	/* __IIcadPlotManager_FWD_DEFINED__ */


#ifndef __IIcadPlotRegManager_FWD_DEFINED__
#define __IIcadPlotRegManager_FWD_DEFINED__
typedef interface IIcadPlotRegManager IIcadPlotRegManager;
#endif 	/* __IIcadPlotRegManager_FWD_DEFINED__ */


#ifndef __IIcadMenuBar_FWD_DEFINED__
#define __IIcadMenuBar_FWD_DEFINED__
typedef interface IIcadMenuBar IIcadMenuBar;
#endif 	/* __IIcadMenuBar_FWD_DEFINED__ */


#ifndef __IIcadMenuGroups_FWD_DEFINED__
#define __IIcadMenuGroups_FWD_DEFINED__
typedef interface IIcadMenuGroups IIcadMenuGroups;
#endif 	/* __IIcadMenuGroups_FWD_DEFINED__ */


#ifndef __IIcadMenuGroup_FWD_DEFINED__
#define __IIcadMenuGroup_FWD_DEFINED__
typedef interface IIcadMenuGroup IIcadMenuGroup;
#endif 	/* __IIcadMenuGroup_FWD_DEFINED__ */


#ifndef __IIcadPopupMenus_FWD_DEFINED__
#define __IIcadPopupMenus_FWD_DEFINED__
typedef interface IIcadPopupMenus IIcadPopupMenus;
#endif 	/* __IIcadPopupMenus_FWD_DEFINED__ */


#ifndef __IIcadPopupMenu_FWD_DEFINED__
#define __IIcadPopupMenu_FWD_DEFINED__
typedef interface IIcadPopupMenu IIcadPopupMenu;
#endif 	/* __IIcadPopupMenu_FWD_DEFINED__ */


#ifndef __IIcadPopupMenuItem_FWD_DEFINED__
#define __IIcadPopupMenuItem_FWD_DEFINED__
typedef interface IIcadPopupMenuItem IIcadPopupMenuItem;
#endif 	/* __IIcadPopupMenuItem_FWD_DEFINED__ */


#ifndef __IIcadToolbars_FWD_DEFINED__
#define __IIcadToolbars_FWD_DEFINED__
typedef interface IIcadToolbars IIcadToolbars;
#endif 	/* __IIcadToolbars_FWD_DEFINED__ */


#ifndef __IIcadToolbar_FWD_DEFINED__
#define __IIcadToolbar_FWD_DEFINED__
typedef interface IIcadToolbar IIcadToolbar;
#endif 	/* __IIcadToolbar_FWD_DEFINED__ */


#ifndef __IIcadToolbarItem_FWD_DEFINED__
#define __IIcadToolbarItem_FWD_DEFINED__
typedef interface IIcadToolbarItem IIcadToolbarItem;
#endif 	/* __IIcadToolbarItem_FWD_DEFINED__ */


#ifndef __IIcadDocuments_FWD_DEFINED__
#define __IIcadDocuments_FWD_DEFINED__
typedef interface IIcadDocuments IIcadDocuments;
#endif 	/* __IIcadDocuments_FWD_DEFINED__ */


#ifndef __IIcadWindows_FWD_DEFINED__
#define __IIcadWindows_FWD_DEFINED__
typedef interface IIcadWindows IIcadWindows;
#endif 	/* __IIcadWindows_FWD_DEFINED__ */


#ifndef __IIcadWindow_FWD_DEFINED__
#define __IIcadWindow_FWD_DEFINED__
typedef interface IIcadWindow IIcadWindow;
#endif 	/* __IIcadWindow_FWD_DEFINED__ */


#ifndef __IIcadApplication_FWD_DEFINED__
#define __IIcadApplication_FWD_DEFINED__
typedef interface IIcadApplication IIcadApplication;
#endif 	/* __IIcadApplication_FWD_DEFINED__ */


#ifndef __IZwcadApplicationEvents_FWD_DEFINED__
#define __IZwcadApplicationEvents_FWD_DEFINED__
typedef interface IZwcadApplicationEvents IZwcadApplicationEvents;
#endif 	/* __IZwcadApplicationEvents_FWD_DEFINED__ */


#ifndef __IIcadWorkspace_FWD_DEFINED__
#define __IIcadWorkspace_FWD_DEFINED__
typedef interface IIcadWorkspace IIcadWorkspace;
#endif 	/* __IIcadWorkspace_FWD_DEFINED__ */


#ifndef ___IcadWorkspaceEvents_FWD_DEFINED__
#define ___IcadWorkspaceEvents_FWD_DEFINED__
typedef interface _IcadWorkspaceEvents _IcadWorkspaceEvents;
#endif 	/* ___IcadWorkspaceEvents_FWD_DEFINED__ */


#ifndef __IIcadApplicationPreferences_FWD_DEFINED__
#define __IIcadApplicationPreferences_FWD_DEFINED__
typedef interface IIcadApplicationPreferences IIcadApplicationPreferences;
#endif 	/* __IIcadApplicationPreferences_FWD_DEFINED__ */


#ifndef __IIcadGroups_FWD_DEFINED__
#define __IIcadGroups_FWD_DEFINED__
typedef interface IIcadGroups IIcadGroups;
#endif 	/* __IIcadGroups_FWD_DEFINED__ */


#ifndef __IIcadDbItem_FWD_DEFINED__
#define __IIcadDbItem_FWD_DEFINED__
typedef interface IIcadDbItem IIcadDbItem;
#endif 	/* __IIcadDbItem_FWD_DEFINED__ */


#ifndef __IIcadGroup_FWD_DEFINED__
#define __IIcadGroup_FWD_DEFINED__
typedef interface IIcadGroup IIcadGroup;
#endif 	/* __IIcadGroup_FWD_DEFINED__ */


#ifndef __IIcadState_FWD_DEFINED__
#define __IIcadState_FWD_DEFINED__
typedef interface IIcadState IIcadState;
#endif 	/* __IIcadState_FWD_DEFINED__ */


#ifndef __IIcadXRecord_FWD_DEFINED__
#define __IIcadXRecord_FWD_DEFINED__
typedef interface IIcadXRecord IIcadXRecord;
#endif 	/* __IIcadXRecord_FWD_DEFINED__ */


#ifndef __IIcadDictionary_FWD_DEFINED__
#define __IIcadDictionary_FWD_DEFINED__
typedef interface IIcadDictionary IIcadDictionary;
#endif 	/* __IIcadDictionary_FWD_DEFINED__ */


#ifndef __IIcadDictionaries_FWD_DEFINED__
#define __IIcadDictionaries_FWD_DEFINED__
typedef interface IIcadDictionaries IIcadDictionaries;
#endif 	/* __IIcadDictionaries_FWD_DEFINED__ */


#ifndef __IIcadPlotConfiguration_FWD_DEFINED__
#define __IIcadPlotConfiguration_FWD_DEFINED__
typedef interface IIcadPlotConfiguration IIcadPlotConfiguration;
#endif 	/* __IIcadPlotConfiguration_FWD_DEFINED__ */


#ifndef __IIcadPlotConfigurations_FWD_DEFINED__
#define __IIcadPlotConfigurations_FWD_DEFINED__
typedef interface IIcadPlotConfigurations IIcadPlotConfigurations;
#endif 	/* __IIcadPlotConfigurations_FWD_DEFINED__ */


#ifndef __IIcadLayout_FWD_DEFINED__
#define __IIcadLayout_FWD_DEFINED__
typedef interface IIcadLayout IIcadLayout;
#endif 	/* __IIcadLayout_FWD_DEFINED__ */


#ifndef __IIcadLayouts_FWD_DEFINED__
#define __IIcadLayouts_FWD_DEFINED__
typedef interface IIcadLayouts IIcadLayouts;
#endif 	/* __IIcadLayouts_FWD_DEFINED__ */


#ifndef __IIcadPlot_FWD_DEFINED__
#define __IIcadPlot_FWD_DEFINED__
typedef interface IIcadPlot IIcadPlot;
#endif 	/* __IIcadPlot_FWD_DEFINED__ */


#ifndef __IIcadTableItem_FWD_DEFINED__
#define __IIcadTableItem_FWD_DEFINED__
typedef interface IIcadTableItem IIcadTableItem;
#endif 	/* __IIcadTableItem_FWD_DEFINED__ */


#ifndef __IIcadRegisteredApplication_FWD_DEFINED__
#define __IIcadRegisteredApplication_FWD_DEFINED__
typedef interface IIcadRegisteredApplication IIcadRegisteredApplication;
#endif 	/* __IIcadRegisteredApplication_FWD_DEFINED__ */


#ifndef __IIcadRegisteredApplications_FWD_DEFINED__
#define __IIcadRegisteredApplications_FWD_DEFINED__
typedef interface IIcadRegisteredApplications IIcadRegisteredApplications;
#endif 	/* __IIcadRegisteredApplications_FWD_DEFINED__ */


#ifndef __IIcadEntities_FWD_DEFINED__
#define __IIcadEntities_FWD_DEFINED__
typedef interface IIcadEntities IIcadEntities;
#endif 	/* __IIcadEntities_FWD_DEFINED__ */


#ifndef __IIcadBlock_FWD_DEFINED__
#define __IIcadBlock_FWD_DEFINED__
typedef interface IIcadBlock IIcadBlock;
#endif 	/* __IIcadBlock_FWD_DEFINED__ */


#ifndef __IIcadBlocks_FWD_DEFINED__
#define __IIcadBlocks_FWD_DEFINED__
typedef interface IIcadBlocks IIcadBlocks;
#endif 	/* __IIcadBlocks_FWD_DEFINED__ */


#ifndef __IIcadDimensionStyle_FWD_DEFINED__
#define __IIcadDimensionStyle_FWD_DEFINED__
typedef interface IIcadDimensionStyle IIcadDimensionStyle;
#endif 	/* __IIcadDimensionStyle_FWD_DEFINED__ */


#ifndef __IIcadDimensionStyles_FWD_DEFINED__
#define __IIcadDimensionStyles_FWD_DEFINED__
typedef interface IIcadDimensionStyles IIcadDimensionStyles;
#endif 	/* __IIcadDimensionStyles_FWD_DEFINED__ */


#ifndef __IIcadLayer_FWD_DEFINED__
#define __IIcadLayer_FWD_DEFINED__
typedef interface IIcadLayer IIcadLayer;
#endif 	/* __IIcadLayer_FWD_DEFINED__ */


#ifndef __IIcadLayers_FWD_DEFINED__
#define __IIcadLayers_FWD_DEFINED__
typedef interface IIcadLayers IIcadLayers;
#endif 	/* __IIcadLayers_FWD_DEFINED__ */


#ifndef __IIcadLinetype_FWD_DEFINED__
#define __IIcadLinetype_FWD_DEFINED__
typedef interface IIcadLinetype IIcadLinetype;
#endif 	/* __IIcadLinetype_FWD_DEFINED__ */


#ifndef __IIcadLinetypes_FWD_DEFINED__
#define __IIcadLinetypes_FWD_DEFINED__
typedef interface IIcadLinetypes IIcadLinetypes;
#endif 	/* __IIcadLinetypes_FWD_DEFINED__ */


#ifndef __IIcadTextStyle_FWD_DEFINED__
#define __IIcadTextStyle_FWD_DEFINED__
typedef interface IIcadTextStyle IIcadTextStyle;
#endif 	/* __IIcadTextStyle_FWD_DEFINED__ */


#ifndef __IIcadTextStyles_FWD_DEFINED__
#define __IIcadTextStyles_FWD_DEFINED__
typedef interface IIcadTextStyles IIcadTextStyles;
#endif 	/* __IIcadTextStyles_FWD_DEFINED__ */


#ifndef __IIcadUserCoordSystem_FWD_DEFINED__
#define __IIcadUserCoordSystem_FWD_DEFINED__
typedef interface IIcadUserCoordSystem IIcadUserCoordSystem;
#endif 	/* __IIcadUserCoordSystem_FWD_DEFINED__ */


#ifndef __IIcadUserCoordSystems_FWD_DEFINED__
#define __IIcadUserCoordSystems_FWD_DEFINED__
typedef interface IIcadUserCoordSystems IIcadUserCoordSystems;
#endif 	/* __IIcadUserCoordSystems_FWD_DEFINED__ */


#ifndef __IIcadView_FWD_DEFINED__
#define __IIcadView_FWD_DEFINED__
typedef interface IIcadView IIcadView;
#endif 	/* __IIcadView_FWD_DEFINED__ */


#ifndef __IIcadViews_FWD_DEFINED__
#define __IIcadViews_FWD_DEFINED__
typedef interface IIcadViews IIcadViews;
#endif 	/* __IIcadViews_FWD_DEFINED__ */


#ifndef __IIcadViewport_FWD_DEFINED__
#define __IIcadViewport_FWD_DEFINED__
typedef interface IIcadViewport IIcadViewport;
#endif 	/* __IIcadViewport_FWD_DEFINED__ */


#ifndef __IIcadViewports_FWD_DEFINED__
#define __IIcadViewports_FWD_DEFINED__
typedef interface IIcadViewports IIcadViewports;
#endif 	/* __IIcadViewports_FWD_DEFINED__ */


#ifndef __IIcadSelectionSet_FWD_DEFINED__
#define __IIcadSelectionSet_FWD_DEFINED__
typedef interface IIcadSelectionSet IIcadSelectionSet;
#endif 	/* __IIcadSelectionSet_FWD_DEFINED__ */


#ifndef __IIcadSelectionSets_FWD_DEFINED__
#define __IIcadSelectionSets_FWD_DEFINED__
typedef interface IIcadSelectionSets IIcadSelectionSets;
#endif 	/* __IIcadSelectionSets_FWD_DEFINED__ */


#ifndef __IIcadSummaryInfo_FWD_DEFINED__
#define __IIcadSummaryInfo_FWD_DEFINED__
typedef interface IIcadSummaryInfo IIcadSummaryInfo;
#endif 	/* __IIcadSummaryInfo_FWD_DEFINED__ */


#ifndef __IIcadSortentsTable_FWD_DEFINED__
#define __IIcadSortentsTable_FWD_DEFINED__
typedef interface IIcadSortentsTable IIcadSortentsTable;
#endif 	/* __IIcadSortentsTable_FWD_DEFINED__ */


#ifndef __IIcadEntity_FWD_DEFINED__
#define __IIcadEntity_FWD_DEFINED__
typedef interface IIcadEntity IIcadEntity;
#endif 	/* __IIcadEntity_FWD_DEFINED__ */


#ifndef __IIcad3DFace_FWD_DEFINED__
#define __IIcad3DFace_FWD_DEFINED__
typedef interface IIcad3DFace IIcad3DFace;
#endif 	/* __IIcad3DFace_FWD_DEFINED__ */


#ifndef __IIcad3DPoly_FWD_DEFINED__
#define __IIcad3DPoly_FWD_DEFINED__
typedef interface IIcad3DPoly IIcad3DPoly;
#endif 	/* __IIcad3DPoly_FWD_DEFINED__ */


#ifndef __IIcadArc_FWD_DEFINED__
#define __IIcadArc_FWD_DEFINED__
typedef interface IIcadArc IIcadArc;
#endif 	/* __IIcadArc_FWD_DEFINED__ */


#ifndef __IIcadAttribute_FWD_DEFINED__
#define __IIcadAttribute_FWD_DEFINED__
typedef interface IIcadAttribute IIcadAttribute;
#endif 	/* __IIcadAttribute_FWD_DEFINED__ */


#ifndef __IIcadAttributeReference_FWD_DEFINED__
#define __IIcadAttributeReference_FWD_DEFINED__
typedef interface IIcadAttributeReference IIcadAttributeReference;
#endif 	/* __IIcadAttributeReference_FWD_DEFINED__ */


#ifndef __IIcadAttributeReferences_FWD_DEFINED__
#define __IIcadAttributeReferences_FWD_DEFINED__
typedef interface IIcadAttributeReferences IIcadAttributeReferences;
#endif 	/* __IIcadAttributeReferences_FWD_DEFINED__ */


#ifndef __IIcadBlockReference_FWD_DEFINED__
#define __IIcadBlockReference_FWD_DEFINED__
typedef interface IIcadBlockReference IIcadBlockReference;
#endif 	/* __IIcadBlockReference_FWD_DEFINED__ */


#ifndef __IIcadCircle_FWD_DEFINED__
#define __IIcadCircle_FWD_DEFINED__
typedef interface IIcadCircle IIcadCircle;
#endif 	/* __IIcadCircle_FWD_DEFINED__ */


#ifndef __IIcadEllipse_FWD_DEFINED__
#define __IIcadEllipse_FWD_DEFINED__
typedef interface IIcadEllipse IIcadEllipse;
#endif 	/* __IIcadEllipse_FWD_DEFINED__ */


#ifndef __IIcadHatch_FWD_DEFINED__
#define __IIcadHatch_FWD_DEFINED__
typedef interface IIcadHatch IIcadHatch;
#endif 	/* __IIcadHatch_FWD_DEFINED__ */


#ifndef __IIcadLeader_FWD_DEFINED__
#define __IIcadLeader_FWD_DEFINED__
typedef interface IIcadLeader IIcadLeader;
#endif 	/* __IIcadLeader_FWD_DEFINED__ */


#ifndef __IIcadLine_FWD_DEFINED__
#define __IIcadLine_FWD_DEFINED__
typedef interface IIcadLine IIcadLine;
#endif 	/* __IIcadLine_FWD_DEFINED__ */


#ifndef __IIcadLightWeightPolyline_FWD_DEFINED__
#define __IIcadLightWeightPolyline_FWD_DEFINED__
typedef interface IIcadLightWeightPolyline IIcadLightWeightPolyline;
#endif 	/* __IIcadLightWeightPolyline_FWD_DEFINED__ */


#ifndef __IIcadMText_FWD_DEFINED__
#define __IIcadMText_FWD_DEFINED__
typedef interface IIcadMText IIcadMText;
#endif 	/* __IIcadMText_FWD_DEFINED__ */


#ifndef __IIcadPointEntity_FWD_DEFINED__
#define __IIcadPointEntity_FWD_DEFINED__
typedef interface IIcadPointEntity IIcadPointEntity;
#endif 	/* __IIcadPointEntity_FWD_DEFINED__ */


#ifndef __IIcadPolyline_FWD_DEFINED__
#define __IIcadPolyline_FWD_DEFINED__
typedef interface IIcadPolyline IIcadPolyline;
#endif 	/* __IIcadPolyline_FWD_DEFINED__ */


#ifndef __IIcadPolygonMesh_FWD_DEFINED__
#define __IIcadPolygonMesh_FWD_DEFINED__
typedef interface IIcadPolygonMesh IIcadPolygonMesh;
#endif 	/* __IIcadPolygonMesh_FWD_DEFINED__ */


#ifndef __IIcadPolyfaceMesh_FWD_DEFINED__
#define __IIcadPolyfaceMesh_FWD_DEFINED__
typedef interface IIcadPolyfaceMesh IIcadPolyfaceMesh;
#endif 	/* __IIcadPolyfaceMesh_FWD_DEFINED__ */


#ifndef __IIcadPViewport_FWD_DEFINED__
#define __IIcadPViewport_FWD_DEFINED__
typedef interface IIcadPViewport IIcadPViewport;
#endif 	/* __IIcadPViewport_FWD_DEFINED__ */


#ifndef __IIcadRasterImage_FWD_DEFINED__
#define __IIcadRasterImage_FWD_DEFINED__
typedef interface IIcadRasterImage IIcadRasterImage;
#endif 	/* __IIcadRasterImage_FWD_DEFINED__ */


#ifndef __IIcadRay_FWD_DEFINED__
#define __IIcadRay_FWD_DEFINED__
typedef interface IIcadRay IIcadRay;
#endif 	/* __IIcadRay_FWD_DEFINED__ */


#ifndef __IIcadShape_FWD_DEFINED__
#define __IIcadShape_FWD_DEFINED__
typedef interface IIcadShape IIcadShape;
#endif 	/* __IIcadShape_FWD_DEFINED__ */


#ifndef __IIcadSolid_FWD_DEFINED__
#define __IIcadSolid_FWD_DEFINED__
typedef interface IIcadSolid IIcadSolid;
#endif 	/* __IIcadSolid_FWD_DEFINED__ */


#ifndef __IIcadSpline_FWD_DEFINED__
#define __IIcadSpline_FWD_DEFINED__
typedef interface IIcadSpline IIcadSpline;
#endif 	/* __IIcadSpline_FWD_DEFINED__ */


#ifndef __IIcadText_FWD_DEFINED__
#define __IIcadText_FWD_DEFINED__
typedef interface IIcadText IIcadText;
#endif 	/* __IIcadText_FWD_DEFINED__ */


#ifndef __IIcadTolerance_FWD_DEFINED__
#define __IIcadTolerance_FWD_DEFINED__
typedef interface IIcadTolerance IIcadTolerance;
#endif 	/* __IIcadTolerance_FWD_DEFINED__ */


#ifndef __IIcadTrace_FWD_DEFINED__
#define __IIcadTrace_FWD_DEFINED__
typedef interface IIcadTrace IIcadTrace;
#endif 	/* __IIcadTrace_FWD_DEFINED__ */


#ifndef __IIcadXline_FWD_DEFINED__
#define __IIcadXline_FWD_DEFINED__
typedef interface IIcadXline IIcadXline;
#endif 	/* __IIcadXline_FWD_DEFINED__ */


#ifndef __IIcadExternalReference_FWD_DEFINED__
#define __IIcadExternalReference_FWD_DEFINED__
typedef interface IIcadExternalReference IIcadExternalReference;
#endif 	/* __IIcadExternalReference_FWD_DEFINED__ */


#ifndef __IIcadRegion_FWD_DEFINED__
#define __IIcadRegion_FWD_DEFINED__
typedef interface IIcadRegion IIcadRegion;
#endif 	/* __IIcadRegion_FWD_DEFINED__ */


#ifndef __IIcadMLine_FWD_DEFINED__
#define __IIcadMLine_FWD_DEFINED__
typedef interface IIcadMLine IIcadMLine;
#endif 	/* __IIcadMLine_FWD_DEFINED__ */


#ifndef __IIcadOle_FWD_DEFINED__
#define __IIcadOle_FWD_DEFINED__
typedef interface IIcadOle IIcadOle;
#endif 	/* __IIcadOle_FWD_DEFINED__ */


#ifndef __IIcad3DSolid_FWD_DEFINED__
#define __IIcad3DSolid_FWD_DEFINED__
typedef interface IIcad3DSolid IIcad3DSolid;
#endif 	/* __IIcad3DSolid_FWD_DEFINED__ */


#ifndef __IIcadDimension_FWD_DEFINED__
#define __IIcadDimension_FWD_DEFINED__
typedef interface IIcadDimension IIcadDimension;
#endif 	/* __IIcadDimension_FWD_DEFINED__ */


#ifndef __IIcadDimAngular_FWD_DEFINED__
#define __IIcadDimAngular_FWD_DEFINED__
typedef interface IIcadDimAngular IIcadDimAngular;
#endif 	/* __IIcadDimAngular_FWD_DEFINED__ */


#ifndef __IIcadDimAligned_FWD_DEFINED__
#define __IIcadDimAligned_FWD_DEFINED__
typedef interface IIcadDimAligned IIcadDimAligned;
#endif 	/* __IIcadDimAligned_FWD_DEFINED__ */


#ifndef __IIcadDimDiametric_FWD_DEFINED__
#define __IIcadDimDiametric_FWD_DEFINED__
typedef interface IIcadDimDiametric IIcadDimDiametric;
#endif 	/* __IIcadDimDiametric_FWD_DEFINED__ */


#ifndef __IIcadDimOrdinate_FWD_DEFINED__
#define __IIcadDimOrdinate_FWD_DEFINED__
typedef interface IIcadDimOrdinate IIcadDimOrdinate;
#endif 	/* __IIcadDimOrdinate_FWD_DEFINED__ */


#ifndef __IIcadDimRadial_FWD_DEFINED__
#define __IIcadDimRadial_FWD_DEFINED__
typedef interface IIcadDimRadial IIcadDimRadial;
#endif 	/* __IIcadDimRadial_FWD_DEFINED__ */


#ifndef __IIcadDimRotated_FWD_DEFINED__
#define __IIcadDimRotated_FWD_DEFINED__
typedef interface IIcadDimRotated IIcadDimRotated;
#endif 	/* __IIcadDimRotated_FWD_DEFINED__ */


#ifndef __IIcadDim3PointAngular_FWD_DEFINED__
#define __IIcadDim3PointAngular_FWD_DEFINED__
typedef interface IIcadDim3PointAngular IIcadDim3PointAngular;
#endif 	/* __IIcadDim3PointAngular_FWD_DEFINED__ */


#ifndef __IIcadModelSpace_FWD_DEFINED__
#define __IIcadModelSpace_FWD_DEFINED__
typedef interface IIcadModelSpace IIcadModelSpace;
#endif 	/* __IIcadModelSpace_FWD_DEFINED__ */


#ifndef __IIcadPaperSpace_FWD_DEFINED__
#define __IIcadPaperSpace_FWD_DEFINED__
typedef interface IIcadPaperSpace IIcadPaperSpace;
#endif 	/* __IIcadPaperSpace_FWD_DEFINED__ */


#ifndef __IIcadDocument_FWD_DEFINED__
#define __IIcadDocument_FWD_DEFINED__
typedef interface IIcadDocument IIcadDocument;
#endif 	/* __IIcadDocument_FWD_DEFINED__ */


#ifndef ___EIcadDocument_FWD_DEFINED__
#define ___EIcadDocument_FWD_DEFINED__
typedef interface _EIcadDocument _EIcadDocument;
#endif 	/* ___EIcadDocument_FWD_DEFINED__ */


#ifndef __IIcadDatabasePreferences_FWD_DEFINED__
#define __IIcadDatabasePreferences_FWD_DEFINED__
typedef interface IIcadDatabasePreferences IIcadDatabasePreferences;
#endif 	/* __IIcadDatabasePreferences_FWD_DEFINED__ */


#ifndef __IIcadPoint_FWD_DEFINED__
#define __IIcadPoint_FWD_DEFINED__
typedef interface IIcadPoint IIcadPoint;
#endif 	/* __IIcadPoint_FWD_DEFINED__ */


#ifndef __IIcadPoints_FWD_DEFINED__
#define __IIcadPoints_FWD_DEFINED__
typedef interface IIcadPoints IIcadPoints;
#endif 	/* __IIcadPoints_FWD_DEFINED__ */


#ifndef __IIcadVector_FWD_DEFINED__
#define __IIcadVector_FWD_DEFINED__
typedef interface IIcadVector IIcadVector;
#endif 	/* __IIcadVector_FWD_DEFINED__ */


#ifndef __IIcadMatrix_FWD_DEFINED__
#define __IIcadMatrix_FWD_DEFINED__
typedef interface IIcadMatrix IIcadMatrix;
#endif 	/* __IIcadMatrix_FWD_DEFINED__ */


#ifndef __IIcadLibrary_FWD_DEFINED__
#define __IIcadLibrary_FWD_DEFINED__
typedef interface IIcadLibrary IIcadLibrary;
#endif 	/* __IIcadLibrary_FWD_DEFINED__ */


#ifndef __IIcadUtility_FWD_DEFINED__
#define __IIcadUtility_FWD_DEFINED__
typedef interface IIcadUtility IIcadUtility;
#endif 	/* __IIcadUtility_FWD_DEFINED__ */


#ifndef __IIcadHyperlink_FWD_DEFINED__
#define __IIcadHyperlink_FWD_DEFINED__
typedef interface IIcadHyperlink IIcadHyperlink;
#endif 	/* __IIcadHyperlink_FWD_DEFINED__ */


#ifndef __IIcadHyperlinks_FWD_DEFINED__
#define __IIcadHyperlinks_FWD_DEFINED__
typedef interface IIcadHyperlinks IIcadHyperlinks;
#endif 	/* __IIcadHyperlinks_FWD_DEFINED__ */


#ifndef __IIcadAcCmColor_FWD_DEFINED__
#define __IIcadAcCmColor_FWD_DEFINED__
typedef interface IIcadAcCmColor IIcadAcCmColor;
#endif 	/* __IIcadAcCmColor_FWD_DEFINED__ */


#ifndef __IIcadPlotterPen_FWD_DEFINED__
#define __IIcadPlotterPen_FWD_DEFINED__
typedef interface IIcadPlotterPen IIcadPlotterPen;
#endif 	/* __IIcadPlotterPen_FWD_DEFINED__ */


#ifndef __IIcadPlotterPens_FWD_DEFINED__
#define __IIcadPlotterPens_FWD_DEFINED__
typedef interface IIcadPlotterPens IIcadPlotterPens;
#endif 	/* __IIcadPlotterPens_FWD_DEFINED__ */


#ifndef __IIcadPlotProperties_FWD_DEFINED__
#define __IIcadPlotProperties_FWD_DEFINED__
typedef interface IIcadPlotProperties IIcadPlotProperties;
#endif 	/* __IIcadPlotProperties_FWD_DEFINED__ */


#ifndef __IIcadPlotManager_FWD_DEFINED__
#define __IIcadPlotManager_FWD_DEFINED__
typedef interface IIcadPlotManager IIcadPlotManager;
#endif 	/* __IIcadPlotManager_FWD_DEFINED__ */


#ifndef __IIcadPlotRegManager_FWD_DEFINED__
#define __IIcadPlotRegManager_FWD_DEFINED__
typedef interface IIcadPlotRegManager IIcadPlotRegManager;
#endif 	/* __IIcadPlotRegManager_FWD_DEFINED__ */


#ifndef __IIcadDocuments_FWD_DEFINED__
#define __IIcadDocuments_FWD_DEFINED__
typedef interface IIcadDocuments IIcadDocuments;
#endif 	/* __IIcadDocuments_FWD_DEFINED__ */


#ifndef __IIcadWindows_FWD_DEFINED__
#define __IIcadWindows_FWD_DEFINED__
typedef interface IIcadWindows IIcadWindows;
#endif 	/* __IIcadWindows_FWD_DEFINED__ */


#ifndef __IIcadWindow_FWD_DEFINED__
#define __IIcadWindow_FWD_DEFINED__
typedef interface IIcadWindow IIcadWindow;
#endif 	/* __IIcadWindow_FWD_DEFINED__ */


#ifndef __IIcadApplication_FWD_DEFINED__
#define __IIcadApplication_FWD_DEFINED__
typedef interface IIcadApplication IIcadApplication;
#endif 	/* __IIcadApplication_FWD_DEFINED__ */


#ifndef __IIcadWorkspace_FWD_DEFINED__
#define __IIcadWorkspace_FWD_DEFINED__
typedef interface IIcadWorkspace IIcadWorkspace;
#endif 	/* __IIcadWorkspace_FWD_DEFINED__ */


#ifndef __IIcadApplicationPreferences_FWD_DEFINED__
#define __IIcadApplicationPreferences_FWD_DEFINED__
typedef interface IIcadApplicationPreferences IIcadApplicationPreferences;
#endif 	/* __IIcadApplicationPreferences_FWD_DEFINED__ */


#ifndef __IIcadGroups_FWD_DEFINED__
#define __IIcadGroups_FWD_DEFINED__
typedef interface IIcadGroups IIcadGroups;
#endif 	/* __IIcadGroups_FWD_DEFINED__ */


#ifndef __IIcadDbItem_FWD_DEFINED__
#define __IIcadDbItem_FWD_DEFINED__
typedef interface IIcadDbItem IIcadDbItem;
#endif 	/* __IIcadDbItem_FWD_DEFINED__ */


#ifndef __IIcadGroup_FWD_DEFINED__
#define __IIcadGroup_FWD_DEFINED__
typedef interface IIcadGroup IIcadGroup;
#endif 	/* __IIcadGroup_FWD_DEFINED__ */


#ifndef __IIcadDictionary_FWD_DEFINED__
#define __IIcadDictionary_FWD_DEFINED__
typedef interface IIcadDictionary IIcadDictionary;
#endif 	/* __IIcadDictionary_FWD_DEFINED__ */


#ifndef __IIcadXRecord_FWD_DEFINED__
#define __IIcadXRecord_FWD_DEFINED__
typedef interface IIcadXRecord IIcadXRecord;
#endif 	/* __IIcadXRecord_FWD_DEFINED__ */


#ifndef __IIcadDictionaries_FWD_DEFINED__
#define __IIcadDictionaries_FWD_DEFINED__
typedef interface IIcadDictionaries IIcadDictionaries;
#endif 	/* __IIcadDictionaries_FWD_DEFINED__ */


#ifndef __IIcadState_FWD_DEFINED__
#define __IIcadState_FWD_DEFINED__
typedef interface IIcadState IIcadState;
#endif 	/* __IIcadState_FWD_DEFINED__ */


#ifndef ___IcadWorkspaceEvents_FWD_DEFINED__
#define ___IcadWorkspaceEvents_FWD_DEFINED__
typedef interface _IcadWorkspaceEvents _IcadWorkspaceEvents;
#endif 	/* ___IcadWorkspaceEvents_FWD_DEFINED__ */


#ifndef __IZwcadApplicationEvents_FWD_DEFINED__
#define __IZwcadApplicationEvents_FWD_DEFINED__
typedef interface IZwcadApplicationEvents IZwcadApplicationEvents;
#endif 	/* __IZwcadApplicationEvents_FWD_DEFINED__ */


#ifndef __IIcadPlotConfiguration_FWD_DEFINED__
#define __IIcadPlotConfiguration_FWD_DEFINED__
typedef interface IIcadPlotConfiguration IIcadPlotConfiguration;
#endif 	/* __IIcadPlotConfiguration_FWD_DEFINED__ */


#ifndef __IIcadPlotConfigurations_FWD_DEFINED__
#define __IIcadPlotConfigurations_FWD_DEFINED__
typedef interface IIcadPlotConfigurations IIcadPlotConfigurations;
#endif 	/* __IIcadPlotConfigurations_FWD_DEFINED__ */


#ifndef __IIcadLayout_FWD_DEFINED__
#define __IIcadLayout_FWD_DEFINED__
typedef interface IIcadLayout IIcadLayout;
#endif 	/* __IIcadLayout_FWD_DEFINED__ */


#ifndef __IIcadLayouts_FWD_DEFINED__
#define __IIcadLayouts_FWD_DEFINED__
typedef interface IIcadLayouts IIcadLayouts;
#endif 	/* __IIcadLayouts_FWD_DEFINED__ */


#ifndef __IIcadPlot_FWD_DEFINED__
#define __IIcadPlot_FWD_DEFINED__
typedef interface IIcadPlot IIcadPlot;
#endif 	/* __IIcadPlot_FWD_DEFINED__ */


#ifndef __IIcadTableItem_FWD_DEFINED__
#define __IIcadTableItem_FWD_DEFINED__
typedef interface IIcadTableItem IIcadTableItem;
#endif 	/* __IIcadTableItem_FWD_DEFINED__ */


#ifndef __IIcadRegisteredApplication_FWD_DEFINED__
#define __IIcadRegisteredApplication_FWD_DEFINED__
typedef interface IIcadRegisteredApplication IIcadRegisteredApplication;
#endif 	/* __IIcadRegisteredApplication_FWD_DEFINED__ */


#ifndef __IIcadRegisteredApplications_FWD_DEFINED__
#define __IIcadRegisteredApplications_FWD_DEFINED__
typedef interface IIcadRegisteredApplications IIcadRegisteredApplications;
#endif 	/* __IIcadRegisteredApplications_FWD_DEFINED__ */


#ifndef __IIcadEntities_FWD_DEFINED__
#define __IIcadEntities_FWD_DEFINED__
typedef interface IIcadEntities IIcadEntities;
#endif 	/* __IIcadEntities_FWD_DEFINED__ */


#ifndef __IIcadBlock_FWD_DEFINED__
#define __IIcadBlock_FWD_DEFINED__
typedef interface IIcadBlock IIcadBlock;
#endif 	/* __IIcadBlock_FWD_DEFINED__ */


#ifndef __IIcadBlocks_FWD_DEFINED__
#define __IIcadBlocks_FWD_DEFINED__
typedef interface IIcadBlocks IIcadBlocks;
#endif 	/* __IIcadBlocks_FWD_DEFINED__ */


#ifndef __IIcadDimensionStyle_FWD_DEFINED__
#define __IIcadDimensionStyle_FWD_DEFINED__
typedef interface IIcadDimensionStyle IIcadDimensionStyle;
#endif 	/* __IIcadDimensionStyle_FWD_DEFINED__ */


#ifndef __IIcadDimensionStyles_FWD_DEFINED__
#define __IIcadDimensionStyles_FWD_DEFINED__
typedef interface IIcadDimensionStyles IIcadDimensionStyles;
#endif 	/* __IIcadDimensionStyles_FWD_DEFINED__ */


#ifndef __IIcadLayer_FWD_DEFINED__
#define __IIcadLayer_FWD_DEFINED__
typedef interface IIcadLayer IIcadLayer;
#endif 	/* __IIcadLayer_FWD_DEFINED__ */


#ifndef __IIcadLayers_FWD_DEFINED__
#define __IIcadLayers_FWD_DEFINED__
typedef interface IIcadLayers IIcadLayers;
#endif 	/* __IIcadLayers_FWD_DEFINED__ */


#ifndef __IIcadLinetype_FWD_DEFINED__
#define __IIcadLinetype_FWD_DEFINED__
typedef interface IIcadLinetype IIcadLinetype;
#endif 	/* __IIcadLinetype_FWD_DEFINED__ */


#ifndef __IIcadLinetypes_FWD_DEFINED__
#define __IIcadLinetypes_FWD_DEFINED__
typedef interface IIcadLinetypes IIcadLinetypes;
#endif 	/* __IIcadLinetypes_FWD_DEFINED__ */


#ifndef __IIcadTextStyle_FWD_DEFINED__
#define __IIcadTextStyle_FWD_DEFINED__
typedef interface IIcadTextStyle IIcadTextStyle;
#endif 	/* __IIcadTextStyle_FWD_DEFINED__ */


#ifndef __IIcadTextStyles_FWD_DEFINED__
#define __IIcadTextStyles_FWD_DEFINED__
typedef interface IIcadTextStyles IIcadTextStyles;
#endif 	/* __IIcadTextStyles_FWD_DEFINED__ */


#ifndef __IIcadUserCoordSystem_FWD_DEFINED__
#define __IIcadUserCoordSystem_FWD_DEFINED__
typedef interface IIcadUserCoordSystem IIcadUserCoordSystem;
#endif 	/* __IIcadUserCoordSystem_FWD_DEFINED__ */


#ifndef __IIcadUserCoordSystems_FWD_DEFINED__
#define __IIcadUserCoordSystems_FWD_DEFINED__
typedef interface IIcadUserCoordSystems IIcadUserCoordSystems;
#endif 	/* __IIcadUserCoordSystems_FWD_DEFINED__ */


#ifndef __IIcadView_FWD_DEFINED__
#define __IIcadView_FWD_DEFINED__
typedef interface IIcadView IIcadView;
#endif 	/* __IIcadView_FWD_DEFINED__ */


#ifndef __IIcadViews_FWD_DEFINED__
#define __IIcadViews_FWD_DEFINED__
typedef interface IIcadViews IIcadViews;
#endif 	/* __IIcadViews_FWD_DEFINED__ */


#ifndef __IIcadViewport_FWD_DEFINED__
#define __IIcadViewport_FWD_DEFINED__
typedef interface IIcadViewport IIcadViewport;
#endif 	/* __IIcadViewport_FWD_DEFINED__ */


#ifndef __IIcadViewports_FWD_DEFINED__
#define __IIcadViewports_FWD_DEFINED__
typedef interface IIcadViewports IIcadViewports;
#endif 	/* __IIcadViewports_FWD_DEFINED__ */


#ifndef __IIcadSelectionSet_FWD_DEFINED__
#define __IIcadSelectionSet_FWD_DEFINED__
typedef interface IIcadSelectionSet IIcadSelectionSet;
#endif 	/* __IIcadSelectionSet_FWD_DEFINED__ */


#ifndef __IIcadSelectionSets_FWD_DEFINED__
#define __IIcadSelectionSets_FWD_DEFINED__
typedef interface IIcadSelectionSets IIcadSelectionSets;
#endif 	/* __IIcadSelectionSets_FWD_DEFINED__ */


#ifndef __IIcadEntity_FWD_DEFINED__
#define __IIcadEntity_FWD_DEFINED__
typedef interface IIcadEntity IIcadEntity;
#endif 	/* __IIcadEntity_FWD_DEFINED__ */


#ifndef __IIcad3DFace_FWD_DEFINED__
#define __IIcad3DFace_FWD_DEFINED__
typedef interface IIcad3DFace IIcad3DFace;
#endif 	/* __IIcad3DFace_FWD_DEFINED__ */


#ifndef __IIcad3DPoly_FWD_DEFINED__
#define __IIcad3DPoly_FWD_DEFINED__
typedef interface IIcad3DPoly IIcad3DPoly;
#endif 	/* __IIcad3DPoly_FWD_DEFINED__ */


#ifndef __IIcadArc_FWD_DEFINED__
#define __IIcadArc_FWD_DEFINED__
typedef interface IIcadArc IIcadArc;
#endif 	/* __IIcadArc_FWD_DEFINED__ */


#ifndef __IIcadAttribute_FWD_DEFINED__
#define __IIcadAttribute_FWD_DEFINED__
typedef interface IIcadAttribute IIcadAttribute;
#endif 	/* __IIcadAttribute_FWD_DEFINED__ */


#ifndef __IIcadAttributeReference_FWD_DEFINED__
#define __IIcadAttributeReference_FWD_DEFINED__
typedef interface IIcadAttributeReference IIcadAttributeReference;
#endif 	/* __IIcadAttributeReference_FWD_DEFINED__ */


#ifndef __IIcadAttributeReferences_FWD_DEFINED__
#define __IIcadAttributeReferences_FWD_DEFINED__
typedef interface IIcadAttributeReferences IIcadAttributeReferences;
#endif 	/* __IIcadAttributeReferences_FWD_DEFINED__ */


#ifndef __IIcadBlockReference_FWD_DEFINED__
#define __IIcadBlockReference_FWD_DEFINED__
typedef interface IIcadBlockReference IIcadBlockReference;
#endif 	/* __IIcadBlockReference_FWD_DEFINED__ */


#ifndef __IIcadCircle_FWD_DEFINED__
#define __IIcadCircle_FWD_DEFINED__
typedef interface IIcadCircle IIcadCircle;
#endif 	/* __IIcadCircle_FWD_DEFINED__ */


#ifndef __IIcadEllipse_FWD_DEFINED__
#define __IIcadEllipse_FWD_DEFINED__
typedef interface IIcadEllipse IIcadEllipse;
#endif 	/* __IIcadEllipse_FWD_DEFINED__ */


#ifndef __IIcadHatch_FWD_DEFINED__
#define __IIcadHatch_FWD_DEFINED__
typedef interface IIcadHatch IIcadHatch;
#endif 	/* __IIcadHatch_FWD_DEFINED__ */


#ifndef __IIcadLeader_FWD_DEFINED__
#define __IIcadLeader_FWD_DEFINED__
typedef interface IIcadLeader IIcadLeader;
#endif 	/* __IIcadLeader_FWD_DEFINED__ */


#ifndef __IIcadLine_FWD_DEFINED__
#define __IIcadLine_FWD_DEFINED__
typedef interface IIcadLine IIcadLine;
#endif 	/* __IIcadLine_FWD_DEFINED__ */


#ifndef __IIcadLightWeightPolyline_FWD_DEFINED__
#define __IIcadLightWeightPolyline_FWD_DEFINED__
typedef interface IIcadLightWeightPolyline IIcadLightWeightPolyline;
#endif 	/* __IIcadLightWeightPolyline_FWD_DEFINED__ */


#ifndef __IIcadMText_FWD_DEFINED__
#define __IIcadMText_FWD_DEFINED__
typedef interface IIcadMText IIcadMText;
#endif 	/* __IIcadMText_FWD_DEFINED__ */


#ifndef __IIcadPointEntity_FWD_DEFINED__
#define __IIcadPointEntity_FWD_DEFINED__
typedef interface IIcadPointEntity IIcadPointEntity;
#endif 	/* __IIcadPointEntity_FWD_DEFINED__ */


#ifndef __IIcadPolyline_FWD_DEFINED__
#define __IIcadPolyline_FWD_DEFINED__
typedef interface IIcadPolyline IIcadPolyline;
#endif 	/* __IIcadPolyline_FWD_DEFINED__ */


#ifndef __IIcadPolygonMesh_FWD_DEFINED__
#define __IIcadPolygonMesh_FWD_DEFINED__
typedef interface IIcadPolygonMesh IIcadPolygonMesh;
#endif 	/* __IIcadPolygonMesh_FWD_DEFINED__ */


#ifndef __IIcadPolyfaceMesh_FWD_DEFINED__
#define __IIcadPolyfaceMesh_FWD_DEFINED__
typedef interface IIcadPolyfaceMesh IIcadPolyfaceMesh;
#endif 	/* __IIcadPolyfaceMesh_FWD_DEFINED__ */


#ifndef __IIcadPViewport_FWD_DEFINED__
#define __IIcadPViewport_FWD_DEFINED__
typedef interface IIcadPViewport IIcadPViewport;
#endif 	/* __IIcadPViewport_FWD_DEFINED__ */


#ifndef __IIcadRasterImage_FWD_DEFINED__
#define __IIcadRasterImage_FWD_DEFINED__
typedef interface IIcadRasterImage IIcadRasterImage;
#endif 	/* __IIcadRasterImage_FWD_DEFINED__ */


#ifndef __IIcadRay_FWD_DEFINED__
#define __IIcadRay_FWD_DEFINED__
typedef interface IIcadRay IIcadRay;
#endif 	/* __IIcadRay_FWD_DEFINED__ */


#ifndef __IIcadSolid_FWD_DEFINED__
#define __IIcadSolid_FWD_DEFINED__
typedef interface IIcadSolid IIcadSolid;
#endif 	/* __IIcadSolid_FWD_DEFINED__ */


#ifndef __IIcadSpline_FWD_DEFINED__
#define __IIcadSpline_FWD_DEFINED__
typedef interface IIcadSpline IIcadSpline;
#endif 	/* __IIcadSpline_FWD_DEFINED__ */


#ifndef __IIcadText_FWD_DEFINED__
#define __IIcadText_FWD_DEFINED__
typedef interface IIcadText IIcadText;
#endif 	/* __IIcadText_FWD_DEFINED__ */


#ifndef __IIcadTolerance_FWD_DEFINED__
#define __IIcadTolerance_FWD_DEFINED__
typedef interface IIcadTolerance IIcadTolerance;
#endif 	/* __IIcadTolerance_FWD_DEFINED__ */


#ifndef __IIcadTrace_FWD_DEFINED__
#define __IIcadTrace_FWD_DEFINED__
typedef interface IIcadTrace IIcadTrace;
#endif 	/* __IIcadTrace_FWD_DEFINED__ */


#ifndef __IIcadXline_FWD_DEFINED__
#define __IIcadXline_FWD_DEFINED__
typedef interface IIcadXline IIcadXline;
#endif 	/* __IIcadXline_FWD_DEFINED__ */


#ifndef __IIcadExternalReference_FWD_DEFINED__
#define __IIcadExternalReference_FWD_DEFINED__
typedef interface IIcadExternalReference IIcadExternalReference;
#endif 	/* __IIcadExternalReference_FWD_DEFINED__ */


#ifndef __IIcadOle_FWD_DEFINED__
#define __IIcadOle_FWD_DEFINED__
typedef interface IIcadOle IIcadOle;
#endif 	/* __IIcadOle_FWD_DEFINED__ */


#ifndef __IIcad3DSolid_FWD_DEFINED__
#define __IIcad3DSolid_FWD_DEFINED__
typedef interface IIcad3DSolid IIcad3DSolid;
#endif 	/* __IIcad3DSolid_FWD_DEFINED__ */


#ifndef __IIcadDimension_FWD_DEFINED__
#define __IIcadDimension_FWD_DEFINED__
typedef interface IIcadDimension IIcadDimension;
#endif 	/* __IIcadDimension_FWD_DEFINED__ */


#ifndef __IIcadDimAngular_FWD_DEFINED__
#define __IIcadDimAngular_FWD_DEFINED__
typedef interface IIcadDimAngular IIcadDimAngular;
#endif 	/* __IIcadDimAngular_FWD_DEFINED__ */


#ifndef __IIcadDimAligned_FWD_DEFINED__
#define __IIcadDimAligned_FWD_DEFINED__
typedef interface IIcadDimAligned IIcadDimAligned;
#endif 	/* __IIcadDimAligned_FWD_DEFINED__ */


#ifndef __IIcadDimDiametric_FWD_DEFINED__
#define __IIcadDimDiametric_FWD_DEFINED__
typedef interface IIcadDimDiametric IIcadDimDiametric;
#endif 	/* __IIcadDimDiametric_FWD_DEFINED__ */


#ifndef __IIcadDimOrdinate_FWD_DEFINED__
#define __IIcadDimOrdinate_FWD_DEFINED__
typedef interface IIcadDimOrdinate IIcadDimOrdinate;
#endif 	/* __IIcadDimOrdinate_FWD_DEFINED__ */


#ifndef __IIcadDimRadial_FWD_DEFINED__
#define __IIcadDimRadial_FWD_DEFINED__
typedef interface IIcadDimRadial IIcadDimRadial;
#endif 	/* __IIcadDimRadial_FWD_DEFINED__ */


#ifndef __IIcadDimRotated_FWD_DEFINED__
#define __IIcadDimRotated_FWD_DEFINED__
typedef interface IIcadDimRotated IIcadDimRotated;
#endif 	/* __IIcadDimRotated_FWD_DEFINED__ */


#ifndef __IIcadDim3PointAngular_FWD_DEFINED__
#define __IIcadDim3PointAngular_FWD_DEFINED__
typedef interface IIcadDim3PointAngular IIcadDim3PointAngular;
#endif 	/* __IIcadDim3PointAngular_FWD_DEFINED__ */


#ifndef __IIcadModelSpace_FWD_DEFINED__
#define __IIcadModelSpace_FWD_DEFINED__
typedef interface IIcadModelSpace IIcadModelSpace;
#endif 	/* __IIcadModelSpace_FWD_DEFINED__ */


#ifndef __IIcadPaperSpace_FWD_DEFINED__
#define __IIcadPaperSpace_FWD_DEFINED__
typedef interface IIcadPaperSpace IIcadPaperSpace;
#endif 	/* __IIcadPaperSpace_FWD_DEFINED__ */


#ifndef __IIcadDocument_FWD_DEFINED__
#define __IIcadDocument_FWD_DEFINED__
typedef interface IIcadDocument IIcadDocument;
#endif 	/* __IIcadDocument_FWD_DEFINED__ */


#ifndef ___EIcadDocument_FWD_DEFINED__
#define ___EIcadDocument_FWD_DEFINED__
typedef interface _EIcadDocument _EIcadDocument;
#endif 	/* ___EIcadDocument_FWD_DEFINED__ */


#ifndef __IIcadDatabasePreferences_FWD_DEFINED__
#define __IIcadDatabasePreferences_FWD_DEFINED__
typedef interface IIcadDatabasePreferences IIcadDatabasePreferences;
#endif 	/* __IIcadDatabasePreferences_FWD_DEFINED__ */


#ifndef __ZwcadDimension_FWD_DEFINED__
#define __ZwcadDimension_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimension ZwcadDimension;
#else
typedef struct ZwcadDimension ZwcadDimension;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimension_FWD_DEFINED__ */


#ifndef __ZwcadDimAngular_FWD_DEFINED__
#define __ZwcadDimAngular_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimAngular ZwcadDimAngular;
#else
typedef struct ZwcadDimAngular ZwcadDimAngular;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimAngular_FWD_DEFINED__ */


#ifndef __ZwcadDimAligned_FWD_DEFINED__
#define __ZwcadDimAligned_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimAligned ZwcadDimAligned;
#else
typedef struct ZwcadDimAligned ZwcadDimAligned;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimAligned_FWD_DEFINED__ */


#ifndef __ZwcadDimDiametric_FWD_DEFINED__
#define __ZwcadDimDiametric_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimDiametric ZwcadDimDiametric;
#else
typedef struct ZwcadDimDiametric ZwcadDimDiametric;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimDiametric_FWD_DEFINED__ */


#ifndef __ZwcadDimOrdinate_FWD_DEFINED__
#define __ZwcadDimOrdinate_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimOrdinate ZwcadDimOrdinate;
#else
typedef struct ZwcadDimOrdinate ZwcadDimOrdinate;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimOrdinate_FWD_DEFINED__ */


#ifndef __ZwcadDimRadial_FWD_DEFINED__
#define __ZwcadDimRadial_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimRadial ZwcadDimRadial;
#else
typedef struct ZwcadDimRadial ZwcadDimRadial;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimRadial_FWD_DEFINED__ */


#ifndef __ZwcadDimRotated_FWD_DEFINED__
#define __ZwcadDimRotated_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimRotated ZwcadDimRotated;
#else
typedef struct ZwcadDimRotated ZwcadDimRotated;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimRotated_FWD_DEFINED__ */


#ifndef __ZwcadDim3PointAngular_FWD_DEFINED__
#define __ZwcadDim3PointAngular_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDim3PointAngular ZwcadDim3PointAngular;
#else
typedef struct ZwcadDim3PointAngular ZwcadDim3PointAngular;
#endif /* __cplusplus */

#endif 	/* __ZwcadDim3PointAngular_FWD_DEFINED__ */


#ifndef __ZwcadModelSpace_FWD_DEFINED__
#define __ZwcadModelSpace_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadModelSpace ZwcadModelSpace;
#else
typedef struct ZwcadModelSpace ZwcadModelSpace;
#endif /* __cplusplus */

#endif 	/* __ZwcadModelSpace_FWD_DEFINED__ */


#ifndef __ZwcadPaperSpace_FWD_DEFINED__
#define __ZwcadPaperSpace_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPaperSpace ZwcadPaperSpace;
#else
typedef struct ZwcadPaperSpace ZwcadPaperSpace;
#endif /* __cplusplus */

#endif 	/* __ZwcadPaperSpace_FWD_DEFINED__ */


#ifndef __ZwcadDocument_FWD_DEFINED__
#define __ZwcadDocument_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDocument ZwcadDocument;
#else
typedef struct ZwcadDocument ZwcadDocument;
#endif /* __cplusplus */

#endif 	/* __ZwcadDocument_FWD_DEFINED__ */


#ifndef __ZwcadDatabasePreferences_FWD_DEFINED__
#define __ZwcadDatabasePreferences_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDatabasePreferences ZwcadDatabasePreferences;
#else
typedef struct ZwcadDatabasePreferences ZwcadDatabasePreferences;
#endif /* __cplusplus */

#endif 	/* __ZwcadDatabasePreferences_FWD_DEFINED__ */


#ifndef __ZwcadObject_FWD_DEFINED__
#define __ZwcadObject_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadObject ZwcadObject;
#else
typedef struct ZwcadObject ZwcadObject;
#endif /* __cplusplus */

#endif 	/* __ZwcadObject_FWD_DEFINED__ */


#ifndef __ZwcadEntity_FWD_DEFINED__
#define __ZwcadEntity_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadEntity ZwcadEntity;
#else
typedef struct ZwcadEntity ZwcadEntity;
#endif /* __cplusplus */

#endif 	/* __ZwcadEntity_FWD_DEFINED__ */


#ifndef __Zwcad3DFace_FWD_DEFINED__
#define __Zwcad3DFace_FWD_DEFINED__

#ifdef __cplusplus
typedef class Zwcad3DFace Zwcad3DFace;
#else
typedef struct Zwcad3DFace Zwcad3DFace;
#endif /* __cplusplus */

#endif 	/* __Zwcad3DFace_FWD_DEFINED__ */


#ifndef __Zwcad3DPolyline_FWD_DEFINED__
#define __Zwcad3DPolyline_FWD_DEFINED__

#ifdef __cplusplus
typedef class Zwcad3DPolyline Zwcad3DPolyline;
#else
typedef struct Zwcad3DPolyline Zwcad3DPolyline;
#endif /* __cplusplus */

#endif 	/* __Zwcad3DPolyline_FWD_DEFINED__ */


#ifndef __ZwcadArc_FWD_DEFINED__
#define __ZwcadArc_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadArc ZwcadArc;
#else
typedef struct ZwcadArc ZwcadArc;
#endif /* __cplusplus */

#endif 	/* __ZwcadArc_FWD_DEFINED__ */


#ifndef __ZwcadAttribute_FWD_DEFINED__
#define __ZwcadAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadAttribute ZwcadAttribute;
#else
typedef struct ZwcadAttribute ZwcadAttribute;
#endif /* __cplusplus */

#endif 	/* __ZwcadAttribute_FWD_DEFINED__ */


#ifndef __ZwcadAttributeReference_FWD_DEFINED__
#define __ZwcadAttributeReference_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadAttributeReference ZwcadAttributeReference;
#else
typedef struct ZwcadAttributeReference ZwcadAttributeReference;
#endif /* __cplusplus */

#endif 	/* __ZwcadAttributeReference_FWD_DEFINED__ */


#ifndef __ZwcadAttributeReferences_FWD_DEFINED__
#define __ZwcadAttributeReferences_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadAttributeReferences ZwcadAttributeReferences;
#else
typedef struct ZwcadAttributeReferences ZwcadAttributeReferences;
#endif /* __cplusplus */

#endif 	/* __ZwcadAttributeReferences_FWD_DEFINED__ */


#ifndef __ZwcadBlockReference_FWD_DEFINED__
#define __ZwcadBlockReference_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadBlockReference ZwcadBlockReference;
#else
typedef struct ZwcadBlockReference ZwcadBlockReference;
#endif /* __cplusplus */

#endif 	/* __ZwcadBlockReference_FWD_DEFINED__ */


#ifndef __ZwcadCircle_FWD_DEFINED__
#define __ZwcadCircle_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadCircle ZwcadCircle;
#else
typedef struct ZwcadCircle ZwcadCircle;
#endif /* __cplusplus */

#endif 	/* __ZwcadCircle_FWD_DEFINED__ */


#ifndef __ZwcadEllipse_FWD_DEFINED__
#define __ZwcadEllipse_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadEllipse ZwcadEllipse;
#else
typedef struct ZwcadEllipse ZwcadEllipse;
#endif /* __cplusplus */

#endif 	/* __ZwcadEllipse_FWD_DEFINED__ */


#ifndef __ZwcadHatch_FWD_DEFINED__
#define __ZwcadHatch_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadHatch ZwcadHatch;
#else
typedef struct ZwcadHatch ZwcadHatch;
#endif /* __cplusplus */

#endif 	/* __ZwcadHatch_FWD_DEFINED__ */


#ifndef __ZwcadLeader_FWD_DEFINED__
#define __ZwcadLeader_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLeader ZwcadLeader;
#else
typedef struct ZwcadLeader ZwcadLeader;
#endif /* __cplusplus */

#endif 	/* __ZwcadLeader_FWD_DEFINED__ */


#ifndef __ZwcadLine_FWD_DEFINED__
#define __ZwcadLine_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLine ZwcadLine;
#else
typedef struct ZwcadLine ZwcadLine;
#endif /* __cplusplus */

#endif 	/* __ZwcadLine_FWD_DEFINED__ */


#ifndef __ZwcadLWPolyline_FWD_DEFINED__
#define __ZwcadLWPolyline_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLWPolyline ZwcadLWPolyline;
#else
typedef struct ZwcadLWPolyline ZwcadLWPolyline;
#endif /* __cplusplus */

#endif 	/* __ZwcadLWPolyline_FWD_DEFINED__ */


#ifndef __ZwcadMText_FWD_DEFINED__
#define __ZwcadMText_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadMText ZwcadMText;
#else
typedef struct ZwcadMText ZwcadMText;
#endif /* __cplusplus */

#endif 	/* __ZwcadMText_FWD_DEFINED__ */


#ifndef __ZwcadPointEntity_FWD_DEFINED__
#define __ZwcadPointEntity_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPointEntity ZwcadPointEntity;
#else
typedef struct ZwcadPointEntity ZwcadPointEntity;
#endif /* __cplusplus */

#endif 	/* __ZwcadPointEntity_FWD_DEFINED__ */


#ifndef __ZwcadPolyline_FWD_DEFINED__
#define __ZwcadPolyline_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPolyline ZwcadPolyline;
#else
typedef struct ZwcadPolyline ZwcadPolyline;
#endif /* __cplusplus */

#endif 	/* __ZwcadPolyline_FWD_DEFINED__ */


#ifndef __ZwcadPolygonMesh_FWD_DEFINED__
#define __ZwcadPolygonMesh_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPolygonMesh ZwcadPolygonMesh;
#else
typedef struct ZwcadPolygonMesh ZwcadPolygonMesh;
#endif /* __cplusplus */

#endif 	/* __ZwcadPolygonMesh_FWD_DEFINED__ */


#ifndef __ZwcadPolyfaceMesh_FWD_DEFINED__
#define __ZwcadPolyfaceMesh_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPolyfaceMesh ZwcadPolyfaceMesh;
#else
typedef struct ZwcadPolyfaceMesh ZwcadPolyfaceMesh;
#endif /* __cplusplus */

#endif 	/* __ZwcadPolyfaceMesh_FWD_DEFINED__ */


#ifndef __ZwcadPViewport_FWD_DEFINED__
#define __ZwcadPViewport_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPViewport ZwcadPViewport;
#else
typedef struct ZwcadPViewport ZwcadPViewport;
#endif /* __cplusplus */

#endif 	/* __ZwcadPViewport_FWD_DEFINED__ */


#ifndef __ZwcadRasterImage_FWD_DEFINED__
#define __ZwcadRasterImage_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadRasterImage ZwcadRasterImage;
#else
typedef struct ZwcadRasterImage ZwcadRasterImage;
#endif /* __cplusplus */

#endif 	/* __ZwcadRasterImage_FWD_DEFINED__ */


#ifndef __ZwcadRay_FWD_DEFINED__
#define __ZwcadRay_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadRay ZwcadRay;
#else
typedef struct ZwcadRay ZwcadRay;
#endif /* __cplusplus */

#endif 	/* __ZwcadRay_FWD_DEFINED__ */


#ifndef __ZwcadShape_FWD_DEFINED__
#define __ZwcadShape_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadShape ZwcadShape;
#else
typedef struct ZwcadShape ZwcadShape;
#endif /* __cplusplus */

#endif 	/* __ZwcadShape_FWD_DEFINED__ */


#ifndef __ZwcadSolid_FWD_DEFINED__
#define __ZwcadSolid_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadSolid ZwcadSolid;
#else
typedef struct ZwcadSolid ZwcadSolid;
#endif /* __cplusplus */

#endif 	/* __ZwcadSolid_FWD_DEFINED__ */


#ifndef __ZwcadSpline_FWD_DEFINED__
#define __ZwcadSpline_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadSpline ZwcadSpline;
#else
typedef struct ZwcadSpline ZwcadSpline;
#endif /* __cplusplus */

#endif 	/* __ZwcadSpline_FWD_DEFINED__ */


#ifndef __ZwcadText_FWD_DEFINED__
#define __ZwcadText_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadText ZwcadText;
#else
typedef struct ZwcadText ZwcadText;
#endif /* __cplusplus */

#endif 	/* __ZwcadText_FWD_DEFINED__ */


#ifndef __ZwcadTolerance_FWD_DEFINED__
#define __ZwcadTolerance_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadTolerance ZwcadTolerance;
#else
typedef struct ZwcadTolerance ZwcadTolerance;
#endif /* __cplusplus */

#endif 	/* __ZwcadTolerance_FWD_DEFINED__ */


#ifndef __ZwcadTrace_FWD_DEFINED__
#define __ZwcadTrace_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadTrace ZwcadTrace;
#else
typedef struct ZwcadTrace ZwcadTrace;
#endif /* __cplusplus */

#endif 	/* __ZwcadTrace_FWD_DEFINED__ */


#ifndef __ZwcadXline_FWD_DEFINED__
#define __ZwcadXline_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadXline ZwcadXline;
#else
typedef struct ZwcadXline ZwcadXline;
#endif /* __cplusplus */

#endif 	/* __ZwcadXline_FWD_DEFINED__ */


#ifndef __ZwcadExternalReference_FWD_DEFINED__
#define __ZwcadExternalReference_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadExternalReference ZwcadExternalReference;
#else
typedef struct ZwcadExternalReference ZwcadExternalReference;
#endif /* __cplusplus */

#endif 	/* __ZwcadExternalReference_FWD_DEFINED__ */


#ifndef __ZwcadDocuments_FWD_DEFINED__
#define __ZwcadDocuments_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDocuments ZwcadDocuments;
#else
typedef struct ZwcadDocuments ZwcadDocuments;
#endif /* __cplusplus */

#endif 	/* __ZwcadDocuments_FWD_DEFINED__ */


#ifndef __ZwcadWindows_FWD_DEFINED__
#define __ZwcadWindows_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadWindows ZwcadWindows;
#else
typedef struct ZwcadWindows ZwcadWindows;
#endif /* __cplusplus */

#endif 	/* __ZwcadWindows_FWD_DEFINED__ */


#ifndef __ZwcadWindow_FWD_DEFINED__
#define __ZwcadWindow_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadWindow ZwcadWindow;
#else
typedef struct ZwcadWindow ZwcadWindow;
#endif /* __cplusplus */

#endif 	/* __ZwcadWindow_FWD_DEFINED__ */


#ifndef __ZwcadApplication_FWD_DEFINED__
#define __ZwcadApplication_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadApplication ZwcadApplication;
#else
typedef struct ZwcadApplication ZwcadApplication;
#endif /* __cplusplus */

#endif 	/* __ZwcadApplication_FWD_DEFINED__ */


#ifndef __ZwcadWorkspace_FWD_DEFINED__
#define __ZwcadWorkspace_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadWorkspace ZwcadWorkspace;
#else
typedef struct ZwcadWorkspace ZwcadWorkspace;
#endif /* __cplusplus */

#endif 	/* __ZwcadWorkspace_FWD_DEFINED__ */


#ifndef __ZwcadApplicationPreferences_FWD_DEFINED__
#define __ZwcadApplicationPreferences_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadApplicationPreferences ZwcadApplicationPreferences;
#else
typedef struct ZwcadApplicationPreferences ZwcadApplicationPreferences;
#endif /* __cplusplus */

#endif 	/* __ZwcadApplicationPreferences_FWD_DEFINED__ */


#ifndef __ZwcadPoint_FWD_DEFINED__
#define __ZwcadPoint_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPoint ZwcadPoint;
#else
typedef struct ZwcadPoint ZwcadPoint;
#endif /* __cplusplus */

#endif 	/* __ZwcadPoint_FWD_DEFINED__ */


#ifndef __ZwcadPoints_FWD_DEFINED__
#define __ZwcadPoints_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPoints ZwcadPoints;
#else
typedef struct ZwcadPoints ZwcadPoints;
#endif /* __cplusplus */

#endif 	/* __ZwcadPoints_FWD_DEFINED__ */


#ifndef __ZwcadVector_FWD_DEFINED__
#define __ZwcadVector_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadVector ZwcadVector;
#else
typedef struct ZwcadVector ZwcadVector;
#endif /* __cplusplus */

#endif 	/* __ZwcadVector_FWD_DEFINED__ */


#ifndef __ZwcadMatrix_FWD_DEFINED__
#define __ZwcadMatrix_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadMatrix ZwcadMatrix;
#else
typedef struct ZwcadMatrix ZwcadMatrix;
#endif /* __cplusplus */

#endif 	/* __ZwcadMatrix_FWD_DEFINED__ */


#ifndef __ZwcadLibrary_FWD_DEFINED__
#define __ZwcadLibrary_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLibrary ZwcadLibrary;
#else
typedef struct ZwcadLibrary ZwcadLibrary;
#endif /* __cplusplus */

#endif 	/* __ZwcadLibrary_FWD_DEFINED__ */


#ifndef __ZwcadUtility_FWD_DEFINED__
#define __ZwcadUtility_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadUtility ZwcadUtility;
#else
typedef struct ZwcadUtility ZwcadUtility;
#endif /* __cplusplus */

#endif 	/* __ZwcadUtility_FWD_DEFINED__ */


#ifndef __ZwcadRegisteredApplication_FWD_DEFINED__
#define __ZwcadRegisteredApplication_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadRegisteredApplication ZwcadRegisteredApplication;
#else
typedef struct ZwcadRegisteredApplication ZwcadRegisteredApplication;
#endif /* __cplusplus */

#endif 	/* __ZwcadRegisteredApplication_FWD_DEFINED__ */


#ifndef __ZwcadRegisteredApplications_FWD_DEFINED__
#define __ZwcadRegisteredApplications_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadRegisteredApplications ZwcadRegisteredApplications;
#else
typedef struct ZwcadRegisteredApplications ZwcadRegisteredApplications;
#endif /* __cplusplus */

#endif 	/* __ZwcadRegisteredApplications_FWD_DEFINED__ */


#ifndef __ZwcadBlock_FWD_DEFINED__
#define __ZwcadBlock_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadBlock ZwcadBlock;
#else
typedef struct ZwcadBlock ZwcadBlock;
#endif /* __cplusplus */

#endif 	/* __ZwcadBlock_FWD_DEFINED__ */


#ifndef __ZwcadBlocks_FWD_DEFINED__
#define __ZwcadBlocks_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadBlocks ZwcadBlocks;
#else
typedef struct ZwcadBlocks ZwcadBlocks;
#endif /* __cplusplus */

#endif 	/* __ZwcadBlocks_FWD_DEFINED__ */


#ifndef __ZwcadDimStyle_FWD_DEFINED__
#define __ZwcadDimStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimStyle ZwcadDimStyle;
#else
typedef struct ZwcadDimStyle ZwcadDimStyle;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimStyle_FWD_DEFINED__ */


#ifndef __ZwcadDimStyles_FWD_DEFINED__
#define __ZwcadDimStyles_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDimStyles ZwcadDimStyles;
#else
typedef struct ZwcadDimStyles ZwcadDimStyles;
#endif /* __cplusplus */

#endif 	/* __ZwcadDimStyles_FWD_DEFINED__ */


#ifndef __ZwcadLayer_FWD_DEFINED__
#define __ZwcadLayer_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLayer ZwcadLayer;
#else
typedef struct ZwcadLayer ZwcadLayer;
#endif /* __cplusplus */

#endif 	/* __ZwcadLayer_FWD_DEFINED__ */


#ifndef __ZwcadLayers_FWD_DEFINED__
#define __ZwcadLayers_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLayers ZwcadLayers;
#else
typedef struct ZwcadLayers ZwcadLayers;
#endif /* __cplusplus */

#endif 	/* __ZwcadLayers_FWD_DEFINED__ */


#ifndef __ZwcadLinetype_FWD_DEFINED__
#define __ZwcadLinetype_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLinetype ZwcadLinetype;
#else
typedef struct ZwcadLinetype ZwcadLinetype;
#endif /* __cplusplus */

#endif 	/* __ZwcadLinetype_FWD_DEFINED__ */


#ifndef __ZwcadLinetypes_FWD_DEFINED__
#define __ZwcadLinetypes_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLinetypes ZwcadLinetypes;
#else
typedef struct ZwcadLinetypes ZwcadLinetypes;
#endif /* __cplusplus */

#endif 	/* __ZwcadLinetypes_FWD_DEFINED__ */


#ifndef __ZwcadTextStyle_FWD_DEFINED__
#define __ZwcadTextStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadTextStyle ZwcadTextStyle;
#else
typedef struct ZwcadTextStyle ZwcadTextStyle;
#endif /* __cplusplus */

#endif 	/* __ZwcadTextStyle_FWD_DEFINED__ */


#ifndef __ZwcadTextStyles_FWD_DEFINED__
#define __ZwcadTextStyles_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadTextStyles ZwcadTextStyles;
#else
typedef struct ZwcadTextStyles ZwcadTextStyles;
#endif /* __cplusplus */

#endif 	/* __ZwcadTextStyles_FWD_DEFINED__ */


#ifndef __ZwcadUCS_FWD_DEFINED__
#define __ZwcadUCS_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadUCS ZwcadUCS;
#else
typedef struct ZwcadUCS ZwcadUCS;
#endif /* __cplusplus */

#endif 	/* __ZwcadUCS_FWD_DEFINED__ */


#ifndef __ZwcadUCSs_FWD_DEFINED__
#define __ZwcadUCSs_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadUCSs ZwcadUCSs;
#else
typedef struct ZwcadUCSs ZwcadUCSs;
#endif /* __cplusplus */

#endif 	/* __ZwcadUCSs_FWD_DEFINED__ */


#ifndef __ZwcadView_FWD_DEFINED__
#define __ZwcadView_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadView ZwcadView;
#else
typedef struct ZwcadView ZwcadView;
#endif /* __cplusplus */

#endif 	/* __ZwcadView_FWD_DEFINED__ */


#ifndef __ZwcadViews_FWD_DEFINED__
#define __ZwcadViews_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadViews ZwcadViews;
#else
typedef struct ZwcadViews ZwcadViews;
#endif /* __cplusplus */

#endif 	/* __ZwcadViews_FWD_DEFINED__ */


#ifndef __ZwcadViewport_FWD_DEFINED__
#define __ZwcadViewport_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadViewport ZwcadViewport;
#else
typedef struct ZwcadViewport ZwcadViewport;
#endif /* __cplusplus */

#endif 	/* __ZwcadViewport_FWD_DEFINED__ */


#ifndef __ZwcadViewports_FWD_DEFINED__
#define __ZwcadViewports_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadViewports ZwcadViewports;
#else
typedef struct ZwcadViewports ZwcadViewports;
#endif /* __cplusplus */

#endif 	/* __ZwcadViewports_FWD_DEFINED__ */


#ifndef __ZwcadSelectionSet_FWD_DEFINED__
#define __ZwcadSelectionSet_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadSelectionSet ZwcadSelectionSet;
#else
typedef struct ZwcadSelectionSet ZwcadSelectionSet;
#endif /* __cplusplus */

#endif 	/* __ZwcadSelectionSet_FWD_DEFINED__ */


#ifndef __ZwcadSelectionSets_FWD_DEFINED__
#define __ZwcadSelectionSets_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadSelectionSets ZwcadSelectionSets;
#else
typedef struct ZwcadSelectionSets ZwcadSelectionSets;
#endif /* __cplusplus */

#endif 	/* __ZwcadSelectionSets_FWD_DEFINED__ */


#ifndef __ZwcadPlotterPen_FWD_DEFINED__
#define __ZwcadPlotterPen_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPlotterPen ZwcadPlotterPen;
#else
typedef struct ZwcadPlotterPen ZwcadPlotterPen;
#endif /* __cplusplus */

#endif 	/* __ZwcadPlotterPen_FWD_DEFINED__ */


#ifndef __ZwcadPlotterPens_FWD_DEFINED__
#define __ZwcadPlotterPens_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPlotterPens ZwcadPlotterPens;
#else
typedef struct ZwcadPlotterPens ZwcadPlotterPens;
#endif /* __cplusplus */

#endif 	/* __ZwcadPlotterPens_FWD_DEFINED__ */


#ifndef __ZwcadPlotProperties_FWD_DEFINED__
#define __ZwcadPlotProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPlotProperties ZwcadPlotProperties;
#else
typedef struct ZwcadPlotProperties ZwcadPlotProperties;
#endif /* __cplusplus */

#endif 	/* __ZwcadPlotProperties_FWD_DEFINED__ */


#ifndef __ZwcadPlotManager_FWD_DEFINED__
#define __ZwcadPlotManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPlotManager ZwcadPlotManager;
#else
typedef struct ZwcadPlotManager ZwcadPlotManager;
#endif /* __cplusplus */

#endif 	/* __ZwcadPlotManager_FWD_DEFINED__ */


#ifndef __ZwcadGroup_FWD_DEFINED__
#define __ZwcadGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadGroup ZwcadGroup;
#else
typedef struct ZwcadGroup ZwcadGroup;
#endif /* __cplusplus */

#endif 	/* __ZwcadGroup_FWD_DEFINED__ */


#ifndef __ZwcadGroups_FWD_DEFINED__
#define __ZwcadGroups_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadGroups ZwcadGroups;
#else
typedef struct ZwcadGroups ZwcadGroups;
#endif /* __cplusplus */

#endif 	/* __ZwcadGroups_FWD_DEFINED__ */


#ifndef __ZwcadRegion_FWD_DEFINED__
#define __ZwcadRegion_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadRegion ZwcadRegion;
#else
typedef struct ZwcadRegion ZwcadRegion;
#endif /* __cplusplus */

#endif 	/* __ZwcadRegion_FWD_DEFINED__ */


#ifndef __ZwcadMLine_FWD_DEFINED__
#define __ZwcadMLine_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadMLine ZwcadMLine;
#else
typedef struct ZwcadMLine ZwcadMLine;
#endif /* __cplusplus */

#endif 	/* __ZwcadMLine_FWD_DEFINED__ */


#ifndef __ZwcadXRecord_FWD_DEFINED__
#define __ZwcadXRecord_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadXRecord ZwcadXRecord;
#else
typedef struct ZwcadXRecord ZwcadXRecord;
#endif /* __cplusplus */

#endif 	/* __ZwcadXRecord_FWD_DEFINED__ */


#ifndef __ZwcadDictionary_FWD_DEFINED__
#define __ZwcadDictionary_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDictionary ZwcadDictionary;
#else
typedef struct ZwcadDictionary ZwcadDictionary;
#endif /* __cplusplus */

#endif 	/* __ZwcadDictionary_FWD_DEFINED__ */


#ifndef __ZwcadDictionaries_FWD_DEFINED__
#define __ZwcadDictionaries_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadDictionaries ZwcadDictionaries;
#else
typedef struct ZwcadDictionaries ZwcadDictionaries;
#endif /* __cplusplus */

#endif 	/* __ZwcadDictionaries_FWD_DEFINED__ */


#ifndef __ZwcadState_FWD_DEFINED__
#define __ZwcadState_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadState ZwcadState;
#else
typedef struct ZwcadState ZwcadState;
#endif /* __cplusplus */

#endif 	/* __ZwcadState_FWD_DEFINED__ */


#ifndef __ZwcadHyperlinks_FWD_DEFINED__
#define __ZwcadHyperlinks_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadHyperlinks ZwcadHyperlinks;
#else
typedef struct ZwcadHyperlinks ZwcadHyperlinks;
#endif /* __cplusplus */

#endif 	/* __ZwcadHyperlinks_FWD_DEFINED__ */


#ifndef __ZwcadHyperlink_FWD_DEFINED__
#define __ZwcadHyperlink_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadHyperlink ZwcadHyperlink;
#else
typedef struct ZwcadHyperlink ZwcadHyperlink;
#endif /* __cplusplus */

#endif 	/* __ZwcadHyperlink_FWD_DEFINED__ */


#ifndef __ZwcadPlotConfiguration_FWD_DEFINED__
#define __ZwcadPlotConfiguration_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPlotConfiguration ZwcadPlotConfiguration;
#else
typedef struct ZwcadPlotConfiguration ZwcadPlotConfiguration;
#endif /* __cplusplus */

#endif 	/* __ZwcadPlotConfiguration_FWD_DEFINED__ */


#ifndef __ZwcadPlotConfigurations_FWD_DEFINED__
#define __ZwcadPlotConfigurations_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPlotConfigurations ZwcadPlotConfigurations;
#else
typedef struct ZwcadPlotConfigurations ZwcadPlotConfigurations;
#endif /* __cplusplus */

#endif 	/* __ZwcadPlotConfigurations_FWD_DEFINED__ */


#ifndef __ZwcadLayout_FWD_DEFINED__
#define __ZwcadLayout_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLayout ZwcadLayout;
#else
typedef struct ZwcadLayout ZwcadLayout;
#endif /* __cplusplus */

#endif 	/* __ZwcadLayout_FWD_DEFINED__ */


#ifndef __ZwcadLayouts_FWD_DEFINED__
#define __ZwcadLayouts_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadLayouts ZwcadLayouts;
#else
typedef struct ZwcadLayouts ZwcadLayouts;
#endif /* __cplusplus */

#endif 	/* __ZwcadLayouts_FWD_DEFINED__ */


#ifndef __ZwcadPlot_FWD_DEFINED__
#define __ZwcadPlot_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPlot ZwcadPlot;
#else
typedef struct ZwcadPlot ZwcadPlot;
#endif /* __cplusplus */

#endif 	/* __ZwcadPlot_FWD_DEFINED__ */


#ifndef __ZwcadSummaryInfo_FWD_DEFINED__
#define __ZwcadSummaryInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadSummaryInfo ZwcadSummaryInfo;
#else
typedef struct ZwcadSummaryInfo ZwcadSummaryInfo;
#endif /* __cplusplus */

#endif 	/* __ZwcadSummaryInfo_FWD_DEFINED__ */


#ifndef __ZwcadSortentsTable_FWD_DEFINED__
#define __ZwcadSortentsTable_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadSortentsTable ZwcadSortentsTable;
#else
typedef struct ZwcadSortentsTable ZwcadSortentsTable;
#endif /* __cplusplus */

#endif 	/* __ZwcadSortentsTable_FWD_DEFINED__ */


#ifndef __ZwcadOle_FWD_DEFINED__
#define __ZwcadOle_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadOle ZwcadOle;
#else
typedef struct ZwcadOle ZwcadOle;
#endif /* __cplusplus */

#endif 	/* __ZwcadOle_FWD_DEFINED__ */


#ifndef __ZwcadAcCmColor_FWD_DEFINED__
#define __ZwcadAcCmColor_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadAcCmColor ZwcadAcCmColor;
#else
typedef struct ZwcadAcCmColor ZwcadAcCmColor;
#endif /* __cplusplus */

#endif 	/* __ZwcadAcCmColor_FWD_DEFINED__ */


#ifndef __Zwcad3DSolid_FWD_DEFINED__
#define __Zwcad3DSolid_FWD_DEFINED__

#ifdef __cplusplus
typedef class Zwcad3DSolid Zwcad3DSolid;
#else
typedef struct Zwcad3DSolid Zwcad3DSolid;
#endif /* __cplusplus */

#endif 	/* __Zwcad3DSolid_FWD_DEFINED__ */


#ifndef __ZwcadMenuBar_FWD_DEFINED__
#define __ZwcadMenuBar_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadMenuBar ZwcadMenuBar;
#else
typedef struct ZwcadMenuBar ZwcadMenuBar;
#endif /* __cplusplus */

#endif 	/* __ZwcadMenuBar_FWD_DEFINED__ */


#ifndef __ZwcadMenuGroups_FWD_DEFINED__
#define __ZwcadMenuGroups_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadMenuGroups ZwcadMenuGroups;
#else
typedef struct ZwcadMenuGroups ZwcadMenuGroups;
#endif /* __cplusplus */

#endif 	/* __ZwcadMenuGroups_FWD_DEFINED__ */


#ifndef __ZwcadMenuGroup_FWD_DEFINED__
#define __ZwcadMenuGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadMenuGroup ZwcadMenuGroup;
#else
typedef struct ZwcadMenuGroup ZwcadMenuGroup;
#endif /* __cplusplus */

#endif 	/* __ZwcadMenuGroup_FWD_DEFINED__ */


#ifndef __ZwcadPopupMenus_FWD_DEFINED__
#define __ZwcadPopupMenus_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPopupMenus ZwcadPopupMenus;
#else
typedef struct ZwcadPopupMenus ZwcadPopupMenus;
#endif /* __cplusplus */

#endif 	/* __ZwcadPopupMenus_FWD_DEFINED__ */


#ifndef __ZwcadPopupMenu_FWD_DEFINED__
#define __ZwcadPopupMenu_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPopupMenu ZwcadPopupMenu;
#else
typedef struct ZwcadPopupMenu ZwcadPopupMenu;
#endif /* __cplusplus */

#endif 	/* __ZwcadPopupMenu_FWD_DEFINED__ */


#ifndef __ZwcadPopupMenuItem_FWD_DEFINED__
#define __ZwcadPopupMenuItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadPopupMenuItem ZwcadPopupMenuItem;
#else
typedef struct ZwcadPopupMenuItem ZwcadPopupMenuItem;
#endif /* __cplusplus */

#endif 	/* __ZwcadPopupMenuItem_FWD_DEFINED__ */


#ifndef __ZwcadToolbars_FWD_DEFINED__
#define __ZwcadToolbars_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadToolbars ZwcadToolbars;
#else
typedef struct ZwcadToolbars ZwcadToolbars;
#endif /* __cplusplus */

#endif 	/* __ZwcadToolbars_FWD_DEFINED__ */


#ifndef __ZwcadToolbar_FWD_DEFINED__
#define __ZwcadToolbar_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadToolbar ZwcadToolbar;
#else
typedef struct ZwcadToolbar ZwcadToolbar;
#endif /* __cplusplus */

#endif 	/* __ZwcadToolbar_FWD_DEFINED__ */


#ifndef __ZwcadToolbarItem_FWD_DEFINED__
#define __ZwcadToolbarItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZwcadToolbarItem ZwcadToolbarItem;
#else
typedef struct ZwcadToolbarItem ZwcadToolbarItem;
#endif /* __cplusplus */

#endif 	/* __ZwcadToolbarItem_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_Icad_0000_0000 */
/* [local] */ 






























































































































































typedef /* [helpstring][uuid] */  DECLSPEC_UUID("507cd46b-00de-4ce2-bbc2-ff31e859e105") 
enum ZcAttachmentPoint
    {	zcAttachmentPointTopLeft	= 1,
	zcAttachmentPointTopCenter	= 2,
	zcAttachmentPointTopRight	= 3,
	zcAttachmentPointMiddleLeft	= 4,
	zcAttachmentPointMiddleCenter	= 5,
	zcAttachmentPointMiddleRight	= 6,
	zcAttachmentPointBottomLeft	= 7,
	zcAttachmentPointBottomCenter	= 8,
	zcAttachmentPointBottomRight	= 9
    } 	ZcAttachmentPoint;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("2dcd79d8-d8df-4e45-9501-30601180d354") 
enum ZcTextGenerationFlag
    {	zcTextFlagNormal	= 0,
	zcTextFlagBackward	= 2,
	zcTextFlagUpsideDown	= 4
    } 	ZcTextGenerationFlag;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("f7df3898-f4cd-4a1e-a779-50bf3bb4a4f3") 
enum ZcDrawingDirection
    {	zcLeftToRight	= 1,
	zcRightToLeft	= 2,
	zcTopToBottom	= 3,
	zcBottomToTop	= 4,
	zcByStyle	= 5
    } 	ZcDrawingDirection;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("c402f894-5aa3-47a5-9796-41409a43d490") 
enum ZcAttributeMode
    {	zcAttributeModeNormal	= 0,
	zcAttributeModeInvisible	= 1,
	zcAttributeModeConstant	= 2,
	zcAttributeModeVerify	= 4,
	zcAttributeModePreset	= 8
    } 	ZcAttributeMode;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("d8a22cdc-0346-4ce0-a25a-f48f662cd886") 
enum ZcColors
    {	zcVariousColors	= -2,
	zcColorXOr	= -1,
	zcByBlock	= 0,
	zcRed	= 1,
	zcYellow	= 2,
	zcGreen	= 3,
	zcCyan	= 4,
	zcBlue	= 5,
	zcMagenta	= 6,
	zcWhite	= 7,
	zcByLayer	= 256
    } 	ZcColors;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("7f731902-979b-4e9d-afa4-f791f2188747") 
enum ZcDistanceUnits
    {	zcScientific	= 1,
	zcDecimal	= 2,
	zcEngineering	= 3,
	zcArchitectural	= 4,
	zcFractional	= 5
    } 	ZcDistanceUnits;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("3fdcbb26-046f-48d4-b89d-25e530457777") 
enum ZcAngleUnits
    {	zcDegrees	= 0,
	zcDegreeMinuteSeconds	= 1,
	zcGrads	= 2,
	zcRadians	= 3,
	zcSurveyorUnits	= 4
    } 	ZcAngleUnits;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("958f820c-6903-4d67-b432-10d03c8e3610") 
enum ZcEntityType
    {	zcUnknownEntity	= 0,
	zc3dFace	= ( zcUnknownEntity + 1 ) ,
	zc3dPoly	= ( zc3dFace + 1 ) ,
	zc3dSolid	= ( zc3dPoly + 1 ) ,
	zcArc	= ( zc3dSolid + 1 ) ,
	zcAttributeReference	= ( zcArc + 1 ) ,
	zcAttribute	= ( zcAttributeReference + 1 ) ,
	zcBlockInsert	= ( zcAttribute + 1 ) ,
	zcCircle	= ( zcBlockInsert + 1 ) ,
	zcDim3PointAngular	= ( zcCircle + 1 ) ,
	zcDimAligned	= ( zcDim3PointAngular + 1 ) ,
	zcDimAngular	= ( zcDimAligned + 1 ) ,
	zcDimDiametric	= ( zcDimAngular + 1 ) ,
	zcDimOrdinate	= ( zcDimDiametric + 1 ) ,
	zcDimRadial	= ( zcDimOrdinate + 1 ) ,
	zcDimRotated	= ( zcDimRadial + 1 ) ,
	zcEllipse	= ( zcDimRotated + 1 ) ,
	zcExternalReference	= ( zcEllipse + 1 ) ,
	zcHatch	= ( zcExternalReference + 1 ) ,
	zcRaster	= ( zcHatch + 1 ) ,
	zcXline	= ( zcRaster + 1 ) ,
	zcLeader	= ( zcXline + 1 ) ,
	zcLine	= ( zcLeader + 1 ) ,
	zcLWPolyline	= ( zcLine + 1 ) ,
	zcMLine	= ( zcLWPolyline + 1 ) ,
	zcMtext	= ( zcMLine + 1 ) ,
	zcOle	= ( zcMtext + 1 ) ,
	zcPointEntity	= ( zcOle + 1 ) ,
	zcPolyline	= ( zcPointEntity + 1 ) ,
	zcPolygonMesh	= ( zcPolyline + 1 ) ,
	zcPolyfaceMesh	= ( zcPolygonMesh + 1 ) ,
	zcPViewport	= ( zcPolyfaceMesh + 1 ) ,
	zcRay	= ( zcPViewport + 1 ) ,
	zcRegion	= ( zcRay + 1 ) ,
	zcShape	= ( zcRegion + 1 ) ,
	zcSolid	= ( zcShape + 1 ) ,
	zcSpline	= ( zcSolid + 1 ) ,
	zcText	= ( zcSpline + 1 ) ,
	zcTolerance	= ( zcText + 1 ) ,
	zcTrace	= ( zcTolerance + 1 ) 
    } 	ZcEntityType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("1c3f6aa1-4dcd-416e-9715-7bb6de1aa269") 
enum ZcPMSpace
    {	zcPaperSpace	= 0,
	zcModelSpace	= ( zcPaperSpace + 1 ) 
    } 	ZcPMSpace;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("9509179d-45a2-4e48-93f6-b6f2ff3806b3") 
enum ZcHatchStyle
    {	zcHatchStyleNormal	= 0,
	zcHatchStyleOuter	= ( zcHatchStyleNormal + 1 ) ,
	zcHatchStyleIgnore	= ( zcHatchStyleOuter + 1 ) 
    } 	ZcHatchStyle;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("166579e4-02f8-4c77-a5df-7140a8acd2ed") 
enum ZcHatchType
    {	zcHatchPatternTypeUserDefined	= 0,
	zcHatchPatternTypePreDefined	= ( zcHatchPatternTypeUserDefined + 1 ) ,
	zcHatchPatternTypeCustomDefined	= ( zcHatchPatternTypePreDefined + 1 ) 
    } 	ZcHatchType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("74d626fd-8a6f-4d06-b960-a71da093cca8") 
enum ZcHorizontalAlignment
    {	zcHorizontalAlignmentLeft	= 0,
	zcHorizontalAlignmentCenter	= ( zcHorizontalAlignmentLeft + 1 ) ,
	zcHorizontalAlignmentRight	= ( zcHorizontalAlignmentCenter + 1 ) ,
	zcHorizontalAlignmentAligned	= ( zcHorizontalAlignmentRight + 1 ) ,
	zcHorizontalAlignmentMiddle	= ( zcHorizontalAlignmentAligned + 1 ) ,
	zcHorizontalAlignmentFit	= ( zcHorizontalAlignmentMiddle + 1 ) 
    } 	ZcHorizontalAlignment;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("47c4aab5-50ee-41e1-90d3-217638f0cc96") 
enum ZcVerticalAlignment
    {	zcVerticalAlignmentBaseline	= 0,
	zcVerticalAlignmentBottom	= ( zcVerticalAlignmentBaseline + 1 ) ,
	zcVerticalAlignmentMiddle	= ( zcVerticalAlignmentBottom + 1 ) ,
	zcVerticalAlignmentTop	= ( zcVerticalAlignmentMiddle + 1 ) 
    } 	ZcVerticalAlignment;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("42f3af06-7ed3-4263-b312-5d2a6e86bee8") 
enum ZcLeaderType
    {	zcLineNoArrow	= 0,
	zcSplineNoArrow	= 1,
	zcLineWithArrow	= 2,
	zcSplineWithArrow	= 3
    } 	ZcLeaderType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("8c1bff8b-5c35-40fe-8526-3bd3ef106a13") 
enum ZcIntersectOptions
    {	zcExtendNone	= 0,
	zcExtendThisEntity	= ( zcExtendNone + 1 ) ,
	zcExtendOtherEntity	= ( zcExtendThisEntity + 1 ) ,
	zcExtendBoth	= ( zcExtendOtherEntity + 1 ) 
    } 	ZcIntersectOptions;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("c2626860-6b9e-4adb-bb74-d36a6d7440a0") 
enum ZcObjectSnapMode
    {	zcOsnapNone	= 0,
	zcOsnapEnd	= 1,
	zcOsnapMid	= 2,
	zcOsnapCenter	= 4,
	zcOsnapNode	= 8,
	zcOsnapQuadrant	= 16,
	zcOsnapIntersection	= 32,
	zcOsnapInsert	= 64,
	zcOsnapPerpendicular	= 128,
	zcOsnapTangent	= 256,
	zcOsnapNear	= 512,
	zcOsnapQuick	= 1024,
	zcOsnapPlanViewIntersection	= 2048,
	zcOsnapPoint	= 4096
    } 	ZcObjectSnapMode;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("ba6a8890-ff57-4086-92fc-cc620a3b6062") 
enum ZcPolylineType
    {	zcSimplePoly	= 0,
	zcFitCurvePoly	= ( zcSimplePoly + 1 ) ,
	zcQuadSplinePoly	= ( zcFitCurvePoly + 1 ) ,
	zcCubicSplinePoly	= ( zcQuadSplinePoly + 1 ) 
    } 	ZcPolylineType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("21acd78c-5417-40e7-b5ec-4f224710cf72") 
enum ZcSelectionSetType
    {	zcSelectionSetCrossingPolygon	= 0,
	zcSelectionSetOutsidePolygon	= ( zcSelectionSetCrossingPolygon + 1 ) ,
	zcSelectionSetInsidePolygon	= ( zcSelectionSetOutsidePolygon + 1 ) ,
	zcSelectionSetCrossingCircle	= ( zcSelectionSetInsidePolygon + 1 ) ,
	zcSelectionSetOutsideCircle	= ( zcSelectionSetCrossingCircle + 1 ) ,
	zcSelectionSetInsideCircle	= ( zcSelectionSetOutsideCircle + 1 ) ,
	zcSelectionSetCrossingWindow	= ( zcSelectionSetInsideCircle + 1 ) ,
	zcSelectionSetOutsideWindow	= ( zcSelectionSetCrossingWindow + 1 ) ,
	zcSelectionSetInsideWindow	= ( zcSelectionSetOutsideWindow + 1 ) ,
	zcSelectionSetPrevious	= ( zcSelectionSetInsideWindow + 1 ) ,
	zcSelectionSetLast	= ( zcSelectionSetPrevious + 1 ) ,
	zcSelectionSetAll	= ( zcSelectionSetLast + 1 ) ,
	zcSelectionSetFence	= ( zcSelectionSetAll + 1 ) 
    } 	ZcSelectionSetType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("9e3696db-e32b-4ef1-94d8-9a9b6aac2bcd") 
enum ZcCoordinateSystemTypes
    {	zcWorld	= 0,
	zcUCS	= 1,
	zcDisplayDCS	= 2,
	zcPaperSpaceDCS	= 3,
	zcOCS	= 4
    } 	ZcCoordinateSystemTypes;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("fc8306e8-ab9c-42d4-9992-3115936fb2a0") 
enum ZcViewMode
    {	zcViewModeNormal	= 0,
	zcViewModePerspectiveOn	= 1,
	zcViewModeFrontClippingOn	= 2,
	zcViewModeBackClippingOn	= 4,
	zcViewModeUCSFollowOn	= 8
    } 	ZcViewMode;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("b2d4c3fc-284f-429b-b2c7-82778b0b0a6b") 
enum ZcZoomScale
    {	zcZoomScaledAbsolute	= 0,
	zcZoomScaledRelative	= ( zcZoomScaledAbsolute + 1 ) ,
	zcZoomScaledRelativePSpace	= ( zcZoomScaledRelative + 1 ) 
    } 	ZcZoomScale;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("a82def5f-081e-411d-917f-66f8193fc0d4") 
enum ZcArrangeStyle
    {	zcArrangeTileVertical	= 1,
	zcArrangeTileHorizontal	= 2,
	zcArrangeCascade	= 3
    } 	ZcArrangeStyle;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("ad0a8983-83ae-4f3d-ae27-dffbdc7fbd76") 
enum ZcWhichViewport
    {	zcActiveViewport	= 0,
	zcAllViewports	= ( zcActiveViewport + 1 ) 
    } 	ZcWhichViewport;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("df6ad2e1-9b71-4761-ad1f-e1a69330b28f") 
enum ZcPolygonMeshType
    {	zcSimpleMesh	= 0,
	zcQuadSurfaceMesh	= 5,
	zcCubicSurfaceMesh	= 6,
	zcBezierSurfaceMesh	= 8
    } 	ZcPolygonMeshType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("5D40C9F0-2648-4299-A435-C1A2A061CA35") 
enum ZcSaveAsType
    {	zcUnknown	= -1,
	zcNative	= 24,
	zcR12_dxf	= 1,
	zcR13_dwg	= 4,
	zcR13_dxf	= 5,
	zcR14_dwg	= 8,
	zcR14_dxf	= 9,
	zc2000_dwg	= 12,
	zc2000_dxf	= 13,
	zc2000_Template	= 14,
	zcR15_dwg	= 12,
	zcR15_dxf	= 13,
	zcR15_Template	= 14,
	zc2004_dwg	= 24,
	zc2004_dxf	= 25,
	zc2004_Template	= 26,
	zcR18_dwg	= 24,
	zcR18_dxf	= 25,
	zcR18_Template	= 26,
	zc2007_dwg	= 36,
	zc2007_dxf	= 37,
	zc2007_Template	= 38
    } 	ZcSaveAsType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("97ee557d-e075-490a-b5f2-f5fabf3c6d9c") 
enum ZcScrollFlagsX
    {	zcScrollNoneX	= 9,
	zcScrollLeft	= 0,
	zcScrollLeftPage	= 2,
	zcScrollRight	= 1,
	zcScrollRightPage	= 3,
	zcScrollToLeft	= 6,
	zcScrollToRight	= 7
    } 	ZcScrollFlagsX;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("69662303-d76a-4b7a-8362-9f9eb882b472") 
enum ZcScrollFlagsY
    {	zcScrollNoneY	= 9,
	zcScrollUp	= 0,
	zcScrollUpPage	= 2,
	zcScrollDown	= 1,
	zcScrollDownPage	= 3,
	zcScrollToTop	= 6,
	zcScrollToBottom	= 7
    } 	ZcScrollFlagsY;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("5d50833b-6ff6-498d-a637-4baf40853bb8") 
enum ZcWindowState
    {	zcNorm	= 1,
	zcMin	= 2,
	zcMax	= 3
    } 	ZcWindowState;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("0f69c96e-d54b-41a8-ba86-bf6eeb7c0d42") 
enum ZcTextFontStyle
    {	zcFontRegular	= 0,
	zcFontItalic	= ( zcFontRegular + 1 ) ,
	zcFontBold	= ( zcFontItalic + 1 ) ,
	zcFontBoldItalic	= ( zcFontBold + 1 ) 
    } 	ZcTextFontStyle;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("3bc3735a-842c-447c-9f76-15fcb8a38851") 
enum ZcDimTextMovement
    {	zcDimLineWithText	= 0,
	zcMoveTextAddLeader	= ( zcDimLineWithText + 1 ) ,
	zcMoveTextNoLeader	= ( zcMoveTextAddLeader + 1 ) 
    } 	ZcDimTextMovement;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("b9ef17c7-2922-4565-a237-d07924496264") 
enum ZcDimToleranceMethod
    {	zcTolNone	= 0,
	zcTolSymmetrical	= ( zcTolNone + 1 ) ,
	zcTolDeviation	= ( zcTolSymmetrical + 1 ) ,
	zcTolLimits	= ( zcTolDeviation + 1 ) ,
	zcTolBasic	= ( zcTolLimits + 1 ) 
    } 	ZcDimToleranceMethod;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("ac3dca25-44dc-4b58-9128-d465292df5d6") 
enum ZcDimToleranceJustify
    {	zcTolTop	= 0,
	zcTolMiddle	= ( zcTolTop + 1 ) ,
	zcTolBottom	= ( zcTolMiddle + 1 ) 
    } 	ZcDimToleranceJustify;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("dcbf264b-ee0b-4a37-9a61-64e9f84f36f4") 
enum ZcDimPrecision
    {	zcDimPrecisionZero	= 0,
	zcDimPrecisionOne	= ( zcDimPrecisionZero + 1 ) ,
	zcDimPrecisionTwo	= ( zcDimPrecisionOne + 1 ) ,
	zcDimPrecisionThree	= ( zcDimPrecisionTwo + 1 ) ,
	zcDimPrecisionFour	= ( zcDimPrecisionThree + 1 ) ,
	zcDimPrecisionFive	= ( zcDimPrecisionFour + 1 ) ,
	zcDimPrecisionSix	= ( zcDimPrecisionFive + 1 ) ,
	zcDimPrecisionSeven	= ( zcDimPrecisionSix + 1 ) ,
	zcDimPrecisionEight	= ( zcDimPrecisionSeven + 1 ) 
    } 	ZcDimPrecision;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("312baf6a-58fe-4b7d-86e6-457eb737d2b2") 
enum ZcDimLUnits
    {	zcDimLScientific	= 0,
	zcDimLDecimal	= ( zcDimLScientific + 1 ) ,
	zcDimLEngineering	= ( zcDimLDecimal + 1 ) ,
	zcDimLArchitectural	= ( zcDimLEngineering + 1 ) ,
	zcDimLFractional	= ( zcDimLArchitectural + 1 ) ,
	zcDimLWindowsDesktop	= ( zcDimLFractional + 1 ) 
    } 	ZcDimLUnits;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("C91A89BB-0739-4a95-A51D-6E30ABC29612") 
enum ZcDimUnits
    {	zcDimScientific	= 0,
	zcDimDecimal	= ( zcDimScientific + 1 ) ,
	zcDimEngineering	= ( zcDimDecimal + 1 ) ,
	zcDimArchitecturalStacked	= ( zcDimEngineering + 1 ) ,
	zcDimFractionalStacked	= ( zcDimArchitecturalStacked + 1 ) ,
	zcDimArchitectural	= ( zcDimFractionalStacked + 1 ) ,
	zcDimFractional	= ( zcDimArchitectural + 1 ) ,
	zcDimWindowsDesktop	= ( zcDimFractional + 1 ) 
    } 	ZcDimUnits;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("a7e07e9a-74ab-4aa2-ab4c-3f3fef158610") 
enum ZcDimVerticalJustification
    {	zcVertCentered	= 0,
	zcAbove	= ( zcVertCentered + 1 ) ,
	zcOutside	= ( zcAbove + 1 ) ,
	zcJIS	= ( zcOutside + 1 ) 
    } 	ZcDimVerticalJustification;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("b9d61f71-e12e-444c-811d-92d0a9e76d52") 
enum ZcDimHorizontalJustification
    {	zcHorzCentered	= 0,
	zcFirstExtensionLine	= ( zcHorzCentered + 1 ) ,
	zcSecondExtensionLine	= ( zcFirstExtensionLine + 1 ) ,
	zcOverFirstExtension	= ( zcSecondExtensionLine + 1 ) ,
	zcOverSecondExtension	= ( zcOverFirstExtension + 1 ) 
    } 	ZcDimHorizontalJustification;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("1529b8fc-98a0-47c0-8f2c-1611adc856cc") 
enum ZcDimArrowheadType
    {	zcArrowDefault	= 0,
	zcArrowDot	= ( zcArrowDefault + 1 ) ,
	zcArrowDotSmall	= ( zcArrowDot + 1 ) ,
	zcArrowDotBlank	= ( zcArrowDotSmall + 1 ) ,
	zcArrowOrigin	= ( zcArrowDotBlank + 1 ) ,
	zcArrowOrigin2	= ( zcArrowOrigin + 1 ) ,
	zcArrowOpen	= ( zcArrowOrigin2 + 1 ) ,
	zcArrowOpen90	= ( zcArrowOpen + 1 ) ,
	zcArrowOpen30	= ( zcArrowOpen90 + 1 ) ,
	zcArrowClosed	= ( zcArrowOpen30 + 1 ) ,
	zcArrowSmall	= ( zcArrowClosed + 1 ) ,
	zcArrowNone	= ( zcArrowSmall + 1 ) ,
	zcArrowOblique	= ( zcArrowNone + 1 ) ,
	zcArrowBoxFilled	= ( zcArrowOblique + 1 ) ,
	zcArrowBoxBlank	= ( zcArrowBoxFilled + 1 ) ,
	zcArrowClosedBlank	= ( zcArrowBoxBlank + 1 ) ,
	zcArrowDatumFilled	= ( zcArrowClosedBlank + 1 ) ,
	zcArrowDatumBlank	= ( zcArrowDatumFilled + 1 ) ,
	zcArrowIntegral	= ( zcArrowDatumBlank + 1 ) ,
	zcArrowArchTick	= ( zcArrowIntegral + 1 ) ,
	zcArrowUserDefined	= ( zcArrowArchTick + 1 ) 
    } 	ZcDimArrowheadType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("3c0eaa0a-e94f-41c2-bd06-ebce573b5381") 
enum ZcDimFit
    {	zcTextAndArrows	= 0,
	zcArrowsOnly	= ( zcTextAndArrows + 1 ) ,
	zcTextOnly	= ( zcArrowsOnly + 1 ) ,
	zcBestFit	= ( zcTextOnly + 1 ) 
    } 	ZcDimFit;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("d0b05e8f-8981-4485-b845-e5f6459a4506") 
enum ZcDimFractionType
    {	zcHorizontal	= 0,
	zcDiagonal	= ( zcHorizontal + 1 ) ,
	zcNotStacked	= ( zcDiagonal + 1 ) 
    } 	ZcDimFractionType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("44a61a63-afd7-485d-9894-d7a042665a0d") 
enum ZcDimCenterType
    {	zcCenterMark	= 0,
	zcCenterLine	= ( zcCenterMark + 1 ) ,
	zcCenterNone	= ( zcCenterLine + 1 ) 
    } 	ZcDimCenterType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("bab5805d-7c54-4433-b2a0-ad08f9725eb5") 
enum ZcViewportSplitType
    {	zcViewport2Horizontal	= 0,
	zcViewport2Vertical	= ( zcViewport2Horizontal + 1 ) ,
	zcViewport3Left	= ( zcViewport2Vertical + 1 ) ,
	zcViewport3Right	= ( zcViewport3Left + 1 ) ,
	zcViewport3Horizontal	= ( zcViewport3Right + 1 ) ,
	zcViewport3Vertical	= ( zcViewport3Horizontal + 1 ) ,
	zcViewport3Above	= ( zcViewport3Vertical + 1 ) ,
	zcViewport3Below	= ( zcViewport3Above + 1 ) ,
	zcViewport4	= ( zcViewport3Below + 1 ) 
    } 	ZcViewportSplitType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("a6a1e42a-03c6-4486-8fe3-4a516caa4fa4") 
enum ZcUserInputType
    {	zcNoNull	= 1,
	zcNoZero	= 2,
	zcNoNegative	= 4,
	zcNoLimitsCheck	= 8,
	zcUseDashedLines	= 32,
	zcNoZ	= 64,
	zcNoRestrictions	= 128
    } 	ZcUserInputType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("665CC329-6CD7-4ffa-87AC-0D1D592C2C40") 
enum ZcPlotPaperUnits
    {	zcInches	= 0,
	zcMillimeters	= 1
    } 	ZcPlotPaperUnits;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("B01E54F4-514B-41ac-BB9A-55A7D4B099D3") 
enum ZcPlotRotation
    {	zc0degrees	= 0,
	zc90degrees	= 1,
	zc180degrees	= 2,
	zc270degrees	= 3
    } 	ZcPlotRotation;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("57BE0FD2-6558-4e6a-B057-5C357E81BD1D") 
enum ZcPlotType
    {	zcDisplay	= 0,
	zcExtents	= 1,
	zcLimits	= 2,
	zcView	= 3,
	zcWindow	= 4,
	zcLayout	= 5
    } 	ZcPlotType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("D60E27B0-8EDD-40f4-889A-3195A9703FB6") 
enum ZcPlotScale
    {	zcScaleToFit	= 0,
	zc1_128in_1ft	= 1,
	zc1_64in_1ft	= 2,
	zc1_32in_1ft	= 3,
	zc1_16in_1ft	= 4,
	zc3_32in_1ft	= 5,
	zc1_8in_1ft	= 6,
	zc3_16in_1ft	= 7,
	zc1_4in_1ft	= 8,
	zc3_8in_1ft	= 9,
	zc1_2in_1ft	= 10,
	zc3_4in_1ft	= 11,
	zc1in_1ft	= 12,
	zc3in_1ft	= 13,
	zc6in_1ft	= 14,
	zc1ft_1ft	= 15,
	zc1_1	= 16,
	zc1_2	= 17,
	zc1_4	= 18,
	zc1_8	= 19,
	zc1_10	= 20,
	zc1_16	= 21,
	zc1_20	= 22,
	zc1_30	= 23,
	zc1_40	= 24,
	zc1_50	= 25,
	zc1_100	= 26,
	zc2_1	= 27,
	zc4_1	= 28,
	zc8_1	= 29,
	zc10_1	= 30,
	zc100_1	= 31,
	zc1000_1	= 32
    } 	ZcPlotScale;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("81DC071C-86A3-4673-9DD5-56C159A2AB04") 
enum ZcPreviewMode
    {	zcPartialPreview	= 0,
	zcFullPreview	= 1
    } 	ZcPreviewMode;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("74771679-1f81-4f49-a737-f800b900c349") 
enum ZcBooleanType
    {	zcUnion	= 0,
	zcIntersection	= 1,
	zcSubtraction	= 2
    } 	ZcBooleanType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("01368da9-3ff7-45d1-a9f4-1b37f04b1f94") 
enum ZcLineWeight
    {	zcLnWt000	= 0,
	zcLnWt005	= 5,
	zcLnWt009	= 9,
	zcLnWt013	= 13,
	zcLnWt015	= 15,
	zcLnWt018	= 18,
	zcLnWt020	= 20,
	zcLnWt025	= 25,
	zcLnWt030	= 30,
	zcLnWt035	= 35,
	zcLnWt040	= 40,
	zcLnWt050	= 50,
	zcLnWt053	= 53,
	zcLnWt060	= 60,
	zcLnWt070	= 70,
	zcLnWt080	= 80,
	zcLnWt090	= 90,
	zcLnWt100	= 100,
	zcLnWt106	= 106,
	zcLnWt120	= 120,
	zcLnWt140	= 140,
	zcLnWt158	= 158,
	zcLnWt200	= 200,
	zcLnWt211	= 211,
	zcLnWtByLayer	= -1,
	zcLnWtByBlock	= -2,
	zcLnWtByLwDefault	= -3
    } 	ZcLineWeight;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("DDE88324-D31A-45e6-946B-0B4340F78698") 
enum ZcAlignment
    {	zcAlignmentLeft	= 0,
	zcAlignmentCenter	= 1,
	zcAlignmentRight	= 2,
	zcAlignmentAligned	= 3,
	zcAlignmentMiddle	= 4,
	zcAlignmentFit	= 5,
	zcAlignmentTopLeft	= 6,
	zcAlignmentTopCenter	= 7,
	zcAlignmentTopRight	= 8,
	zcAlignmentMiddleLeft	= 9,
	zcAlignmentMiddleCenter	= 10,
	zcAlignmentMiddleRight	= 11,
	zcAlignmentBottomLeft	= 12,
	zcAlignmentBottomCenter	= 13,
	zcAlignmentBottomRight	= 14
    } 	ZcAlignment;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("F0E715D4-DC78-45e9-94C1-42DE0763794E") 
enum ZcLineSpacingStyle
    {	zcLineSpacingStyleAtLeast	= 1,
	zcLineSpacingStyleExactly	= 2
    } 	ZcLineSpacingStyle;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("38087650-34AD-4d6f-B3B0-ACBF3562A39A") 
enum ZcMLineJustification
    {	zcTop	= 0,
	zcZero	= ( zcTop + 1 ) ,
	zcBottom	= ( zcZero + 1 ) 
    } 	ZcMLineJustification;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("C06001A7-125B-46d2-B68B-A938526DA33F") 
enum ZcOleType
    {	zcOTLink	= 1,
	zcOTEmbedded	= 2,
	zcOTStatic	= 3
    } 	ZcOleType;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("51D3AF98-2B68-42d2-B89A-E099465D9755") 
enum ZcOlePlotQuality
    {	zcOPQMonochrome	= 0,
	zcOPQLowGraphics	= 1,
	zcOPQHighGraphics	= 2
    } 	ZcOlePlotQuality;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("18D983FE-80E3-46c6-9BA1-843A4BAF1849") 
enum ZcColorMethod
    {	zcColorMethodByLayer	= 192,
	zcColorMethodByBlock	= 193,
	zcColorMethodByRGB	= 194,
	zcColorMethodByACI	= 195,
	zcColorMethodForeground	= 197
    } 	ZcColorMethod;










extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0000_v0_0_s_ifspec;

#ifndef __IIcadPoint_INTERFACE_DEFINED__
#define __IIcadPoint_INTERFACE_DEFINED__

/* interface IIcadPoint */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3d2263c3-d8f9-4edb-8d85-7073777d475e")
    IIcadPoint : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadLibrary **ppParent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PointsCollection( 
            /* [retval][out] */ IIcadPoints **ppPoints) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_x( 
            /* [retval][out] */ double *pX) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_x( 
            /* [in] */ double X1) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_y( 
            /* [retval][out] */ double *pY) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_y( 
            /* [in] */ double Y1) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_z( 
            /* [retval][out] */ double *pZ) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_z( 
            /* [in] */ double Z1) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Element( 
            /* [in] */ long Index,
            /* [retval][out] */ double *pValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Element( 
            /* [in] */ long Index,
            /* [in] */ double Value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetElement( 
            /* [in] */ double X_Value,
            /* [in] */ double Y_Value,
            /* [defaultvalue][optional][in] */ double Z_Value = 0) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPoint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPoint * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPoint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPoint * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPoint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPoint * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPoint * This,
            /* [retval][out] */ IIcadLibrary **ppParent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointsCollection )( 
            IIcadPoint * This,
            /* [retval][out] */ IIcadPoints **ppPoints);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_x )( 
            IIcadPoint * This,
            /* [retval][out] */ double *pX);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_x )( 
            IIcadPoint * This,
            /* [in] */ double X1);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_y )( 
            IIcadPoint * This,
            /* [retval][out] */ double *pY);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_y )( 
            IIcadPoint * This,
            /* [in] */ double Y1);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_z )( 
            IIcadPoint * This,
            /* [retval][out] */ double *pZ);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_z )( 
            IIcadPoint * This,
            /* [in] */ double Z1);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Element )( 
            IIcadPoint * This,
            /* [in] */ long Index,
            /* [retval][out] */ double *pValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Element )( 
            IIcadPoint * This,
            /* [in] */ long Index,
            /* [in] */ double Value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetElement )( 
            IIcadPoint * This,
            /* [in] */ double X_Value,
            /* [in] */ double Y_Value,
            /* [defaultvalue][optional][in] */ double Z_Value);
        
        END_INTERFACE
    } IIcadPointVtbl;

    interface IIcadPoint
    {
        CONST_VTBL struct IIcadPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPoint_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPoint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPoint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPoint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPoint_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPoint_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPoint_get_PointsCollection(This,ppPoints)	\
    ( (This)->lpVtbl -> get_PointsCollection(This,ppPoints) ) 

#define IIcadPoint_get_x(This,pX)	\
    ( (This)->lpVtbl -> get_x(This,pX) ) 

#define IIcadPoint_put_x(This,X1)	\
    ( (This)->lpVtbl -> put_x(This,X1) ) 

#define IIcadPoint_get_y(This,pY)	\
    ( (This)->lpVtbl -> get_y(This,pY) ) 

#define IIcadPoint_put_y(This,Y1)	\
    ( (This)->lpVtbl -> put_y(This,Y1) ) 

#define IIcadPoint_get_z(This,pZ)	\
    ( (This)->lpVtbl -> get_z(This,pZ) ) 

#define IIcadPoint_put_z(This,Z1)	\
    ( (This)->lpVtbl -> put_z(This,Z1) ) 

#define IIcadPoint_get_Element(This,Index,pValue)	\
    ( (This)->lpVtbl -> get_Element(This,Index,pValue) ) 

#define IIcadPoint_put_Element(This,Index,Value)	\
    ( (This)->lpVtbl -> put_Element(This,Index,Value) ) 

#define IIcadPoint_SetElement(This,X_Value,Y_Value,Z_Value)	\
    ( (This)->lpVtbl -> SetElement(This,X_Value,Y_Value,Z_Value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPoint_INTERFACE_DEFINED__ */


#ifndef __IIcadPoints_INTERFACE_DEFINED__
#define __IIcadPoints_INTERFACE_DEFINED__

/* interface IIcadPoints */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPoints;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63e10984-15db-4c67-a2b8-a9e8a959c552")
    IIcadPoints : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadLibrary **ppParent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [defaultvalue][optional][in] */ double x,
            /* [defaultvalue][optional][in] */ double y,
            /* [defaultvalue][optional][in] */ double z,
            /* [defaultvalue][optional][in] */ long Index,
            /* [retval][out] */ IIcadPoint **Point) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IIcadPoint **ppItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [optional][in] */ long Index,
            /* [retval][out] */ IIcadPoint **Point) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPointsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPoints * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPoints * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPoints * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPoints * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPoints * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPoints * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPoints * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPoints * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPoints * This,
            /* [retval][out] */ IIcadLibrary **ppParent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadPoints * This,
            /* [retval][out] */ long *pCount);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadPoints * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadPoints * This,
            /* [defaultvalue][optional][in] */ double x,
            /* [defaultvalue][optional][in] */ double y,
            /* [defaultvalue][optional][in] */ double z,
            /* [defaultvalue][optional][in] */ long Index,
            /* [retval][out] */ IIcadPoint **Point);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadPoints * This,
            /* [in] */ long Index,
            /* [retval][out] */ IIcadPoint **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IIcadPoints * This,
            /* [optional][in] */ long Index,
            /* [retval][out] */ IIcadPoint **Point);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IIcadPoints * This);
        
        END_INTERFACE
    } IIcadPointsVtbl;

    interface IIcadPoints
    {
        CONST_VTBL struct IIcadPointsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPoints_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPoints_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPoints_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPoints_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPoints_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPoints_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPoints_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPoints_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPoints_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPoints_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadPoints_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadPoints_Add(This,x,y,z,Index,Point)	\
    ( (This)->lpVtbl -> Add(This,x,y,z,Index,Point) ) 

#define IIcadPoints_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadPoints_Remove(This,Index,Point)	\
    ( (This)->lpVtbl -> Remove(This,Index,Point) ) 

#define IIcadPoints_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPoints_INTERFACE_DEFINED__ */


#ifndef __IIcadVector_INTERFACE_DEFINED__
#define __IIcadVector_INTERFACE_DEFINED__

/* interface IIcadVector */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadVector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("743f53ef-a0b0-45aa-ae81-0918de8d1af0")
    IIcadVector : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadLibrary **ppParent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_x( 
            /* [retval][out] */ double *pX) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_x( 
            /* [in] */ double X1) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_y( 
            /* [retval][out] */ double *pY) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_y( 
            /* [in] */ double Y1) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_z( 
            /* [retval][out] */ double *pZ) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_z( 
            /* [in] */ double Z1) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Element( 
            /* [in] */ long Index,
            /* [retval][out] */ double *pValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Element( 
            /* [in] */ long Index,
            /* [in] */ double Value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadVectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadVector * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadVector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadVector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadVector * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadVector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadVector * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadVector * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadVector * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadVector * This,
            /* [retval][out] */ IIcadLibrary **ppParent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_x )( 
            IIcadVector * This,
            /* [retval][out] */ double *pX);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_x )( 
            IIcadVector * This,
            /* [in] */ double X1);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_y )( 
            IIcadVector * This,
            /* [retval][out] */ double *pY);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_y )( 
            IIcadVector * This,
            /* [in] */ double Y1);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_z )( 
            IIcadVector * This,
            /* [retval][out] */ double *pZ);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_z )( 
            IIcadVector * This,
            /* [in] */ double Z1);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Element )( 
            IIcadVector * This,
            /* [in] */ long Index,
            /* [retval][out] */ double *pValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Element )( 
            IIcadVector * This,
            /* [in] */ long Index,
            /* [in] */ double Value);
        
        END_INTERFACE
    } IIcadVectorVtbl;

    interface IIcadVector
    {
        CONST_VTBL struct IIcadVectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadVector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadVector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadVector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadVector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadVector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadVector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadVector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadVector_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadVector_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadVector_get_x(This,pX)	\
    ( (This)->lpVtbl -> get_x(This,pX) ) 

#define IIcadVector_put_x(This,X1)	\
    ( (This)->lpVtbl -> put_x(This,X1) ) 

#define IIcadVector_get_y(This,pY)	\
    ( (This)->lpVtbl -> get_y(This,pY) ) 

#define IIcadVector_put_y(This,Y1)	\
    ( (This)->lpVtbl -> put_y(This,Y1) ) 

#define IIcadVector_get_z(This,pZ)	\
    ( (This)->lpVtbl -> get_z(This,pZ) ) 

#define IIcadVector_put_z(This,Z1)	\
    ( (This)->lpVtbl -> put_z(This,Z1) ) 

#define IIcadVector_get_Element(This,Index,pValue)	\
    ( (This)->lpVtbl -> get_Element(This,Index,pValue) ) 

#define IIcadVector_put_Element(This,Index,Value)	\
    ( (This)->lpVtbl -> put_Element(This,Index,Value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadVector_INTERFACE_DEFINED__ */


#ifndef __IIcadMatrix_INTERFACE_DEFINED__
#define __IIcadMatrix_INTERFACE_DEFINED__

/* interface IIcadMatrix */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadMatrix;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d4e7fb2c-e73f-43b5-87c8-e65e42710632")
    IIcadMatrix : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadLibrary **ppParent) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetValue( 
            /* [in] */ int Row,
            /* [in] */ int Column,
            /* [retval][out] */ double *pValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetValue( 
            /* [in] */ int Row,
            /* [in] */ int Column,
            /* [in] */ double Value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadMatrixVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadMatrix * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadMatrix * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadMatrix * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadMatrix * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadMatrix * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadMatrix * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadMatrix * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadMatrix * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadMatrix * This,
            /* [retval][out] */ IIcadLibrary **ppParent);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            IIcadMatrix * This,
            /* [in] */ int Row,
            /* [in] */ int Column,
            /* [retval][out] */ double *pValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetValue )( 
            IIcadMatrix * This,
            /* [in] */ int Row,
            /* [in] */ int Column,
            /* [in] */ double Value);
        
        END_INTERFACE
    } IIcadMatrixVtbl;

    interface IIcadMatrix
    {
        CONST_VTBL struct IIcadMatrixVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadMatrix_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadMatrix_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadMatrix_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadMatrix_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadMatrix_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadMatrix_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadMatrix_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadMatrix_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadMatrix_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadMatrix_GetValue(This,Row,Column,pValue)	\
    ( (This)->lpVtbl -> GetValue(This,Row,Column,pValue) ) 

#define IIcadMatrix_SetValue(This,Row,Column,Value)	\
    ( (This)->lpVtbl -> SetValue(This,Row,Column,Value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadMatrix_INTERFACE_DEFINED__ */


#ifndef __IIcadLibrary_INTERFACE_DEFINED__
#define __IIcadLibrary_INTERFACE_DEFINED__

/* interface IIcadLibrary */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLibrary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bc588f02-d96a-42bc-be0d-a704ce0ab2ad")
    IIcadLibrary : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreatePoint( 
            /* [defaultvalue][optional][in] */ double X1,
            /* [defaultvalue][optional][in] */ double Y1,
            /* [defaultvalue][optional][in] */ double Z1,
            /* [retval][out] */ IIcadPoint **ppPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreatePoints( 
            /* [retval][out] */ IIcadPoints **ppPoints) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CalculateDistance( 
            /* [in] */ IIcadPoint *Point1,
            /* [in] */ IIcadPoint *Point2,
            /* [retval][out] */ double *pDistance) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateVector( 
            /* [in] */ double X2,
            /* [in] */ double Y2,
            /* [defaultvalue][optional][in] */ double Z2,
            /* [defaultvalue][optional][in] */ double X1,
            /* [defaultvalue][optional][in] */ double Y1,
            /* [defaultvalue][optional][in] */ double Z1,
            /* [retval][out] */ IIcadVector **ppVector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddVectors( 
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ IIcadVector **ppVector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SubtractVectors( 
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ IIcadVector **ppVector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE VectorDotProduct( 
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE VectorCrossProduct( 
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ IIcadVector **ppVector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE VectorScalarMultiply( 
            /* [in] */ IIcadVector *Vector,
            /* [in] */ double Scale,
            /* [retval][out] */ IIcadVector **ppVector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE VectorUnitize( 
            /* [in] */ IIcadVector *Vector,
            /* [retval][out] */ IIcadVector **ppVector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE VectorLength( 
            /* [in] */ IIcadVector *Vector,
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DistanceBetweenVectors( 
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateIdentityMatrix( 
            /* [retval][out] */ IIcadMatrix **ppMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateRotationMatrix( 
            /* [in] */ double Angle,
            /* [in] */ IIcadPoint *AxisEnd,
            /* [optional][in] */ IIcadPoint *AxisStart,
            /* [retval][out] */ IIcadMatrix **ppMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateTranslationMatrix( 
            /* [defaultvalue][optional][in] */ double x,
            /* [defaultvalue][optional][in] */ double y,
            /* [defaultvalue][optional][in] */ double z,
            /* [retval][out] */ IIcadMatrix **ppMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateScaleMatrix( 
            /* [defaultvalue][optional][in] */ double x,
            /* [defaultvalue][optional][in] */ double y,
            /* [defaultvalue][optional][in] */ double z,
            /* [retval][out] */ IIcadMatrix **ppMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateMirrorMatrix( 
            /* [optional][in] */ VARIANT_BOOL MirrorX,
            /* [optional][in] */ VARIANT_BOOL MirrorY,
            /* [optional][in] */ VARIANT_BOOL MirrorZ,
            /* [retval][out] */ IIcadMatrix **ppMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ComposeMatrix( 
            /* [in] */ IIcadMatrix *Matrix1,
            /* [in] */ IIcadMatrix *Matrix2,
            /* [retval][out] */ IIcadMatrix **ppMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ApplyMatrix( 
            /* [in] */ IIcadMatrix *Matrix,
            /* [in] */ IIcadPoint *Point,
            /* [retval][out] */ IIcadPoint **ppPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InvertMatrix( 
            /* [in] */ IIcadMatrix *Matrix,
            /* [retval][out] */ IIcadMatrix **ppMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertArrayToPoint( 
            /* [in] */ VARIANT ArrayOfDoubles,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ IIcadPoint **Point) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertArrayToPoints( 
            /* [in] */ VARIANT ArrayOfDoubles,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ IIcadPoints **Points) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertArrayToVector( 
            /* [in] */ VARIANT ArrayOfDoubles,
            /* [in] */ VARIANT_BOOL Is3DVector,
            /* [retval][out] */ IIcadVector **Vector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertArrayToMatrix( 
            /* [in] */ VARIANT ArrayOf16Doubles,
            /* [retval][out] */ IIcadMatrix **Matrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertPointToArray( 
            /* [in] */ IIcadPoint *Point,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ VARIANT *ArrayOfDoubles) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertPointsToArray( 
            /* [in] */ IIcadPoints *Points,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ VARIANT *ArrayOfDoubles) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertVectorToArray( 
            /* [in] */ IIcadVector *Vector,
            /* [in] */ VARIANT_BOOL Is3DVector,
            /* [retval][out] */ VARIANT *ArrayOfDoubles) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertMatrixToArray( 
            /* [in] */ IIcadMatrix *Matrix,
            /* [retval][out] */ VARIANT *ArrayOf16Doubles) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateTrueColor( 
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLibraryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLibrary * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLibrary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLibrary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLibrary * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLibrary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLibrary * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLibrary * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLibrary * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLibrary * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreatePoint )( 
            IIcadLibrary * This,
            /* [defaultvalue][optional][in] */ double X1,
            /* [defaultvalue][optional][in] */ double Y1,
            /* [defaultvalue][optional][in] */ double Z1,
            /* [retval][out] */ IIcadPoint **ppPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreatePoints )( 
            IIcadLibrary * This,
            /* [retval][out] */ IIcadPoints **ppPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CalculateDistance )( 
            IIcadLibrary * This,
            /* [in] */ IIcadPoint *Point1,
            /* [in] */ IIcadPoint *Point2,
            /* [retval][out] */ double *pDistance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateVector )( 
            IIcadLibrary * This,
            /* [in] */ double X2,
            /* [in] */ double Y2,
            /* [defaultvalue][optional][in] */ double Z2,
            /* [defaultvalue][optional][in] */ double X1,
            /* [defaultvalue][optional][in] */ double Y1,
            /* [defaultvalue][optional][in] */ double Z1,
            /* [retval][out] */ IIcadVector **ppVector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddVectors )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ IIcadVector **ppVector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SubtractVectors )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ IIcadVector **ppVector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *VectorDotProduct )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *VectorCrossProduct )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ IIcadVector **ppVector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *VectorScalarMultiply )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector,
            /* [in] */ double Scale,
            /* [retval][out] */ IIcadVector **ppVector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *VectorUnitize )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector,
            /* [retval][out] */ IIcadVector **ppVector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *VectorLength )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DistanceBetweenVectors )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector1,
            /* [in] */ IIcadVector *Vector2,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateIdentityMatrix )( 
            IIcadLibrary * This,
            /* [retval][out] */ IIcadMatrix **ppMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateRotationMatrix )( 
            IIcadLibrary * This,
            /* [in] */ double Angle,
            /* [in] */ IIcadPoint *AxisEnd,
            /* [optional][in] */ IIcadPoint *AxisStart,
            /* [retval][out] */ IIcadMatrix **ppMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateTranslationMatrix )( 
            IIcadLibrary * This,
            /* [defaultvalue][optional][in] */ double x,
            /* [defaultvalue][optional][in] */ double y,
            /* [defaultvalue][optional][in] */ double z,
            /* [retval][out] */ IIcadMatrix **ppMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateScaleMatrix )( 
            IIcadLibrary * This,
            /* [defaultvalue][optional][in] */ double x,
            /* [defaultvalue][optional][in] */ double y,
            /* [defaultvalue][optional][in] */ double z,
            /* [retval][out] */ IIcadMatrix **ppMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateMirrorMatrix )( 
            IIcadLibrary * This,
            /* [optional][in] */ VARIANT_BOOL MirrorX,
            /* [optional][in] */ VARIANT_BOOL MirrorY,
            /* [optional][in] */ VARIANT_BOOL MirrorZ,
            /* [retval][out] */ IIcadMatrix **ppMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ComposeMatrix )( 
            IIcadLibrary * This,
            /* [in] */ IIcadMatrix *Matrix1,
            /* [in] */ IIcadMatrix *Matrix2,
            /* [retval][out] */ IIcadMatrix **ppMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ApplyMatrix )( 
            IIcadLibrary * This,
            /* [in] */ IIcadMatrix *Matrix,
            /* [in] */ IIcadPoint *Point,
            /* [retval][out] */ IIcadPoint **ppPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InvertMatrix )( 
            IIcadLibrary * This,
            /* [in] */ IIcadMatrix *Matrix,
            /* [retval][out] */ IIcadMatrix **ppMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertArrayToPoint )( 
            IIcadLibrary * This,
            /* [in] */ VARIANT ArrayOfDoubles,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ IIcadPoint **Point);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertArrayToPoints )( 
            IIcadLibrary * This,
            /* [in] */ VARIANT ArrayOfDoubles,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ IIcadPoints **Points);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertArrayToVector )( 
            IIcadLibrary * This,
            /* [in] */ VARIANT ArrayOfDoubles,
            /* [in] */ VARIANT_BOOL Is3DVector,
            /* [retval][out] */ IIcadVector **Vector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertArrayToMatrix )( 
            IIcadLibrary * This,
            /* [in] */ VARIANT ArrayOf16Doubles,
            /* [retval][out] */ IIcadMatrix **Matrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertPointToArray )( 
            IIcadLibrary * This,
            /* [in] */ IIcadPoint *Point,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ VARIANT *ArrayOfDoubles);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertPointsToArray )( 
            IIcadLibrary * This,
            /* [in] */ IIcadPoints *Points,
            /* [in] */ VARIANT_BOOL Is3DPoint,
            /* [retval][out] */ VARIANT *ArrayOfDoubles);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertVectorToArray )( 
            IIcadLibrary * This,
            /* [in] */ IIcadVector *Vector,
            /* [in] */ VARIANT_BOOL Is3DVector,
            /* [retval][out] */ VARIANT *ArrayOfDoubles);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertMatrixToArray )( 
            IIcadLibrary * This,
            /* [in] */ IIcadMatrix *Matrix,
            /* [retval][out] */ VARIANT *ArrayOf16Doubles);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateTrueColor )( 
            IIcadLibrary * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        END_INTERFACE
    } IIcadLibraryVtbl;

    interface IIcadLibrary
    {
        CONST_VTBL struct IIcadLibraryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLibrary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLibrary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLibrary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLibrary_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLibrary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLibrary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLibrary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLibrary_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define IIcadLibrary_get_Parent(This,Application)	\
    ( (This)->lpVtbl -> get_Parent(This,Application) ) 

#define IIcadLibrary_CreatePoint(This,X1,Y1,Z1,ppPoint)	\
    ( (This)->lpVtbl -> CreatePoint(This,X1,Y1,Z1,ppPoint) ) 

#define IIcadLibrary_CreatePoints(This,ppPoints)	\
    ( (This)->lpVtbl -> CreatePoints(This,ppPoints) ) 

#define IIcadLibrary_CalculateDistance(This,Point1,Point2,pDistance)	\
    ( (This)->lpVtbl -> CalculateDistance(This,Point1,Point2,pDistance) ) 

#define IIcadLibrary_CreateVector(This,X2,Y2,Z2,X1,Y1,Z1,ppVector)	\
    ( (This)->lpVtbl -> CreateVector(This,X2,Y2,Z2,X1,Y1,Z1,ppVector) ) 

#define IIcadLibrary_AddVectors(This,Vector1,Vector2,ppVector)	\
    ( (This)->lpVtbl -> AddVectors(This,Vector1,Vector2,ppVector) ) 

#define IIcadLibrary_SubtractVectors(This,Vector1,Vector2,ppVector)	\
    ( (This)->lpVtbl -> SubtractVectors(This,Vector1,Vector2,ppVector) ) 

#define IIcadLibrary_VectorDotProduct(This,Vector1,Vector2,pVal)	\
    ( (This)->lpVtbl -> VectorDotProduct(This,Vector1,Vector2,pVal) ) 

#define IIcadLibrary_VectorCrossProduct(This,Vector1,Vector2,ppVector)	\
    ( (This)->lpVtbl -> VectorCrossProduct(This,Vector1,Vector2,ppVector) ) 

#define IIcadLibrary_VectorScalarMultiply(This,Vector,Scale,ppVector)	\
    ( (This)->lpVtbl -> VectorScalarMultiply(This,Vector,Scale,ppVector) ) 

#define IIcadLibrary_VectorUnitize(This,Vector,ppVector)	\
    ( (This)->lpVtbl -> VectorUnitize(This,Vector,ppVector) ) 

#define IIcadLibrary_VectorLength(This,Vector,pLength)	\
    ( (This)->lpVtbl -> VectorLength(This,Vector,pLength) ) 

#define IIcadLibrary_DistanceBetweenVectors(This,Vector1,Vector2,pVal)	\
    ( (This)->lpVtbl -> DistanceBetweenVectors(This,Vector1,Vector2,pVal) ) 

#define IIcadLibrary_CreateIdentityMatrix(This,ppMatrix)	\
    ( (This)->lpVtbl -> CreateIdentityMatrix(This,ppMatrix) ) 

#define IIcadLibrary_CreateRotationMatrix(This,Angle,AxisEnd,AxisStart,ppMatrix)	\
    ( (This)->lpVtbl -> CreateRotationMatrix(This,Angle,AxisEnd,AxisStart,ppMatrix) ) 

#define IIcadLibrary_CreateTranslationMatrix(This,x,y,z,ppMatrix)	\
    ( (This)->lpVtbl -> CreateTranslationMatrix(This,x,y,z,ppMatrix) ) 

#define IIcadLibrary_CreateScaleMatrix(This,x,y,z,ppMatrix)	\
    ( (This)->lpVtbl -> CreateScaleMatrix(This,x,y,z,ppMatrix) ) 

#define IIcadLibrary_CreateMirrorMatrix(This,MirrorX,MirrorY,MirrorZ,ppMatrix)	\
    ( (This)->lpVtbl -> CreateMirrorMatrix(This,MirrorX,MirrorY,MirrorZ,ppMatrix) ) 

#define IIcadLibrary_ComposeMatrix(This,Matrix1,Matrix2,ppMatrix)	\
    ( (This)->lpVtbl -> ComposeMatrix(This,Matrix1,Matrix2,ppMatrix) ) 

#define IIcadLibrary_ApplyMatrix(This,Matrix,Point,ppPoint)	\
    ( (This)->lpVtbl -> ApplyMatrix(This,Matrix,Point,ppPoint) ) 

#define IIcadLibrary_InvertMatrix(This,Matrix,ppMatrix)	\
    ( (This)->lpVtbl -> InvertMatrix(This,Matrix,ppMatrix) ) 

#define IIcadLibrary_ConvertArrayToPoint(This,ArrayOfDoubles,Is3DPoint,Point)	\
    ( (This)->lpVtbl -> ConvertArrayToPoint(This,ArrayOfDoubles,Is3DPoint,Point) ) 

#define IIcadLibrary_ConvertArrayToPoints(This,ArrayOfDoubles,Is3DPoint,Points)	\
    ( (This)->lpVtbl -> ConvertArrayToPoints(This,ArrayOfDoubles,Is3DPoint,Points) ) 

#define IIcadLibrary_ConvertArrayToVector(This,ArrayOfDoubles,Is3DVector,Vector)	\
    ( (This)->lpVtbl -> ConvertArrayToVector(This,ArrayOfDoubles,Is3DVector,Vector) ) 

#define IIcadLibrary_ConvertArrayToMatrix(This,ArrayOf16Doubles,Matrix)	\
    ( (This)->lpVtbl -> ConvertArrayToMatrix(This,ArrayOf16Doubles,Matrix) ) 

#define IIcadLibrary_ConvertPointToArray(This,Point,Is3DPoint,ArrayOfDoubles)	\
    ( (This)->lpVtbl -> ConvertPointToArray(This,Point,Is3DPoint,ArrayOfDoubles) ) 

#define IIcadLibrary_ConvertPointsToArray(This,Points,Is3DPoint,ArrayOfDoubles)	\
    ( (This)->lpVtbl -> ConvertPointsToArray(This,Points,Is3DPoint,ArrayOfDoubles) ) 

#define IIcadLibrary_ConvertVectorToArray(This,Vector,Is3DVector,ArrayOfDoubles)	\
    ( (This)->lpVtbl -> ConvertVectorToArray(This,Vector,Is3DVector,ArrayOfDoubles) ) 

#define IIcadLibrary_ConvertMatrixToArray(This,Matrix,ArrayOf16Doubles)	\
    ( (This)->lpVtbl -> ConvertMatrixToArray(This,Matrix,ArrayOf16Doubles) ) 

#define IIcadLibrary_CreateTrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> CreateTrueColor(This,ppAcCmColor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLibrary_INTERFACE_DEFINED__ */


#ifndef __IIcadUtility_INTERFACE_DEFINED__
#define __IIcadUtility_INTERFACE_DEFINED__

/* interface IIcadUtility */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadUtility;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7907a2a6-0ef4-40ff-80d6-119947e92f52")
    IIcadUtility : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **Document) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Alert( 
            /* [in] */ BSTR message) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AngleFromXAxis( 
            /* [in] */ VARIANT vpt1,
            /* [in] */ VARIANT vpt2,
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AngleToReal( 
            /* [in] */ BSTR Angle,
            /* [optional][in] */ ZcAngleUnits Unit,
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DistanceToReal( 
            /* [in] */ BSTR Distance,
            /* [optional][in] */ ZcDistanceUnits Unit,
            /* [retval][out] */ double *pDistance) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RealToString( 
            /* [in] */ double Value,
            /* [in] */ ZcDistanceUnits Unit,
            /* [in] */ long Precision,
            /* [retval][out] */ BSTR *Distance) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AngleToString( 
            /* [in] */ double Angle,
            /* [in] */ ZcAngleUnits Unit,
            /* [in] */ long Precision,
            /* [retval][out] */ BSTR *str) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Prompt( 
            /* [in] */ BSTR TextString) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConvertUnit( 
            /* [in] */ double Value,
            /* [in] */ BSTR From,
            /* [in] */ BSTR To,
            /* [retval][out] */ double *ConvertedValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EntitySnap( 
            /* [in] */ VARIANT vInputPt,
            /* [in] */ ZcObjectSnapMode SnapMode,
            /* [retval][out] */ VARIANT *vppt) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindFile( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ BSTR *FullPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAngle( 
            /* [optional][in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCorner( 
            /* [in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ VARIANT *vpCorner) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDistance( 
            /* [optional][in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *pDistance) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetEntity( 
            /* [out][in] */ IDispatch **Object,
            /* [out][in] */ VARIANT *vPickedPoint,
            /* [optional][in] */ BSTR Prompt) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSubEntity( 
            /* [out][in] */ IDispatch **Object,
            /* [out][in] */ VARIANT *vPickedPoint,
            /* [out][in] */ VARIANT *pVarTransMatrix,
            /* [out][in] */ VARIANT *ContextData,
            /* [optional][in] */ BSTR Prompt) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetInput( 
            /* [retval][out] */ BSTR *InputString) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetInteger( 
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ long *Value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetOrientation( 
            /* [optional][in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *pOrientation) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPoint( 
            /* [optional][in] */ VARIANT Point,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ VARIANT *vppt) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetReal( 
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *Value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetString( 
            /* [in] */ VARIANT_BOOL HasSpaces,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ BSTR *String) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TranslateCoordinates( 
            /* [in] */ VARIANT vOriginPoint,
            /* [in] */ ZcCoordinateSystemTypes From,
            /* [in] */ ZcCoordinateSystemTypes To,
            /* [in] */ VARIANT_BOOL Disp,
            /* [optional][in] */ VARIANT OCSNormal,
            /* [retval][out] */ VARIANT *vppt) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InitializeUserInput( 
            /* [in] */ ZcUserInputType Bits,
            /* [optional][in] */ VARIANT Keywords) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetKeyword( 
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ BSTR *String) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PolarPoint( 
            /* [in] */ VARIANT vPoint,
            /* [in] */ double Angle,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *vppPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PaintLine( 
            /* [in] */ VARIANT vStartPoint,
            /* [in] */ VARIANT vEndPoint,
            /* [optional][in] */ ZcColors Color,
            /* [optional][in] */ VARIANT_BOOL HighlightFlag) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShowGraphicScreen( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShowTextScreen( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE WildCardMatch( 
            /* [in] */ BSTR Pattern,
            /* [in] */ BSTR String,
            /* [retval][out] */ VARIANT_BOOL *Match) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadUtilityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadUtility * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadUtility * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadUtility * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadUtility * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadUtility * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadUtility * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadUtility * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadUtility * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadUtility * This,
            /* [retval][out] */ IIcadDocument **Document);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Alert )( 
            IIcadUtility * This,
            /* [in] */ BSTR message);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AngleFromXAxis )( 
            IIcadUtility * This,
            /* [in] */ VARIANT vpt1,
            /* [in] */ VARIANT vpt2,
            /* [retval][out] */ double *pAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AngleToReal )( 
            IIcadUtility * This,
            /* [in] */ BSTR Angle,
            /* [optional][in] */ ZcAngleUnits Unit,
            /* [retval][out] */ double *pAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DistanceToReal )( 
            IIcadUtility * This,
            /* [in] */ BSTR Distance,
            /* [optional][in] */ ZcDistanceUnits Unit,
            /* [retval][out] */ double *pDistance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RealToString )( 
            IIcadUtility * This,
            /* [in] */ double Value,
            /* [in] */ ZcDistanceUnits Unit,
            /* [in] */ long Precision,
            /* [retval][out] */ BSTR *Distance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AngleToString )( 
            IIcadUtility * This,
            /* [in] */ double Angle,
            /* [in] */ ZcAngleUnits Unit,
            /* [in] */ long Precision,
            /* [retval][out] */ BSTR *str);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Prompt )( 
            IIcadUtility * This,
            /* [in] */ BSTR TextString);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConvertUnit )( 
            IIcadUtility * This,
            /* [in] */ double Value,
            /* [in] */ BSTR From,
            /* [in] */ BSTR To,
            /* [retval][out] */ double *ConvertedValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EntitySnap )( 
            IIcadUtility * This,
            /* [in] */ VARIANT vInputPt,
            /* [in] */ ZcObjectSnapMode SnapMode,
            /* [retval][out] */ VARIANT *vppt);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindFile )( 
            IIcadUtility * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ BSTR *FullPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAngle )( 
            IIcadUtility * This,
            /* [optional][in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *pAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCorner )( 
            IIcadUtility * This,
            /* [in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ VARIANT *vpCorner);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDistance )( 
            IIcadUtility * This,
            /* [optional][in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *pDistance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetEntity )( 
            IIcadUtility * This,
            /* [out][in] */ IDispatch **Object,
            /* [out][in] */ VARIANT *vPickedPoint,
            /* [optional][in] */ BSTR Prompt);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSubEntity )( 
            IIcadUtility * This,
            /* [out][in] */ IDispatch **Object,
            /* [out][in] */ VARIANT *vPickedPoint,
            /* [out][in] */ VARIANT *pVarTransMatrix,
            /* [out][in] */ VARIANT *ContextData,
            /* [optional][in] */ BSTR Prompt);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetInput )( 
            IIcadUtility * This,
            /* [retval][out] */ BSTR *InputString);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetInteger )( 
            IIcadUtility * This,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ long *Value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetOrientation )( 
            IIcadUtility * This,
            /* [optional][in] */ VARIANT vpt,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *pOrientation);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPoint )( 
            IIcadUtility * This,
            /* [optional][in] */ VARIANT Point,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ VARIANT *vppt);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetReal )( 
            IIcadUtility * This,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ double *Value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetString )( 
            IIcadUtility * This,
            /* [in] */ VARIANT_BOOL HasSpaces,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ BSTR *String);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TranslateCoordinates )( 
            IIcadUtility * This,
            /* [in] */ VARIANT vOriginPoint,
            /* [in] */ ZcCoordinateSystemTypes From,
            /* [in] */ ZcCoordinateSystemTypes To,
            /* [in] */ VARIANT_BOOL Disp,
            /* [optional][in] */ VARIANT OCSNormal,
            /* [retval][out] */ VARIANT *vppt);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InitializeUserInput )( 
            IIcadUtility * This,
            /* [in] */ ZcUserInputType Bits,
            /* [optional][in] */ VARIANT Keywords);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetKeyword )( 
            IIcadUtility * This,
            /* [optional][in] */ BSTR Prompt,
            /* [retval][out] */ BSTR *String);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PolarPoint )( 
            IIcadUtility * This,
            /* [in] */ VARIANT vPoint,
            /* [in] */ double Angle,
            /* [in] */ double Distance,
            /* [retval][out] */ VARIANT *vppPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PaintLine )( 
            IIcadUtility * This,
            /* [in] */ VARIANT vStartPoint,
            /* [in] */ VARIANT vEndPoint,
            /* [optional][in] */ ZcColors Color,
            /* [optional][in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowGraphicScreen )( 
            IIcadUtility * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowTextScreen )( 
            IIcadUtility * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *WildCardMatch )( 
            IIcadUtility * This,
            /* [in] */ BSTR Pattern,
            /* [in] */ BSTR String,
            /* [retval][out] */ VARIANT_BOOL *Match);
        
        END_INTERFACE
    } IIcadUtilityVtbl;

    interface IIcadUtility
    {
        CONST_VTBL struct IIcadUtilityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadUtility_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadUtility_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadUtility_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadUtility_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadUtility_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadUtility_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadUtility_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadUtility_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define IIcadUtility_get_Parent(This,Document)	\
    ( (This)->lpVtbl -> get_Parent(This,Document) ) 

#define IIcadUtility_Alert(This,message)	\
    ( (This)->lpVtbl -> Alert(This,message) ) 

#define IIcadUtility_AngleFromXAxis(This,vpt1,vpt2,pAngle)	\
    ( (This)->lpVtbl -> AngleFromXAxis(This,vpt1,vpt2,pAngle) ) 

#define IIcadUtility_AngleToReal(This,Angle,Unit,pAngle)	\
    ( (This)->lpVtbl -> AngleToReal(This,Angle,Unit,pAngle) ) 

#define IIcadUtility_DistanceToReal(This,Distance,Unit,pDistance)	\
    ( (This)->lpVtbl -> DistanceToReal(This,Distance,Unit,pDistance) ) 

#define IIcadUtility_RealToString(This,Value,Unit,Precision,Distance)	\
    ( (This)->lpVtbl -> RealToString(This,Value,Unit,Precision,Distance) ) 

#define IIcadUtility_AngleToString(This,Angle,Unit,Precision,str)	\
    ( (This)->lpVtbl -> AngleToString(This,Angle,Unit,Precision,str) ) 

#define IIcadUtility_Prompt(This,TextString)	\
    ( (This)->lpVtbl -> Prompt(This,TextString) ) 

#define IIcadUtility_ConvertUnit(This,Value,From,To,ConvertedValue)	\
    ( (This)->lpVtbl -> ConvertUnit(This,Value,From,To,ConvertedValue) ) 

#define IIcadUtility_EntitySnap(This,vInputPt,SnapMode,vppt)	\
    ( (This)->lpVtbl -> EntitySnap(This,vInputPt,SnapMode,vppt) ) 

#define IIcadUtility_FindFile(This,Name,FullPath)	\
    ( (This)->lpVtbl -> FindFile(This,Name,FullPath) ) 

#define IIcadUtility_GetAngle(This,vpt,Prompt,pAngle)	\
    ( (This)->lpVtbl -> GetAngle(This,vpt,Prompt,pAngle) ) 

#define IIcadUtility_GetCorner(This,vpt,Prompt,vpCorner)	\
    ( (This)->lpVtbl -> GetCorner(This,vpt,Prompt,vpCorner) ) 

#define IIcadUtility_GetDistance(This,vpt,Prompt,pDistance)	\
    ( (This)->lpVtbl -> GetDistance(This,vpt,Prompt,pDistance) ) 

#define IIcadUtility_GetEntity(This,Object,vPickedPoint,Prompt)	\
    ( (This)->lpVtbl -> GetEntity(This,Object,vPickedPoint,Prompt) ) 

#define IIcadUtility_GetSubEntity(This,Object,vPickedPoint,pVarTransMatrix,ContextData,Prompt)	\
    ( (This)->lpVtbl -> GetSubEntity(This,Object,vPickedPoint,pVarTransMatrix,ContextData,Prompt) ) 

#define IIcadUtility_GetInput(This,InputString)	\
    ( (This)->lpVtbl -> GetInput(This,InputString) ) 

#define IIcadUtility_GetInteger(This,Prompt,Value)	\
    ( (This)->lpVtbl -> GetInteger(This,Prompt,Value) ) 

#define IIcadUtility_GetOrientation(This,vpt,Prompt,pOrientation)	\
    ( (This)->lpVtbl -> GetOrientation(This,vpt,Prompt,pOrientation) ) 

#define IIcadUtility_GetPoint(This,Point,Prompt,vppt)	\
    ( (This)->lpVtbl -> GetPoint(This,Point,Prompt,vppt) ) 

#define IIcadUtility_GetReal(This,Prompt,Value)	\
    ( (This)->lpVtbl -> GetReal(This,Prompt,Value) ) 

#define IIcadUtility_GetString(This,HasSpaces,Prompt,String)	\
    ( (This)->lpVtbl -> GetString(This,HasSpaces,Prompt,String) ) 

#define IIcadUtility_TranslateCoordinates(This,vOriginPoint,From,To,Disp,OCSNormal,vppt)	\
    ( (This)->lpVtbl -> TranslateCoordinates(This,vOriginPoint,From,To,Disp,OCSNormal,vppt) ) 

#define IIcadUtility_InitializeUserInput(This,Bits,Keywords)	\
    ( (This)->lpVtbl -> InitializeUserInput(This,Bits,Keywords) ) 

#define IIcadUtility_GetKeyword(This,Prompt,String)	\
    ( (This)->lpVtbl -> GetKeyword(This,Prompt,String) ) 

#define IIcadUtility_PolarPoint(This,vPoint,Angle,Distance,vppPoint)	\
    ( (This)->lpVtbl -> PolarPoint(This,vPoint,Angle,Distance,vppPoint) ) 

#define IIcadUtility_PaintLine(This,vStartPoint,vEndPoint,Color,HighlightFlag)	\
    ( (This)->lpVtbl -> PaintLine(This,vStartPoint,vEndPoint,Color,HighlightFlag) ) 

#define IIcadUtility_ShowGraphicScreen(This)	\
    ( (This)->lpVtbl -> ShowGraphicScreen(This) ) 

#define IIcadUtility_ShowTextScreen(This)	\
    ( (This)->lpVtbl -> ShowTextScreen(This) ) 

#define IIcadUtility_WildCardMatch(This,Pattern,String,Match)	\
    ( (This)->lpVtbl -> WildCardMatch(This,Pattern,String,Match) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadUtility_INTERFACE_DEFINED__ */


#ifndef __IIcadHyperlinks_INTERFACE_DEFINED__
#define __IIcadHyperlinks_INTERFACE_DEFINED__

/* interface IIcadHyperlinks */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadHyperlinks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2AB12A27-314B-459e-99DE-FCEE76E1D75B")
    IIcadHyperlinks : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR strName,
            /* [retval][out] */ IIcadHyperlink **ppItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IIcadHyperlink **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadHyperlinksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadHyperlinks * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadHyperlinks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadHyperlinks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadHyperlinks * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadHyperlinks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadHyperlinks * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadHyperlinks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadHyperlinks * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadHyperlinks * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadHyperlinks * This,
            /* [in] */ BSTR strName,
            /* [retval][out] */ IIcadHyperlink **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadHyperlinks * This,
            /* [in] */ long Index,
            /* [retval][out] */ IIcadHyperlink **ppItem);
        
        END_INTERFACE
    } IIcadHyperlinksVtbl;

    interface IIcadHyperlinks
    {
        CONST_VTBL struct IIcadHyperlinksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadHyperlinks_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadHyperlinks_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadHyperlinks_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadHyperlinks_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadHyperlinks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadHyperlinks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadHyperlinks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadHyperlinks_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define IIcadHyperlinks_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadHyperlinks_Add(This,strName,ppItem)	\
    ( (This)->lpVtbl -> Add(This,strName,ppItem) ) 

#define IIcadHyperlinks_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadHyperlinks_INTERFACE_DEFINED__ */


#ifndef __IIcadHyperlink_INTERFACE_DEFINED__
#define __IIcadHyperlink_INTERFACE_DEFINED__

/* interface IIcadHyperlink */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadHyperlink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C61E4FF4-84CF-428c-B73F-59AA14E91BF5")
    IIcadHyperlink : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *pUrl) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR strUrl) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_URLDescription( 
            /* [retval][out] */ BSTR *pDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_URLDescription( 
            /* [in] */ BSTR strDescription) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_URLNamedLocation( 
            /* [retval][out] */ BSTR *pNamedLocation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_URLNamedLocation( 
            /* [in] */ BSTR strNamedLocation) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadHyperlinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadHyperlink * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadHyperlink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadHyperlink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadHyperlink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadHyperlink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadHyperlink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadHyperlink * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadHyperlink * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            IIcadHyperlink * This,
            /* [retval][out] */ BSTR *pUrl);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_URL )( 
            IIcadHyperlink * This,
            /* [in] */ BSTR strUrl);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_URLDescription )( 
            IIcadHyperlink * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_URLDescription )( 
            IIcadHyperlink * This,
            /* [in] */ BSTR strDescription);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_URLNamedLocation )( 
            IIcadHyperlink * This,
            /* [retval][out] */ BSTR *pNamedLocation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_URLNamedLocation )( 
            IIcadHyperlink * This,
            /* [in] */ BSTR strNamedLocation);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadHyperlink * This);
        
        END_INTERFACE
    } IIcadHyperlinkVtbl;

    interface IIcadHyperlink
    {
        CONST_VTBL struct IIcadHyperlinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadHyperlink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadHyperlink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadHyperlink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadHyperlink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadHyperlink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadHyperlink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadHyperlink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadHyperlink_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define IIcadHyperlink_get_URL(This,pUrl)	\
    ( (This)->lpVtbl -> get_URL(This,pUrl) ) 

#define IIcadHyperlink_put_URL(This,strUrl)	\
    ( (This)->lpVtbl -> put_URL(This,strUrl) ) 

#define IIcadHyperlink_get_URLDescription(This,pDescription)	\
    ( (This)->lpVtbl -> get_URLDescription(This,pDescription) ) 

#define IIcadHyperlink_put_URLDescription(This,strDescription)	\
    ( (This)->lpVtbl -> put_URLDescription(This,strDescription) ) 

#define IIcadHyperlink_get_URLNamedLocation(This,pNamedLocation)	\
    ( (This)->lpVtbl -> get_URLNamedLocation(This,pNamedLocation) ) 

#define IIcadHyperlink_put_URLNamedLocation(This,strNamedLocation)	\
    ( (This)->lpVtbl -> put_URLNamedLocation(This,strNamedLocation) ) 

#define IIcadHyperlink_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadHyperlink_INTERFACE_DEFINED__ */


#ifndef __IIcadAcCmColor_INTERFACE_DEFINED__
#define __IIcadAcCmColor_INTERFACE_DEFINED__

/* interface IIcadAcCmColor */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadAcCmColor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1EBFF339-1105-4d25-AFDD-E15BEC39C986")
    IIcadAcCmColor : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Blue( 
            /* [retval][out] */ long *pBlue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Green( 
            /* [retval][out] */ long *pGreen) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Red( 
            /* [retval][out] */ long *pRed) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BookName( 
            /* [retval][out] */ BSTR *pBookName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ColorIndex( 
            /* [retval][out] */ ZcColors *penumColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ColorIndex( 
            /* [in] */ ZcColors enumColor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ColorMethod( 
            /* [retval][out] */ ZcColorMethod *pColorMethor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ColorMethod( 
            /* [in] */ ZcColorMethod enumColorMethor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ColorName( 
            /* [retval][out] */ BSTR *pColorName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EntityColor( 
            /* [retval][out] */ long *pEnttityColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EntityColor( 
            /* [in] */ long lngEntityColor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetColorBookColor( 
            /* [in] */ BSTR BookName,
            /* [in] */ BSTR ColorName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetNames( 
            /* [in] */ BSTR ColorName,
            /* [in] */ BSTR BookName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetRGB( 
            /* [in] */ long Red,
            /* [in] */ long Green,
            /* [in] */ long Blue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadAcCmColorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadAcCmColor * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadAcCmColor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadAcCmColor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadAcCmColor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadAcCmColor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadAcCmColor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadAcCmColor * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Blue )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ long *pBlue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Green )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ long *pGreen);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Red )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ long *pRed);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BookName )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ BSTR *pBookName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorIndex )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ ZcColors *penumColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColorIndex )( 
            IIcadAcCmColor * This,
            /* [in] */ ZcColors enumColor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorMethod )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ ZcColorMethod *pColorMethor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColorMethod )( 
            IIcadAcCmColor * This,
            /* [in] */ ZcColorMethod enumColorMethor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorName )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ BSTR *pColorName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityColor )( 
            IIcadAcCmColor * This,
            /* [retval][out] */ long *pEnttityColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EntityColor )( 
            IIcadAcCmColor * This,
            /* [in] */ long lngEntityColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadAcCmColor * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColorBookColor )( 
            IIcadAcCmColor * This,
            /* [in] */ BSTR BookName,
            /* [in] */ BSTR ColorName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetNames )( 
            IIcadAcCmColor * This,
            /* [in] */ BSTR ColorName,
            /* [in] */ BSTR BookName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetRGB )( 
            IIcadAcCmColor * This,
            /* [in] */ long Red,
            /* [in] */ long Green,
            /* [in] */ long Blue);
        
        END_INTERFACE
    } IIcadAcCmColorVtbl;

    interface IIcadAcCmColor
    {
        CONST_VTBL struct IIcadAcCmColorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadAcCmColor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadAcCmColor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadAcCmColor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadAcCmColor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadAcCmColor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadAcCmColor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadAcCmColor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadAcCmColor_get_Blue(This,pBlue)	\
    ( (This)->lpVtbl -> get_Blue(This,pBlue) ) 

#define IIcadAcCmColor_get_Green(This,pGreen)	\
    ( (This)->lpVtbl -> get_Green(This,pGreen) ) 

#define IIcadAcCmColor_get_Red(This,pRed)	\
    ( (This)->lpVtbl -> get_Red(This,pRed) ) 

#define IIcadAcCmColor_get_BookName(This,pBookName)	\
    ( (This)->lpVtbl -> get_BookName(This,pBookName) ) 

#define IIcadAcCmColor_get_ColorIndex(This,penumColor)	\
    ( (This)->lpVtbl -> get_ColorIndex(This,penumColor) ) 

#define IIcadAcCmColor_put_ColorIndex(This,enumColor)	\
    ( (This)->lpVtbl -> put_ColorIndex(This,enumColor) ) 

#define IIcadAcCmColor_get_ColorMethod(This,pColorMethor)	\
    ( (This)->lpVtbl -> get_ColorMethod(This,pColorMethor) ) 

#define IIcadAcCmColor_put_ColorMethod(This,enumColorMethor)	\
    ( (This)->lpVtbl -> put_ColorMethod(This,enumColorMethor) ) 

#define IIcadAcCmColor_get_ColorName(This,pColorName)	\
    ( (This)->lpVtbl -> get_ColorName(This,pColorName) ) 

#define IIcadAcCmColor_get_EntityColor(This,pEnttityColor)	\
    ( (This)->lpVtbl -> get_EntityColor(This,pEnttityColor) ) 

#define IIcadAcCmColor_put_EntityColor(This,lngEntityColor)	\
    ( (This)->lpVtbl -> put_EntityColor(This,lngEntityColor) ) 

#define IIcadAcCmColor_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadAcCmColor_SetColorBookColor(This,BookName,ColorName)	\
    ( (This)->lpVtbl -> SetColorBookColor(This,BookName,ColorName) ) 

#define IIcadAcCmColor_SetNames(This,ColorName,BookName)	\
    ( (This)->lpVtbl -> SetNames(This,ColorName,BookName) ) 

#define IIcadAcCmColor_SetRGB(This,Red,Green,Blue)	\
    ( (This)->lpVtbl -> SetRGB(This,Red,Green,Blue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadAcCmColor_INTERFACE_DEFINED__ */


#ifndef __IIcadPlotterPen_INTERFACE_DEFINED__
#define __IIcadPlotterPen_INTERFACE_DEFINED__

/* interface IIcadPlotterPen */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadPlotterPen;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("06c6dc36-b8ca-411c-bb7e-a54b84a1980c")
    IIcadPlotterPen : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Weight( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Weight( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ int *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Number( 
            /* [in] */ int newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LineType( 
            /* [retval][out] */ short *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LineType( 
            /* [in] */ short newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotterPenVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlotterPen * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlotterPen * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlotterPen * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPlotterPen * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPlotterPen * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPlotterPen * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPlotterPen * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Weight )( 
            IIcadPlotterPen * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Weight )( 
            IIcadPlotterPen * This,
            /* [in] */ double newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Number )( 
            IIcadPlotterPen * This,
            /* [retval][out] */ int *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Number )( 
            IIcadPlotterPen * This,
            /* [in] */ int newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineType )( 
            IIcadPlotterPen * This,
            /* [retval][out] */ short *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineType )( 
            IIcadPlotterPen * This,
            /* [in] */ short newVal);
        
        END_INTERFACE
    } IIcadPlotterPenVtbl;

    interface IIcadPlotterPen
    {
        CONST_VTBL struct IIcadPlotterPenVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlotterPen_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlotterPen_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlotterPen_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlotterPen_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPlotterPen_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPlotterPen_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPlotterPen_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPlotterPen_get_Weight(This,pVal)	\
    ( (This)->lpVtbl -> get_Weight(This,pVal) ) 

#define IIcadPlotterPen_put_Weight(This,newVal)	\
    ( (This)->lpVtbl -> put_Weight(This,newVal) ) 

#define IIcadPlotterPen_get_Number(This,pVal)	\
    ( (This)->lpVtbl -> get_Number(This,pVal) ) 

#define IIcadPlotterPen_put_Number(This,newVal)	\
    ( (This)->lpVtbl -> put_Number(This,newVal) ) 

#define IIcadPlotterPen_get_LineType(This,pVal)	\
    ( (This)->lpVtbl -> get_LineType(This,pVal) ) 

#define IIcadPlotterPen_put_LineType(This,newVal)	\
    ( (This)->lpVtbl -> put_LineType(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlotterPen_INTERFACE_DEFINED__ */


#ifndef __IIcadPlotterPens_INTERFACE_DEFINED__
#define __IIcadPlotterPens_INTERFACE_DEFINED__

/* interface IIcadPlotterPens */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadPlotterPens;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("aaf21ae4-01d6-40b3-8880-a627faede489")
    IIcadPlotterPens : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ short *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            VARIANT index,
            /* [retval][out] */ IIcadPlotterPen **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotterPensVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlotterPens * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlotterPens * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlotterPens * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPlotterPens * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPlotterPens * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPlotterPens * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPlotterPens * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadPlotterPens * This,
            /* [retval][out] */ short *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IIcadPlotterPens * This,
            VARIANT index,
            /* [retval][out] */ IIcadPlotterPen **pVal);
        
        END_INTERFACE
    } IIcadPlotterPensVtbl;

    interface IIcadPlotterPens
    {
        CONST_VTBL struct IIcadPlotterPensVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlotterPens_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlotterPens_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlotterPens_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlotterPens_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPlotterPens_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPlotterPens_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPlotterPens_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPlotterPens_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IIcadPlotterPens_get_Item(This,index,pVal)	\
    ( (This)->lpVtbl -> get_Item(This,index,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlotterPens_INTERFACE_DEFINED__ */


#ifndef __IIcadPlotProperties_INTERFACE_DEFINED__
#define __IIcadPlotProperties_INTERFACE_DEFINED__

/* interface IIcadPlotProperties */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadPlotProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6f0eae96-c763-4624-8410-817b81f57247")
    IIcadPlotProperties : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PenWidth( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PenWidth( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StandardScale( 
            /* [retval][out] */ ZcPlotScale *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StandardScale( 
            /* [in] */ ZcPlotScale newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Rotate( 
            /* [retval][out] */ short *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Rotate( 
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OptimizeLevel( 
            /* [retval][out] */ short *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OptimizeLevel( 
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Units( 
            /* [retval][out] */ ZcPlotPaperUnits *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Units( 
            /* [in] */ ZcPlotPaperUnits newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OriginX( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OriginX( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OriginY( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OriginY( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Pens( 
            /* [retval][out] */ IIcadPlotterPens **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseLWeight( 
            /* [retval][out] */ BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseLWeight( 
            /* [in] */ BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleLWeight( 
            /* [retval][out] */ BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleLWeight( 
            /* [in] */ BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StyleSheet( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StyleSheet( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCustomScale( 
            double *pNumeratorInScale,
            double *pDenominatorInScale) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCustomScale( 
            double nNumeratorInScale,
            double nDenominatorInScale) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseStandardScale( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseStandardScale( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlotProperties * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlotProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlotProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPlotProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPlotProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPlotProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPlotProperties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PenWidth )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PenWidth )( 
            IIcadPlotProperties * This,
            /* [in] */ float newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StandardScale )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ ZcPlotScale *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StandardScale )( 
            IIcadPlotProperties * This,
            /* [in] */ ZcPlotScale newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotate )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ short *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotate )( 
            IIcadPlotProperties * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OptimizeLevel )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ short *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OptimizeLevel )( 
            IIcadPlotProperties * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Units )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ ZcPlotPaperUnits *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Units )( 
            IIcadPlotProperties * This,
            /* [in] */ ZcPlotPaperUnits newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OriginX )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OriginX )( 
            IIcadPlotProperties * This,
            /* [in] */ double newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OriginY )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OriginY )( 
            IIcadPlotProperties * This,
            /* [in] */ double newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Pens )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ IIcadPlotterPens **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseLWeight )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseLWeight )( 
            IIcadPlotProperties * This,
            /* [in] */ BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLWeight )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLWeight )( 
            IIcadPlotProperties * This,
            /* [in] */ BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )( 
            IIcadPlotProperties * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomScale )( 
            IIcadPlotProperties * This,
            double *pNumeratorInScale,
            double *pDenominatorInScale);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCustomScale )( 
            IIcadPlotProperties * This,
            double nNumeratorInScale,
            double nDenominatorInScale);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseStandardScale )( 
            IIcadPlotProperties * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseStandardScale )( 
            IIcadPlotProperties * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IIcadPlotPropertiesVtbl;

    interface IIcadPlotProperties
    {
        CONST_VTBL struct IIcadPlotPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlotProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlotProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlotProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlotProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPlotProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPlotProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPlotProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPlotProperties_get_PenWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_PenWidth(This,pVal) ) 

#define IIcadPlotProperties_put_PenWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_PenWidth(This,newVal) ) 

#define IIcadPlotProperties_get_StandardScale(This,pVal)	\
    ( (This)->lpVtbl -> get_StandardScale(This,pVal) ) 

#define IIcadPlotProperties_put_StandardScale(This,newVal)	\
    ( (This)->lpVtbl -> put_StandardScale(This,newVal) ) 

#define IIcadPlotProperties_get_Rotate(This,pVal)	\
    ( (This)->lpVtbl -> get_Rotate(This,pVal) ) 

#define IIcadPlotProperties_put_Rotate(This,newVal)	\
    ( (This)->lpVtbl -> put_Rotate(This,newVal) ) 

#define IIcadPlotProperties_get_OptimizeLevel(This,pVal)	\
    ( (This)->lpVtbl -> get_OptimizeLevel(This,pVal) ) 

#define IIcadPlotProperties_put_OptimizeLevel(This,newVal)	\
    ( (This)->lpVtbl -> put_OptimizeLevel(This,newVal) ) 

#define IIcadPlotProperties_get_Version(This,pVal)	\
    ( (This)->lpVtbl -> get_Version(This,pVal) ) 

#define IIcadPlotProperties_get_Units(This,pVal)	\
    ( (This)->lpVtbl -> get_Units(This,pVal) ) 

#define IIcadPlotProperties_put_Units(This,newVal)	\
    ( (This)->lpVtbl -> put_Units(This,newVal) ) 

#define IIcadPlotProperties_get_OriginX(This,pVal)	\
    ( (This)->lpVtbl -> get_OriginX(This,pVal) ) 

#define IIcadPlotProperties_put_OriginX(This,newVal)	\
    ( (This)->lpVtbl -> put_OriginX(This,newVal) ) 

#define IIcadPlotProperties_get_OriginY(This,pVal)	\
    ( (This)->lpVtbl -> get_OriginY(This,pVal) ) 

#define IIcadPlotProperties_put_OriginY(This,newVal)	\
    ( (This)->lpVtbl -> put_OriginY(This,newVal) ) 

#define IIcadPlotProperties_get_Pens(This,pVal)	\
    ( (This)->lpVtbl -> get_Pens(This,pVal) ) 

#define IIcadPlotProperties_get_UseLWeight(This,pVal)	\
    ( (This)->lpVtbl -> get_UseLWeight(This,pVal) ) 

#define IIcadPlotProperties_put_UseLWeight(This,newVal)	\
    ( (This)->lpVtbl -> put_UseLWeight(This,newVal) ) 

#define IIcadPlotProperties_get_ScaleLWeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLWeight(This,pVal) ) 

#define IIcadPlotProperties_put_ScaleLWeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLWeight(This,newVal) ) 

#define IIcadPlotProperties_get_StyleSheet(This,pVal)	\
    ( (This)->lpVtbl -> get_StyleSheet(This,pVal) ) 

#define IIcadPlotProperties_put_StyleSheet(This,newVal)	\
    ( (This)->lpVtbl -> put_StyleSheet(This,newVal) ) 

#define IIcadPlotProperties_GetCustomScale(This,pNumeratorInScale,pDenominatorInScale)	\
    ( (This)->lpVtbl -> GetCustomScale(This,pNumeratorInScale,pDenominatorInScale) ) 

#define IIcadPlotProperties_SetCustomScale(This,nNumeratorInScale,nDenominatorInScale)	\
    ( (This)->lpVtbl -> SetCustomScale(This,nNumeratorInScale,nDenominatorInScale) ) 

#define IIcadPlotProperties_get_UseStandardScale(This,pVal)	\
    ( (This)->lpVtbl -> get_UseStandardScale(This,pVal) ) 

#define IIcadPlotProperties_put_UseStandardScale(This,newVal)	\
    ( (This)->lpVtbl -> put_UseStandardScale(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlotProperties_INTERFACE_DEFINED__ */


#ifndef __IIcadPlotManager_INTERFACE_DEFINED__
#define __IIcadPlotManager_INTERFACE_DEFINED__

/* interface IIcadPlotManager */
/* [unique][helpstring][dual][uuid][object] */ 

typedef /* [uuid] */  DECLSPEC_UUID("a46534f0-4695-4199-be31-a8d7e980c7ec") 
enum ZcPrintArea
    {	zcPACurrentView	= 0,
	zcPASavedView	= ( zcPACurrentView + 1 ) ,
	zcPAExtents	= ( zcPASavedView + 1 ) ,
	zcPALimits	= ( zcPAExtents + 1 ) ,
	zcPAWindow	= ( zcPALimits + 1 ) 
    } 	ZcPrintArea;

typedef /* [uuid] */  DECLSPEC_UUID("65786e03-e163-4fb9-8c2f-a6ba42c14e70") 
enum ZcOrientation
    {	zcPortrait	= 0,
	zcLandscape	= ( zcPortrait + 1 ) 
    } 	ZcOrientation;


EXTERN_C const IID IID_IIcadPlotManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e7db2dcf-7b70-4e1c-98f6-6a5ee01fb69c")
    IIcadPlotManager : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PlotProperties( 
            /* [retval][out] */ IIcadPlotProperties **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ImportPlotProperties( 
            BSTR filename) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExportPlotProperties( 
            BSTR filename) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Print( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Preview( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ ZcPrintArea *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Area( 
            /* [in] */ ZcPrintArea newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HideLines( 
            /* [retval][out] */ BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HideLines( 
            /* [in] */ BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PaperOrientation( 
            /* [retval][out] */ ZcOrientation *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PaperOrientation( 
            /* [in] */ ZcOrientation newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Footer( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Footer( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OnlyWindowArea( 
            /* [retval][out] */ BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OnlyWindowArea( 
            /* [in] */ BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_View( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_View( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetWindow( 
            double *fromX,
            double *fromY,
            double *toX,
            double *toY) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetWindow( 
            double fromX,
            double fromY,
            double toX,
            double toY) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPaperSize( 
            double *length,
            double *width) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPaperSize( 
            double length,
            double width) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CenterOnPage( 
            /* [retval][out] */ BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CenterOnPage( 
            /* [in] */ BOOL newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ClosePreview( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Printer( 
            /* [retval][out] */ BSTR *pbsPrinterName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Printer( 
            /* [in] */ BSTR bsPrinterName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseSettingsFromLayout( 
            /* [retval][out] */ VARIANT_BOOL *pValue) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseSettingsFromLayout( 
            /* [in] */ VARIANT_BOOL value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlotManager * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlotManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlotManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPlotManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPlotManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPlotManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPlotManager * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotProperties )( 
            IIcadPlotManager * This,
            /* [retval][out] */ IIcadPlotProperties **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ImportPlotProperties )( 
            IIcadPlotManager * This,
            BSTR filename);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExportPlotProperties )( 
            IIcadPlotManager * This,
            BSTR filename);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Print )( 
            IIcadPlotManager * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Preview )( 
            IIcadPlotManager * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadPlotManager * This,
            /* [retval][out] */ ZcPrintArea *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Area )( 
            IIcadPlotManager * This,
            /* [in] */ ZcPrintArea newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HideLines )( 
            IIcadPlotManager * This,
            /* [retval][out] */ BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HideLines )( 
            IIcadPlotManager * This,
            /* [in] */ BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaperOrientation )( 
            IIcadPlotManager * This,
            /* [retval][out] */ ZcOrientation *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PaperOrientation )( 
            IIcadPlotManager * This,
            /* [in] */ ZcOrientation newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            IIcadPlotManager * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            IIcadPlotManager * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Footer )( 
            IIcadPlotManager * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Footer )( 
            IIcadPlotManager * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OnlyWindowArea )( 
            IIcadPlotManager * This,
            /* [retval][out] */ BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OnlyWindowArea )( 
            IIcadPlotManager * This,
            /* [in] */ BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_View )( 
            IIcadPlotManager * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_View )( 
            IIcadPlotManager * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetWindow )( 
            IIcadPlotManager * This,
            double *fromX,
            double *fromY,
            double *toX,
            double *toY);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetWindow )( 
            IIcadPlotManager * This,
            double fromX,
            double fromY,
            double toX,
            double toY);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPaperSize )( 
            IIcadPlotManager * This,
            double *length,
            double *width);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetPaperSize )( 
            IIcadPlotManager * This,
            double length,
            double width);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterOnPage )( 
            IIcadPlotManager * This,
            /* [retval][out] */ BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterOnPage )( 
            IIcadPlotManager * This,
            /* [in] */ BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ClosePreview )( 
            IIcadPlotManager * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Printer )( 
            IIcadPlotManager * This,
            /* [retval][out] */ BSTR *pbsPrinterName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Printer )( 
            IIcadPlotManager * This,
            /* [in] */ BSTR bsPrinterName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseSettingsFromLayout )( 
            IIcadPlotManager * This,
            /* [retval][out] */ VARIANT_BOOL *pValue);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseSettingsFromLayout )( 
            IIcadPlotManager * This,
            /* [in] */ VARIANT_BOOL value);
        
        END_INTERFACE
    } IIcadPlotManagerVtbl;

    interface IIcadPlotManager
    {
        CONST_VTBL struct IIcadPlotManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlotManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlotManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlotManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlotManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPlotManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPlotManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPlotManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPlotManager_get_PlotProperties(This,pVal)	\
    ( (This)->lpVtbl -> get_PlotProperties(This,pVal) ) 

#define IIcadPlotManager_ImportPlotProperties(This,filename)	\
    ( (This)->lpVtbl -> ImportPlotProperties(This,filename) ) 

#define IIcadPlotManager_ExportPlotProperties(This,filename)	\
    ( (This)->lpVtbl -> ExportPlotProperties(This,filename) ) 

#define IIcadPlotManager_Print(This)	\
    ( (This)->lpVtbl -> Print(This) ) 

#define IIcadPlotManager_Preview(This)	\
    ( (This)->lpVtbl -> Preview(This) ) 

#define IIcadPlotManager_get_Area(This,pVal)	\
    ( (This)->lpVtbl -> get_Area(This,pVal) ) 

#define IIcadPlotManager_put_Area(This,newVal)	\
    ( (This)->lpVtbl -> put_Area(This,newVal) ) 

#define IIcadPlotManager_get_HideLines(This,pVal)	\
    ( (This)->lpVtbl -> get_HideLines(This,pVal) ) 

#define IIcadPlotManager_put_HideLines(This,newVal)	\
    ( (This)->lpVtbl -> put_HideLines(This,newVal) ) 

#define IIcadPlotManager_get_PaperOrientation(This,pVal)	\
    ( (This)->lpVtbl -> get_PaperOrientation(This,pVal) ) 

#define IIcadPlotManager_put_PaperOrientation(This,newVal)	\
    ( (This)->lpVtbl -> put_PaperOrientation(This,newVal) ) 

#define IIcadPlotManager_get_Header(This,pVal)	\
    ( (This)->lpVtbl -> get_Header(This,pVal) ) 

#define IIcadPlotManager_put_Header(This,newVal)	\
    ( (This)->lpVtbl -> put_Header(This,newVal) ) 

#define IIcadPlotManager_get_Footer(This,pVal)	\
    ( (This)->lpVtbl -> get_Footer(This,pVal) ) 

#define IIcadPlotManager_put_Footer(This,newVal)	\
    ( (This)->lpVtbl -> put_Footer(This,newVal) ) 

#define IIcadPlotManager_get_OnlyWindowArea(This,pVal)	\
    ( (This)->lpVtbl -> get_OnlyWindowArea(This,pVal) ) 

#define IIcadPlotManager_put_OnlyWindowArea(This,newVal)	\
    ( (This)->lpVtbl -> put_OnlyWindowArea(This,newVal) ) 

#define IIcadPlotManager_get_View(This,pVal)	\
    ( (This)->lpVtbl -> get_View(This,pVal) ) 

#define IIcadPlotManager_put_View(This,newVal)	\
    ( (This)->lpVtbl -> put_View(This,newVal) ) 

#define IIcadPlotManager_GetWindow(This,fromX,fromY,toX,toY)	\
    ( (This)->lpVtbl -> GetWindow(This,fromX,fromY,toX,toY) ) 

#define IIcadPlotManager_SetWindow(This,fromX,fromY,toX,toY)	\
    ( (This)->lpVtbl -> SetWindow(This,fromX,fromY,toX,toY) ) 

#define IIcadPlotManager_GetPaperSize(This,length,width)	\
    ( (This)->lpVtbl -> GetPaperSize(This,length,width) ) 

#define IIcadPlotManager_SetPaperSize(This,length,width)	\
    ( (This)->lpVtbl -> SetPaperSize(This,length,width) ) 

#define IIcadPlotManager_get_CenterOnPage(This,pVal)	\
    ( (This)->lpVtbl -> get_CenterOnPage(This,pVal) ) 

#define IIcadPlotManager_put_CenterOnPage(This,newVal)	\
    ( (This)->lpVtbl -> put_CenterOnPage(This,newVal) ) 

#define IIcadPlotManager_ClosePreview(This)	\
    ( (This)->lpVtbl -> ClosePreview(This) ) 

#define IIcadPlotManager_get_Printer(This,pbsPrinterName)	\
    ( (This)->lpVtbl -> get_Printer(This,pbsPrinterName) ) 

#define IIcadPlotManager_put_Printer(This,bsPrinterName)	\
    ( (This)->lpVtbl -> put_Printer(This,bsPrinterName) ) 

#define IIcadPlotManager_get_UseSettingsFromLayout(This,pValue)	\
    ( (This)->lpVtbl -> get_UseSettingsFromLayout(This,pValue) ) 

#define IIcadPlotManager_put_UseSettingsFromLayout(This,value)	\
    ( (This)->lpVtbl -> put_UseSettingsFromLayout(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlotManager_INTERFACE_DEFINED__ */


#ifndef __IIcadPlotRegManager_INTERFACE_DEFINED__
#define __IIcadPlotRegManager_INTERFACE_DEFINED__

/* interface IIcadPlotRegManager */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadPlotRegManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8ccf2f56-b312-4fb0-a131-34cae7c6292f")
    IIcadPlotRegManager : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ImportRegPlotProperties( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExportRegPlotProperties( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RegPlotProperties( 
            /* [retval][out] */ IIcadPlotProperties **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotRegManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlotRegManager * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlotRegManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlotRegManager * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ImportRegPlotProperties )( 
            IIcadPlotRegManager * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExportRegPlotProperties )( 
            IIcadPlotRegManager * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegPlotProperties )( 
            IIcadPlotRegManager * This,
            /* [retval][out] */ IIcadPlotProperties **pVal);
        
        END_INTERFACE
    } IIcadPlotRegManagerVtbl;

    interface IIcadPlotRegManager
    {
        CONST_VTBL struct IIcadPlotRegManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlotRegManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlotRegManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlotRegManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlotRegManager_ImportRegPlotProperties(This)	\
    ( (This)->lpVtbl -> ImportRegPlotProperties(This) ) 

#define IIcadPlotRegManager_ExportRegPlotProperties(This)	\
    ( (This)->lpVtbl -> ExportRegPlotProperties(This) ) 

#define IIcadPlotRegManager_get_RegPlotProperties(This,pVal)	\
    ( (This)->lpVtbl -> get_RegPlotProperties(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlotRegManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_Icad_0000_0014 */
/* [local] */ 











enum ZcMenuItemType
    {	zcMenuItem	= 0,
	zcMenuSeparator	= 1,
	zcMenuSubMenu	= 2
    } ;

enum ZcToolbarItemType
    {	zcToolbarButton	= 0,
	zcToolbarSeparator	= 1,
	zcToolbarControl	= 2,
	zcToolbarFlyout	= 3,
	zcToolbarError	= ( zcToolbarFlyout + 1 ) ,
	zcToolbarPopup	= ( zcToolbarError + 1 ) ,
	zcToolbarButtonPopup	= ( zcToolbarPopup + 1 ) ,
	zcToolbarSplitButtonPopup	= ( zcToolbarButtonPopup + 1 ) ,
	zcToolbarComboBox	= ( zcToolbarSplitButtonPopup + 1 ) ,
	zcToolbarEdit	= ( zcToolbarComboBox + 1 ) ,
	zcToolbarCustom	= ( zcToolbarEdit + 1 ) ,
	zcToolbarLabel	= ( zcToolbarCustom + 1 ) ,
	zcToolbarCheckBox	= ( zcToolbarLabel + 1 ) ,
	zcToolbarGallery	= ( zcToolbarCheckBox + 1 ) ,
	zcToolbarZwButtonPopup	= ( zcToolbarGallery + 1 ) 
    } ;

enum ZcToolbarDockStatus
    {	zcToolBarTop	= 0,
	zcToolBarBottom	= 1,
	zcToolBarLeft	= 2,
	zcToolBarRight	= 3,
	zcToolBarFloating	= 4,
	zcToolBarPopup	= 5,
	zcToolBarListBox	= 6,
	zcToolBarNone	= 7
    } ;


extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0014_v0_0_s_ifspec;

#ifndef __IIcadMenuBar_INTERFACE_DEFINED__
#define __IIcadMenuBar_INTERFACE_DEFINED__

/* interface IIcadMenuBar */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadMenuBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4020F359-E32D-46b2-BCB2-C65815FCC0F5")
    IIcadMenuBar : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadApplication **pParent) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT index,
            /* [retval][out] */ IIcadPopupMenu **pItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadMenuBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadMenuBar * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadMenuBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadMenuBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadMenuBar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadMenuBar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadMenuBar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadMenuBar * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadMenuBar * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadMenuBar * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadMenuBar * This,
            /* [retval][out] */ IIcadApplication **pParent);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadMenuBar * This,
            /* [in] */ VARIANT index,
            /* [retval][out] */ IIcadPopupMenu **pItem);
        
        END_INTERFACE
    } IIcadMenuBarVtbl;

    interface IIcadMenuBar
    {
        CONST_VTBL struct IIcadMenuBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadMenuBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadMenuBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadMenuBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadMenuBar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadMenuBar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadMenuBar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadMenuBar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadMenuBar_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadMenuBar_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define IIcadMenuBar_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define IIcadMenuBar_Item(This,index,pItem)	\
    ( (This)->lpVtbl -> Item(This,index,pItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadMenuBar_INTERFACE_DEFINED__ */


#ifndef __IIcadMenuGroups_INTERFACE_DEFINED__
#define __IIcadMenuGroups_INTERFACE_DEFINED__

/* interface IIcadMenuGroups */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadMenuGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DB4B5376-AE06-4e4b-967B-234D7650F611")
    IIcadMenuGroups : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadApplication **pParent) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadMenuGroup **pItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadMenuGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadMenuGroups * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadMenuGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadMenuGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadMenuGroups * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadMenuGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadMenuGroups * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadMenuGroups * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadMenuGroups * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadMenuGroups * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadMenuGroups * This,
            /* [retval][out] */ IIcadApplication **pParent);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadMenuGroups * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadMenuGroup **pItem);
        
        END_INTERFACE
    } IIcadMenuGroupsVtbl;

    interface IIcadMenuGroups
    {
        CONST_VTBL struct IIcadMenuGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadMenuGroups_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadMenuGroups_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadMenuGroups_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadMenuGroups_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadMenuGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadMenuGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadMenuGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadMenuGroups_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadMenuGroups_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define IIcadMenuGroups_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define IIcadMenuGroups_Item(This,Index,pItem)	\
    ( (This)->lpVtbl -> Item(This,Index,pItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadMenuGroups_INTERFACE_DEFINED__ */


#ifndef __IIcadMenuGroup_INTERFACE_DEFINED__
#define __IIcadMenuGroup_INTERFACE_DEFINED__

/* interface IIcadMenuGroup */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadMenuGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11216E6C-D96A-4d45-95F9-B0BF217A28A8")
    IIcadMenuGroup : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Menus( 
            /* [retval][out] */ IIcadPopupMenus **pMenus) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadMenuGroups **pParent) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Toolbars( 
            /* [retval][out] */ IIcadToolbars **pToolbars) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadMenuGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadMenuGroup * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadMenuGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadMenuGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadMenuGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadMenuGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadMenuGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadMenuGroup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadMenuGroup * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Menus )( 
            IIcadMenuGroup * This,
            /* [retval][out] */ IIcadPopupMenus **pMenus);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadMenuGroup * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadMenuGroup * This,
            /* [retval][out] */ IIcadMenuGroups **pParent);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Toolbars )( 
            IIcadMenuGroup * This,
            /* [retval][out] */ IIcadToolbars **pToolbars);
        
        END_INTERFACE
    } IIcadMenuGroupVtbl;

    interface IIcadMenuGroup
    {
        CONST_VTBL struct IIcadMenuGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadMenuGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadMenuGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadMenuGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadMenuGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadMenuGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadMenuGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadMenuGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadMenuGroup_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadMenuGroup_get_Menus(This,pMenus)	\
    ( (This)->lpVtbl -> get_Menus(This,pMenus) ) 

#define IIcadMenuGroup_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define IIcadMenuGroup_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define IIcadMenuGroup_get_Toolbars(This,pToolbars)	\
    ( (This)->lpVtbl -> get_Toolbars(This,pToolbars) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadMenuGroup_INTERFACE_DEFINED__ */


#ifndef __IIcadPopupMenus_INTERFACE_DEFINED__
#define __IIcadPopupMenus_INTERFACE_DEFINED__

/* interface IIcadPopupMenus */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadPopupMenus;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F26288E3-76A7-48bd-89A3-B7F38675AD51")
    IIcadPopupMenus : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadMenuGroup **pParent) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR MenuName,
            /* [retval][out] */ IIcadPopupMenu **pMenu) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPopupMenu **pMenu) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveMenuFromMenuBar( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPopupMenusVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPopupMenus * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPopupMenus * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPopupMenus * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPopupMenus * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPopupMenus * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPopupMenus * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPopupMenus * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPopupMenus * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadPopupMenus * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPopupMenus * This,
            /* [retval][out] */ IIcadMenuGroup **pParent);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadPopupMenus * This,
            /* [in] */ BSTR MenuName,
            /* [retval][out] */ IIcadPopupMenu **pMenu);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadPopupMenus * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPopupMenu **pMenu);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveMenuFromMenuBar )( 
            IIcadPopupMenus * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IIcadPopupMenusVtbl;

    interface IIcadPopupMenus
    {
        CONST_VTBL struct IIcadPopupMenusVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPopupMenus_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPopupMenus_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPopupMenus_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPopupMenus_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPopupMenus_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPopupMenus_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPopupMenus_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPopupMenus_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadPopupMenus_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define IIcadPopupMenus_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define IIcadPopupMenus_Add(This,MenuName,pMenu)	\
    ( (This)->lpVtbl -> Add(This,MenuName,pMenu) ) 

#define IIcadPopupMenus_Item(This,Index,pMenu)	\
    ( (This)->lpVtbl -> Item(This,Index,pMenu) ) 

#define IIcadPopupMenus_RemoveMenuFromMenuBar(This,Index)	\
    ( (This)->lpVtbl -> RemoveMenuFromMenuBar(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPopupMenus_INTERFACE_DEFINED__ */


#ifndef __IIcadPopupMenu_INTERFACE_DEFINED__
#define __IIcadPopupMenu_INTERFACE_DEFINED__

/* interface IIcadPopupMenu */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadPopupMenu;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2C7CDB15-A89D-476a-B88B-AF085DDFE795")
    IIcadPopupMenu : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OnMenuBar( 
            /* [retval][out] */ VARIANT_BOOL *bFlag) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddMenuItem( 
            /* [in] */ VARIANT Index,
            /* [in] */ BSTR Label,
            /* [in] */ BSTR macro,
            /* [retval][out] */ IIcadPopupMenuItem **pItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSeparator( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPopupMenuItem **pItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSubMenu( 
            /* [in] */ VARIANT Index,
            /* [in] */ BSTR Label,
            /* [retval][out] */ IIcadPopupMenu **pItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InsertInMenuBar( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPopupMenuItem **pItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveFromMenuBar( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPopupMenuVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPopupMenu * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPopupMenu * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPopupMenu * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPopupMenu * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPopupMenu * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPopupMenu * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPopupMenu * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPopupMenu * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadPopupMenu * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadPopupMenu * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadPopupMenu * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OnMenuBar )( 
            IIcadPopupMenu * This,
            /* [retval][out] */ VARIANT_BOOL *bFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddMenuItem )( 
            IIcadPopupMenu * This,
            /* [in] */ VARIANT Index,
            /* [in] */ BSTR Label,
            /* [in] */ BSTR macro,
            /* [retval][out] */ IIcadPopupMenuItem **pItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSeparator )( 
            IIcadPopupMenu * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPopupMenuItem **pItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSubMenu )( 
            IIcadPopupMenu * This,
            /* [in] */ VARIANT Index,
            /* [in] */ BSTR Label,
            /* [retval][out] */ IIcadPopupMenu **pItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertInMenuBar )( 
            IIcadPopupMenu * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadPopupMenu * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPopupMenuItem **pItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveFromMenuBar )( 
            IIcadPopupMenu * This);
        
        END_INTERFACE
    } IIcadPopupMenuVtbl;

    interface IIcadPopupMenu
    {
        CONST_VTBL struct IIcadPopupMenuVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPopupMenu_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPopupMenu_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPopupMenu_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPopupMenu_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPopupMenu_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPopupMenu_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPopupMenu_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPopupMenu_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadPopupMenu_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define IIcadPopupMenu_get_Name(This,bstrName)	\
    ( (This)->lpVtbl -> get_Name(This,bstrName) ) 

#define IIcadPopupMenu_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IIcadPopupMenu_get_OnMenuBar(This,bFlag)	\
    ( (This)->lpVtbl -> get_OnMenuBar(This,bFlag) ) 

#define IIcadPopupMenu_AddMenuItem(This,Index,Label,macro,pItem)	\
    ( (This)->lpVtbl -> AddMenuItem(This,Index,Label,macro,pItem) ) 

#define IIcadPopupMenu_AddSeparator(This,Index,pItem)	\
    ( (This)->lpVtbl -> AddSeparator(This,Index,pItem) ) 

#define IIcadPopupMenu_AddSubMenu(This,Index,Label,pItem)	\
    ( (This)->lpVtbl -> AddSubMenu(This,Index,Label,pItem) ) 

#define IIcadPopupMenu_InsertInMenuBar(This,Index)	\
    ( (This)->lpVtbl -> InsertInMenuBar(This,Index) ) 

#define IIcadPopupMenu_Item(This,Index,pItem)	\
    ( (This)->lpVtbl -> Item(This,Index,pItem) ) 

#define IIcadPopupMenu_RemoveFromMenuBar(This)	\
    ( (This)->lpVtbl -> RemoveFromMenuBar(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPopupMenu_INTERFACE_DEFINED__ */


#ifndef __IIcadPopupMenuItem_INTERFACE_DEFINED__
#define __IIcadPopupMenuItem_INTERFACE_DEFINED__

/* interface IIcadPopupMenuItem */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadPopupMenuItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("135410F8-D0A1-4a7c-BAE9-3B009318CAF6")
    IIcadPopupMenuItem : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *bstrCaption) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EndSubMenuLevel( 
            /* [retval][out] */ int *Level) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EndSubMenuLevel( 
            /* [in] */ int Level) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpString( 
            /* [retval][out] */ BSTR *bstrHelp) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HelpString( 
            /* [in] */ BSTR bstrHelp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ int *nIndex) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Label( 
            /* [retval][out] */ BSTR *bstrLabel) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Label( 
            /* [in] */ BSTR bstrLabel) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Macro( 
            /* [retval][out] */ BSTR *bstrMacro) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Macro( 
            /* [in] */ BSTR bstrMacro) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadPopupMenu **pParent) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubMenu( 
            /* [retval][out] */ IIcadPopupMenu **pMenu) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ enum ZcMenuItemType *itemType) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPopupMenuItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPopupMenuItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPopupMenuItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPopupMenuItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPopupMenuItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPopupMenuItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPopupMenuItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPopupMenuItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ BSTR *bstrCaption);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndSubMenuLevel )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ int *Level);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndSubMenuLevel )( 
            IIcadPopupMenuItem * This,
            /* [in] */ int Level);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpString )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ BSTR *bstrHelp);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HelpString )( 
            IIcadPopupMenuItem * This,
            /* [in] */ BSTR bstrHelp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ int *nIndex);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Label )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ BSTR *bstrLabel);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Label )( 
            IIcadPopupMenuItem * This,
            /* [in] */ BSTR bstrLabel);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Macro )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ BSTR *bstrMacro);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Macro )( 
            IIcadPopupMenuItem * This,
            /* [in] */ BSTR bstrMacro);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ IIcadPopupMenu **pParent);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubMenu )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ IIcadPopupMenu **pMenu);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IIcadPopupMenuItem * This,
            /* [retval][out] */ enum ZcMenuItemType *itemType);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadPopupMenuItem * This);
        
        END_INTERFACE
    } IIcadPopupMenuItemVtbl;

    interface IIcadPopupMenuItem
    {
        CONST_VTBL struct IIcadPopupMenuItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPopupMenuItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPopupMenuItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPopupMenuItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPopupMenuItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPopupMenuItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPopupMenuItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPopupMenuItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPopupMenuItem_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadPopupMenuItem_get_Caption(This,bstrCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,bstrCaption) ) 

#define IIcadPopupMenuItem_get_EndSubMenuLevel(This,Level)	\
    ( (This)->lpVtbl -> get_EndSubMenuLevel(This,Level) ) 

#define IIcadPopupMenuItem_put_EndSubMenuLevel(This,Level)	\
    ( (This)->lpVtbl -> put_EndSubMenuLevel(This,Level) ) 

#define IIcadPopupMenuItem_get_HelpString(This,bstrHelp)	\
    ( (This)->lpVtbl -> get_HelpString(This,bstrHelp) ) 

#define IIcadPopupMenuItem_put_HelpString(This,bstrHelp)	\
    ( (This)->lpVtbl -> put_HelpString(This,bstrHelp) ) 

#define IIcadPopupMenuItem_get_Index(This,nIndex)	\
    ( (This)->lpVtbl -> get_Index(This,nIndex) ) 

#define IIcadPopupMenuItem_get_Label(This,bstrLabel)	\
    ( (This)->lpVtbl -> get_Label(This,bstrLabel) ) 

#define IIcadPopupMenuItem_put_Label(This,bstrLabel)	\
    ( (This)->lpVtbl -> put_Label(This,bstrLabel) ) 

#define IIcadPopupMenuItem_get_Macro(This,bstrMacro)	\
    ( (This)->lpVtbl -> get_Macro(This,bstrMacro) ) 

#define IIcadPopupMenuItem_put_Macro(This,bstrMacro)	\
    ( (This)->lpVtbl -> put_Macro(This,bstrMacro) ) 

#define IIcadPopupMenuItem_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define IIcadPopupMenuItem_get_SubMenu(This,pMenu)	\
    ( (This)->lpVtbl -> get_SubMenu(This,pMenu) ) 

#define IIcadPopupMenuItem_get_Type(This,itemType)	\
    ( (This)->lpVtbl -> get_Type(This,itemType) ) 

#define IIcadPopupMenuItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPopupMenuItem_INTERFACE_DEFINED__ */


#ifndef __IIcadToolbars_INTERFACE_DEFINED__
#define __IIcadToolbars_INTERFACE_DEFINED__

/* interface IIcadToolbars */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadToolbars;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63C51BBE-1587-48fb-8035-7716F81FC700")
    IIcadToolbars : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LargeButtons( 
            /* [retval][out] */ VARIANT_BOOL *bFlag) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LargeButtons( 
            /* [in] */ VARIANT_BOOL bFlag) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadMenuGroup **pParent) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR ToolbarName,
            /* [retval][out] */ IIcadToolbar **pTlbar) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadToolbar **pTlbar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadToolbarsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadToolbars * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadToolbars * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadToolbars * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadToolbars * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadToolbars * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadToolbars * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadToolbars * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadToolbars * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadToolbars * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LargeButtons )( 
            IIcadToolbars * This,
            /* [retval][out] */ VARIANT_BOOL *bFlag);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LargeButtons )( 
            IIcadToolbars * This,
            /* [in] */ VARIANT_BOOL bFlag);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadToolbars * This,
            /* [retval][out] */ IIcadMenuGroup **pParent);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadToolbars * This,
            /* [in] */ BSTR ToolbarName,
            /* [retval][out] */ IIcadToolbar **pTlbar);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadToolbars * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadToolbar **pTlbar);
        
        END_INTERFACE
    } IIcadToolbarsVtbl;

    interface IIcadToolbars
    {
        CONST_VTBL struct IIcadToolbarsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadToolbars_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadToolbars_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadToolbars_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadToolbars_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadToolbars_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadToolbars_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadToolbars_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadToolbars_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadToolbars_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define IIcadToolbars_get_LargeButtons(This,bFlag)	\
    ( (This)->lpVtbl -> get_LargeButtons(This,bFlag) ) 

#define IIcadToolbars_put_LargeButtons(This,bFlag)	\
    ( (This)->lpVtbl -> put_LargeButtons(This,bFlag) ) 

#define IIcadToolbars_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define IIcadToolbars_Add(This,ToolbarName,pTlbar)	\
    ( (This)->lpVtbl -> Add(This,ToolbarName,pTlbar) ) 

#define IIcadToolbars_Item(This,Index,pTlbar)	\
    ( (This)->lpVtbl -> Item(This,Index,pTlbar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadToolbars_INTERFACE_DEFINED__ */


#ifndef __IIcadToolbar_INTERFACE_DEFINED__
#define __IIcadToolbar_INTERFACE_DEFINED__

/* interface IIcadToolbar */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadToolbar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D0DC4164-1C1F-48d6-928D-E85FB8564F8B")
    IIcadToolbar : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DockStatus( 
            /* [retval][out] */ enum ZcToolbarDockStatus *nStatus) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *bFlag) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL bFlag) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSeparator( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadToolbarItem **pItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddToolbarButton( 
            /* [in] */ VARIANT Index,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR HelpString,
            /* [in] */ BSTR Macro,
            /* [in] */ VARIANT FlyoutButton,
            /* [retval][out] */ IIcadToolbarItem **pItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadToolbarItem **pItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadToolbarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadToolbar * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadToolbar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadToolbar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadToolbar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadToolbar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadToolbar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadToolbar * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadToolbar * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadToolbar * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DockStatus )( 
            IIcadToolbar * This,
            /* [retval][out] */ enum ZcToolbarDockStatus *nStatus);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadToolbar * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadToolbar * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadToolbar * This,
            /* [retval][out] */ VARIANT_BOOL *bFlag);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadToolbar * This,
            /* [in] */ VARIANT_BOOL bFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddSeparator )( 
            IIcadToolbar * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadToolbarItem **pItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddToolbarButton )( 
            IIcadToolbar * This,
            /* [in] */ VARIANT Index,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR HelpString,
            /* [in] */ BSTR Macro,
            /* [in] */ VARIANT FlyoutButton,
            /* [retval][out] */ IIcadToolbarItem **pItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadToolbar * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadToolbarItem **pItem);
        
        END_INTERFACE
    } IIcadToolbarVtbl;

    interface IIcadToolbar
    {
        CONST_VTBL struct IIcadToolbarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadToolbar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadToolbar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadToolbar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadToolbar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadToolbar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadToolbar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadToolbar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadToolbar_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadToolbar_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define IIcadToolbar_get_DockStatus(This,nStatus)	\
    ( (This)->lpVtbl -> get_DockStatus(This,nStatus) ) 

#define IIcadToolbar_get_Name(This,bstrName)	\
    ( (This)->lpVtbl -> get_Name(This,bstrName) ) 

#define IIcadToolbar_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IIcadToolbar_get_Visible(This,bFlag)	\
    ( (This)->lpVtbl -> get_Visible(This,bFlag) ) 

#define IIcadToolbar_put_Visible(This,bFlag)	\
    ( (This)->lpVtbl -> put_Visible(This,bFlag) ) 

#define IIcadToolbar_AddSeparator(This,Index,pItem)	\
    ( (This)->lpVtbl -> AddSeparator(This,Index,pItem) ) 

#define IIcadToolbar_AddToolbarButton(This,Index,Name,HelpString,Macro,FlyoutButton,pItem)	\
    ( (This)->lpVtbl -> AddToolbarButton(This,Index,Name,HelpString,Macro,FlyoutButton,pItem) ) 

#define IIcadToolbar_Item(This,Index,pItem)	\
    ( (This)->lpVtbl -> Item(This,Index,pItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadToolbar_INTERFACE_DEFINED__ */


#ifndef __IIcadToolbarItem_INTERFACE_DEFINED__
#define __IIcadToolbarItem_INTERFACE_DEFINED__

/* interface IIcadToolbarItem */
/* [unique][helpstring][hidden][dual][uuid][object] */ 


EXTERN_C const IID IID_IIcadToolbarItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("633BDC6E-721D-4a05-A63C-074B888F4675")
    IIcadToolbarItem : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **pAppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Flyout( 
            /* [retval][out] */ IIcadToolbar **pTlbar) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpString( 
            /* [retval][out] */ BSTR *bstrHelp) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HelpString( 
            /* [in] */ BSTR bstrHelp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ int *nIndex) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Macro( 
            /* [retval][out] */ BSTR *bstrMacro) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Macro( 
            /* [in] */ BSTR bstrMacro) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadToolbar **pParent) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ enum ZcToolbarItemType *itemType) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AttachToolbarToFlyout( 
            /* [in] */ BSTR MenuGroupName,
            /* [in] */ BSTR ToolbarName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBitmaps( 
            /* [out] */ BSTR *SmallIconName,
            /* [out] */ BSTR *LargeIconName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBitmaps( 
            /* [in] */ BSTR SmallIconName,
            /* [in] */ BSTR LargeIconName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadToolbarItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadToolbarItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadToolbarItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadToolbarItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadToolbarItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadToolbarItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadToolbarItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadToolbarItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ IIcadApplication **pAppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Flyout )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ IIcadToolbar **pTlbar);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpString )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ BSTR *bstrHelp);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HelpString )( 
            IIcadToolbarItem * This,
            /* [in] */ BSTR bstrHelp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ int *nIndex);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Macro )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ BSTR *bstrMacro);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Macro )( 
            IIcadToolbarItem * This,
            /* [in] */ BSTR bstrMacro);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadToolbarItem * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ IIcadToolbar **pParent);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IIcadToolbarItem * This,
            /* [retval][out] */ enum ZcToolbarItemType *itemType);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AttachToolbarToFlyout )( 
            IIcadToolbarItem * This,
            /* [in] */ BSTR MenuGroupName,
            /* [in] */ BSTR ToolbarName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadToolbarItem * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBitmaps )( 
            IIcadToolbarItem * This,
            /* [out] */ BSTR *SmallIconName,
            /* [out] */ BSTR *LargeIconName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBitmaps )( 
            IIcadToolbarItem * This,
            /* [in] */ BSTR SmallIconName,
            /* [in] */ BSTR LargeIconName);
        
        END_INTERFACE
    } IIcadToolbarItemVtbl;

    interface IIcadToolbarItem
    {
        CONST_VTBL struct IIcadToolbarItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadToolbarItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadToolbarItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadToolbarItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadToolbarItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadToolbarItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadToolbarItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadToolbarItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadToolbarItem_get_Application(This,pAppObj)	\
    ( (This)->lpVtbl -> get_Application(This,pAppObj) ) 

#define IIcadToolbarItem_get_Flyout(This,pTlbar)	\
    ( (This)->lpVtbl -> get_Flyout(This,pTlbar) ) 

#define IIcadToolbarItem_get_HelpString(This,bstrHelp)	\
    ( (This)->lpVtbl -> get_HelpString(This,bstrHelp) ) 

#define IIcadToolbarItem_put_HelpString(This,bstrHelp)	\
    ( (This)->lpVtbl -> put_HelpString(This,bstrHelp) ) 

#define IIcadToolbarItem_get_Index(This,nIndex)	\
    ( (This)->lpVtbl -> get_Index(This,nIndex) ) 

#define IIcadToolbarItem_get_Macro(This,bstrMacro)	\
    ( (This)->lpVtbl -> get_Macro(This,bstrMacro) ) 

#define IIcadToolbarItem_put_Macro(This,bstrMacro)	\
    ( (This)->lpVtbl -> put_Macro(This,bstrMacro) ) 

#define IIcadToolbarItem_get_Name(This,bstrName)	\
    ( (This)->lpVtbl -> get_Name(This,bstrName) ) 

#define IIcadToolbarItem_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IIcadToolbarItem_get_Parent(This,pParent)	\
    ( (This)->lpVtbl -> get_Parent(This,pParent) ) 

#define IIcadToolbarItem_get_Type(This,itemType)	\
    ( (This)->lpVtbl -> get_Type(This,itemType) ) 

#define IIcadToolbarItem_AttachToolbarToFlyout(This,MenuGroupName,ToolbarName)	\
    ( (This)->lpVtbl -> AttachToolbarToFlyout(This,MenuGroupName,ToolbarName) ) 

#define IIcadToolbarItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadToolbarItem_GetBitmaps(This,SmallIconName,LargeIconName)	\
    ( (This)->lpVtbl -> GetBitmaps(This,SmallIconName,LargeIconName) ) 

#define IIcadToolbarItem_SetBitmaps(This,SmallIconName,LargeIconName)	\
    ( (This)->lpVtbl -> SetBitmaps(This,SmallIconName,LargeIconName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadToolbarItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_Icad_0000_0023 */
/* [local] */ 








extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0023_v0_0_s_ifspec;

#ifndef __IIcadDocuments_INTERFACE_DEFINED__
#define __IIcadDocuments_INTERFACE_DEFINED__

/* interface IIcadDocuments */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDocuments;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2d086cb1-d839-4ee0-91ea-038296d78e85")
    IIcadDocuments : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadApplication **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ BSTR TemplateName,
            /* [retval][out] */ IIcadDocument **ppDocument) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [defaultvalue][optional][in] */ VARIANT_BOOL AskSave = TRUE) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadDocument **ppItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ BSTR File,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL ReadOnly,
            /* [retval][out] */ IIcadDocument **ppDocument) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SaveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDocumentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDocuments * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDocuments * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDocuments * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDocuments * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDocuments * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDocuments * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDocuments * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDocuments * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadDocuments * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDocuments * This,
            /* [retval][out] */ IIcadApplication **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadDocuments * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadDocuments * This,
            /* [optional][in] */ BSTR TemplateName,
            /* [retval][out] */ IIcadDocument **ppDocument);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IIcadDocuments * This,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL AskSave);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadDocuments * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadDocument **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IIcadDocuments * This,
            /* [in] */ BSTR File,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL ReadOnly,
            /* [retval][out] */ IIcadDocument **ppDocument);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SaveAll )( 
            IIcadDocuments * This);
        
        END_INTERFACE
    } IIcadDocumentsVtbl;

    interface IIcadDocuments
    {
        CONST_VTBL struct IIcadDocumentsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDocuments_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDocuments_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDocuments_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDocuments_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDocuments_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDocuments_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDocuments_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDocuments_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDocuments_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadDocuments_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDocuments_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadDocuments_Add(This,TemplateName,ppDocument)	\
    ( (This)->lpVtbl -> Add(This,TemplateName,ppDocument) ) 

#define IIcadDocuments_Close(This,AskSave)	\
    ( (This)->lpVtbl -> Close(This,AskSave) ) 

#define IIcadDocuments_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadDocuments_Open(This,File,ReadOnly,ppDocument)	\
    ( (This)->lpVtbl -> Open(This,File,ReadOnly,ppDocument) ) 

#define IIcadDocuments_SaveAll(This)	\
    ( (This)->lpVtbl -> SaveAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDocuments_INTERFACE_DEFINED__ */


#ifndef __IIcadWindows_INTERFACE_DEFINED__
#define __IIcadWindows_INTERFACE_DEFINED__

/* interface IIcadWindows */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadWindows;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3ede554d-69e8-4f3b-bd61-71fc1ef101e8")
    IIcadWindows : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadApplication **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ IIcadWindow **ppWindow) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Arrange( 
            /* [in] */ ZcArrangeStyle Style) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CloseAll( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadWindow **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadWindowsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadWindows * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadWindows * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadWindows * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadWindows * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadWindows * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadWindows * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadWindows * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadWindows * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadWindows * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadWindows * This,
            /* [retval][out] */ IIcadApplication **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadWindows * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadWindows * This,
            /* [retval][out] */ IIcadWindow **ppWindow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Arrange )( 
            IIcadWindows * This,
            /* [in] */ ZcArrangeStyle Style);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CloseAll )( 
            IIcadWindows * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadWindows * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadWindow **ppItem);
        
        END_INTERFACE
    } IIcadWindowsVtbl;

    interface IIcadWindows
    {
        CONST_VTBL struct IIcadWindowsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadWindows_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadWindows_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadWindows_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadWindows_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadWindows_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadWindows_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadWindows_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadWindows_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadWindows_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadWindows_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadWindows_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadWindows_Add(This,ppWindow)	\
    ( (This)->lpVtbl -> Add(This,ppWindow) ) 

#define IIcadWindows_Arrange(This,Style)	\
    ( (This)->lpVtbl -> Arrange(This,Style) ) 

#define IIcadWindows_CloseAll(This)	\
    ( (This)->lpVtbl -> CloseAll(This) ) 

#define IIcadWindows_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadWindows_INTERFACE_DEFINED__ */


#ifndef __IIcadWindow_INTERFACE_DEFINED__
#define __IIcadWindow_INTERFACE_DEFINED__

/* interface IIcadWindow */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("47f897e5-fa58-4a39-944e-b27631e886bb")
    IIcadWindow : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadWindows **ppParent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *pCaption) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *pVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WindowHandle32( 
            /* [retval][out] */ long *pHandle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WindowState( 
            /* [retval][out] */ ZcWindowState *pState) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_WindowState( 
            /* [in] */ ZcWindowState State) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetWindowRect( 
            /* [out][in] */ long *Left,
            /* [out][in] */ long *Top,
            /* [out][in] */ long *Width,
            /* [out][in] */ long *Height) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetWindowRect( 
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Scroll( 
            /* [in] */ ZcScrollFlagsX FlagsX,
            /* [in] */ ZcScrollFlagsY FlagsY) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadWindow * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadWindow * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadWindow * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadWindow * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadWindow * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadWindow * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadWindow * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadWindow * This,
            /* [retval][out] */ IIcadWindows **ppParent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            IIcadWindow * This,
            /* [retval][out] */ BSTR *pCaption);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadWindow * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadWindow * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowHandle32 )( 
            IIcadWindow * This,
            /* [retval][out] */ long *pHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            IIcadWindow * This,
            /* [retval][out] */ ZcWindowState *pState);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            IIcadWindow * This,
            /* [in] */ ZcWindowState State);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            IIcadWindow * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IIcadWindow * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWindowRect )( 
            IIcadWindow * This,
            /* [out][in] */ long *Left,
            /* [out][in] */ long *Top,
            /* [out][in] */ long *Width,
            /* [out][in] */ long *Height);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetWindowRect )( 
            IIcadWindow * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Scroll )( 
            IIcadWindow * This,
            /* [in] */ ZcScrollFlagsX FlagsX,
            /* [in] */ ZcScrollFlagsY FlagsY);
        
        END_INTERFACE
    } IIcadWindowVtbl;

    interface IIcadWindow
    {
        CONST_VTBL struct IIcadWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadWindow_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadWindow_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadWindow_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadWindow_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadWindow_get_Caption(This,pCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,pCaption) ) 

#define IIcadWindow_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadWindow_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadWindow_get_WindowHandle32(This,pHandle)	\
    ( (This)->lpVtbl -> get_WindowHandle32(This,pHandle) ) 

#define IIcadWindow_get_WindowState(This,pState)	\
    ( (This)->lpVtbl -> get_WindowState(This,pState) ) 

#define IIcadWindow_put_WindowState(This,State)	\
    ( (This)->lpVtbl -> put_WindowState(This,State) ) 

#define IIcadWindow_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define IIcadWindow_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define IIcadWindow_GetWindowRect(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> GetWindowRect(This,Left,Top,Width,Height) ) 

#define IIcadWindow_SetWindowRect(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetWindowRect(This,Left,Top,Width,Height) ) 

#define IIcadWindow_Scroll(This,FlagsX,FlagsY)	\
    ( (This)->lpVtbl -> Scroll(This,FlagsX,FlagsY) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadWindow_INTERFACE_DEFINED__ */


#ifndef __IIcadApplication_INTERFACE_DEFINED__
#define __IIcadApplication_INTERFACE_DEFINED__

/* interface IIcadApplication */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadApplication;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7d36bae4-d595-4dfe-95a8-0917fa8c407b")
    IIcadApplication : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveDocument( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *pCaption) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultFilePath( 
            /* [retval][out] */ BSTR *pDefFilePath) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DefaultFilePath( 
            /* [in] */ BSTR DefFilePath) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Documents( 
            /* [retval][out] */ IIcadDocuments **ppDocs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Eval( 
            /* [in] */ BSTR Expression) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ BSTR *pFullAppName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LocaleID( 
            /* [retval][out] */ long *pLocaleId) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WindowLeft( 
            /* [retval][out] */ long *pLeft) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_WindowLeft( 
            /* [in] */ long Left) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Library( 
            /* [retval][out] */ IIcadLibrary **ppLibrary) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pstrAppName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *pstrPath) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotManager( 
            /* [retval][out] */ IIcadPlotManager **ppPlotManager) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Preferences( 
            /* [retval][out] */ IIcadApplicationPreferences **ppPreferences) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StatusBar( 
            /* [retval][out] */ BSTR *pstrStatusText) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StatusBar( 
            /* [in] */ BSTR StatusText) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WindowTop( 
            /* [retval][out] */ long *pTop) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_WindowTop( 
            /* [in] */ long Top) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VBE( 
            /* [retval][out] */ IDispatch **ppVBE) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR *pstrVersion) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *pVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long Width) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HWND( 
            /* [retval][out] */ long *pHWND) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WindowState( 
            /* [retval][out] */ ZcWindowState *pState) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_WindowState( 
            /* [in] */ ZcWindowState State) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LockHardID( 
            /* [retval][out] */ long *plngHardID) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StatusID( 
            /* [in] */ IIcadViewport *ppViewport,
            /* [retval][out] */ VARIANT_BOOL *bStatus) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAcadState( 
            /* [retval][out] */ IIcadState **ppState) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LoadZVB( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnloadZVB( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RunMacro( 
            /* [in] */ BSTR MacroPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomAll( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomCenter( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double ZoomFactor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomExtents( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomPrevious( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomPickWindow( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomScaled( 
            /* [in] */ double Scale,
            /* [in] */ ZcZoomScale ScaleType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomWindow( 
            /* [in] */ VARIANT varLowerleft,
            /* [in] */ VARIANT varUpperRight) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MenuBar( 
            /* [retval][out] */ IIcadMenuBar **ppMenuBar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MenuGroups( 
            /* [retval][out] */ IIcadMenuGroups **ppMenuGroups) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineFunction( 
            /* [in] */ BSTR FunctionName,
            /* [in] */ VARIANT FunctionPointer) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UndefineFunction( 
            /* [in] */ BSTR FunctionName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Help( 
            /* [in] */ BSTR HelpFile,
            /* [optional][in] */ BSTR HelpTopic,
            /* [optional][in] */ long HelpCommand) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Quit( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ListSDS( 
            /* [retval][out] */ VARIANT *ListOfSDSApps) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LoadSDS( 
            /* [in] */ BSTR ApplicationName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnloadSDS( 
            /* [in] */ BSTR ApplicationName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LoadLISP( 
            /* [in] */ BSTR ApplicationName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RunCommand( 
            /* [in] */ BSTR Command) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RunScript( 
            /* [in] */ BSTR ScriptName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetInterfaceObject( 
            /* [in] */ BSTR ProgID,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsFunctionLoaded( 
            /* [in] */ BSTR FunctionName,
            /* [retval][out] */ VARIANT_BOOL *Loaded) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetAppForMPrint( 
            /* [in] */ VARIANT_BOOL bForMPrint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MPrint( 
            /* [in] */ BSTR sFilePath,
            /* [retval][out] */ VARIANT_BOOL *Success) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadApplication * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadApplication * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadApplication * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadApplication * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadApplication * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadApplication * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadApplication * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveDocument )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            IIcadApplication * This,
            /* [retval][out] */ BSTR *pCaption);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultFilePath )( 
            IIcadApplication * This,
            /* [retval][out] */ BSTR *pDefFilePath);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultFilePath )( 
            IIcadApplication * This,
            /* [in] */ BSTR DefFilePath);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Documents )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadDocuments **ppDocs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Eval )( 
            IIcadApplication * This,
            /* [in] */ BSTR Expression);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            IIcadApplication * This,
            /* [retval][out] */ BSTR *pFullAppName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadApplication * This,
            /* [retval][out] */ long *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadApplication * This,
            /* [in] */ long Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocaleID )( 
            IIcadApplication * This,
            /* [retval][out] */ long *pLocaleId);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowLeft )( 
            IIcadApplication * This,
            /* [retval][out] */ long *pLeft);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_WindowLeft )( 
            IIcadApplication * This,
            /* [in] */ long Left);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Library )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadLibrary **ppLibrary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadApplication * This,
            /* [retval][out] */ BSTR *pstrAppName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IIcadApplication * This,
            /* [retval][out] */ BSTR *pstrPath);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotManager )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadPlotManager **ppPlotManager);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preferences )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadApplicationPreferences **ppPreferences);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StatusBar )( 
            IIcadApplication * This,
            /* [retval][out] */ BSTR *pstrStatusText);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StatusBar )( 
            IIcadApplication * This,
            /* [in] */ BSTR StatusText);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowTop )( 
            IIcadApplication * This,
            /* [retval][out] */ long *pTop);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_WindowTop )( 
            IIcadApplication * This,
            /* [in] */ long Top);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VBE )( 
            IIcadApplication * This,
            /* [retval][out] */ IDispatch **ppVBE);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            IIcadApplication * This,
            /* [retval][out] */ BSTR *pstrVersion);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadApplication * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadApplication * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadApplication * This,
            /* [retval][out] */ long *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IIcadApplication * This,
            /* [in] */ long Width);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HWND )( 
            IIcadApplication * This,
            /* [retval][out] */ long *pHWND);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            IIcadApplication * This,
            /* [retval][out] */ ZcWindowState *pState);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            IIcadApplication * This,
            /* [in] */ ZcWindowState State);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LockHardID )( 
            IIcadApplication * This,
            /* [retval][out] */ long *plngHardID);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StatusID )( 
            IIcadApplication * This,
            /* [in] */ IIcadViewport *ppViewport,
            /* [retval][out] */ VARIANT_BOOL *bStatus);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAcadState )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadState **ppState);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LoadZVB )( 
            IIcadApplication * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnloadZVB )( 
            IIcadApplication * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RunMacro )( 
            IIcadApplication * This,
            /* [in] */ BSTR MacroPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomAll )( 
            IIcadApplication * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomCenter )( 
            IIcadApplication * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double ZoomFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomExtents )( 
            IIcadApplication * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomPrevious )( 
            IIcadApplication * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomPickWindow )( 
            IIcadApplication * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomScaled )( 
            IIcadApplication * This,
            /* [in] */ double Scale,
            /* [in] */ ZcZoomScale ScaleType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomWindow )( 
            IIcadApplication * This,
            /* [in] */ VARIANT varLowerleft,
            /* [in] */ VARIANT varUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadApplication * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MenuBar )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadMenuBar **ppMenuBar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MenuGroups )( 
            IIcadApplication * This,
            /* [retval][out] */ IIcadMenuGroups **ppMenuGroups);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineFunction )( 
            IIcadApplication * This,
            /* [in] */ BSTR FunctionName,
            /* [in] */ VARIANT FunctionPointer);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UndefineFunction )( 
            IIcadApplication * This,
            /* [in] */ BSTR FunctionName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Help )( 
            IIcadApplication * This,
            /* [in] */ BSTR HelpFile,
            /* [optional][in] */ BSTR HelpTopic,
            /* [optional][in] */ long HelpCommand);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Quit )( 
            IIcadApplication * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ListSDS )( 
            IIcadApplication * This,
            /* [retval][out] */ VARIANT *ListOfSDSApps);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LoadSDS )( 
            IIcadApplication * This,
            /* [in] */ BSTR ApplicationName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnloadSDS )( 
            IIcadApplication * This,
            /* [in] */ BSTR ApplicationName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LoadLISP )( 
            IIcadApplication * This,
            /* [in] */ BSTR ApplicationName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RunCommand )( 
            IIcadApplication * This,
            /* [in] */ BSTR Command);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RunScript )( 
            IIcadApplication * This,
            /* [in] */ BSTR ScriptName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetInterfaceObject )( 
            IIcadApplication * This,
            /* [in] */ BSTR ProgID,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsFunctionLoaded )( 
            IIcadApplication * This,
            /* [in] */ BSTR FunctionName,
            /* [retval][out] */ VARIANT_BOOL *Loaded);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetAppForMPrint )( 
            IIcadApplication * This,
            /* [in] */ VARIANT_BOOL bForMPrint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MPrint )( 
            IIcadApplication * This,
            /* [in] */ BSTR sFilePath,
            /* [retval][out] */ VARIANT_BOOL *Success);
        
        END_INTERFACE
    } IIcadApplicationVtbl;

    interface IIcadApplication
    {
        CONST_VTBL struct IIcadApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadApplication_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadApplication_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadApplication_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadApplication_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadApplication_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadApplication_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadApplication_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadApplication_get_ActiveDocument(This,ppDoc)	\
    ( (This)->lpVtbl -> get_ActiveDocument(This,ppDoc) ) 

#define IIcadApplication_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadApplication_get_Caption(This,pCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,pCaption) ) 

#define IIcadApplication_get_DefaultFilePath(This,pDefFilePath)	\
    ( (This)->lpVtbl -> get_DefaultFilePath(This,pDefFilePath) ) 

#define IIcadApplication_put_DefaultFilePath(This,DefFilePath)	\
    ( (This)->lpVtbl -> put_DefaultFilePath(This,DefFilePath) ) 

#define IIcadApplication_get_Documents(This,ppDocs)	\
    ( (This)->lpVtbl -> get_Documents(This,ppDocs) ) 

#define IIcadApplication_Eval(This,Expression)	\
    ( (This)->lpVtbl -> Eval(This,Expression) ) 

#define IIcadApplication_get_FullName(This,pFullAppName)	\
    ( (This)->lpVtbl -> get_FullName(This,pFullAppName) ) 

#define IIcadApplication_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadApplication_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadApplication_get_LocaleID(This,pLocaleId)	\
    ( (This)->lpVtbl -> get_LocaleID(This,pLocaleId) ) 

#define IIcadApplication_get_WindowLeft(This,pLeft)	\
    ( (This)->lpVtbl -> get_WindowLeft(This,pLeft) ) 

#define IIcadApplication_put_WindowLeft(This,Left)	\
    ( (This)->lpVtbl -> put_WindowLeft(This,Left) ) 

#define IIcadApplication_get_Library(This,ppLibrary)	\
    ( (This)->lpVtbl -> get_Library(This,ppLibrary) ) 

#define IIcadApplication_get_Name(This,pstrAppName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrAppName) ) 

#define IIcadApplication_get_Path(This,pstrPath)	\
    ( (This)->lpVtbl -> get_Path(This,pstrPath) ) 

#define IIcadApplication_get_PlotManager(This,ppPlotManager)	\
    ( (This)->lpVtbl -> get_PlotManager(This,ppPlotManager) ) 

#define IIcadApplication_get_Preferences(This,ppPreferences)	\
    ( (This)->lpVtbl -> get_Preferences(This,ppPreferences) ) 

#define IIcadApplication_get_StatusBar(This,pstrStatusText)	\
    ( (This)->lpVtbl -> get_StatusBar(This,pstrStatusText) ) 

#define IIcadApplication_put_StatusBar(This,StatusText)	\
    ( (This)->lpVtbl -> put_StatusBar(This,StatusText) ) 

#define IIcadApplication_get_WindowTop(This,pTop)	\
    ( (This)->lpVtbl -> get_WindowTop(This,pTop) ) 

#define IIcadApplication_put_WindowTop(This,Top)	\
    ( (This)->lpVtbl -> put_WindowTop(This,Top) ) 

#define IIcadApplication_get_VBE(This,ppVBE)	\
    ( (This)->lpVtbl -> get_VBE(This,ppVBE) ) 

#define IIcadApplication_get_Version(This,pstrVersion)	\
    ( (This)->lpVtbl -> get_Version(This,pstrVersion) ) 

#define IIcadApplication_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadApplication_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadApplication_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadApplication_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define IIcadApplication_get_HWND(This,pHWND)	\
    ( (This)->lpVtbl -> get_HWND(This,pHWND) ) 

#define IIcadApplication_get_WindowState(This,pState)	\
    ( (This)->lpVtbl -> get_WindowState(This,pState) ) 

#define IIcadApplication_put_WindowState(This,State)	\
    ( (This)->lpVtbl -> put_WindowState(This,State) ) 

#define IIcadApplication_get_LockHardID(This,plngHardID)	\
    ( (This)->lpVtbl -> get_LockHardID(This,plngHardID) ) 

#define IIcadApplication_get_StatusID(This,ppViewport,bStatus)	\
    ( (This)->lpVtbl -> get_StatusID(This,ppViewport,bStatus) ) 

#define IIcadApplication_GetAcadState(This,ppState)	\
    ( (This)->lpVtbl -> GetAcadState(This,ppState) ) 

#define IIcadApplication_LoadZVB(This,Name)	\
    ( (This)->lpVtbl -> LoadZVB(This,Name) ) 

#define IIcadApplication_UnloadZVB(This,Name)	\
    ( (This)->lpVtbl -> UnloadZVB(This,Name) ) 

#define IIcadApplication_RunMacro(This,MacroPath)	\
    ( (This)->lpVtbl -> RunMacro(This,MacroPath) ) 

#define IIcadApplication_ZoomAll(This)	\
    ( (This)->lpVtbl -> ZoomAll(This) ) 

#define IIcadApplication_ZoomCenter(This,varCenter,ZoomFactor)	\
    ( (This)->lpVtbl -> ZoomCenter(This,varCenter,ZoomFactor) ) 

#define IIcadApplication_ZoomExtents(This)	\
    ( (This)->lpVtbl -> ZoomExtents(This) ) 

#define IIcadApplication_ZoomPrevious(This)	\
    ( (This)->lpVtbl -> ZoomPrevious(This) ) 

#define IIcadApplication_ZoomPickWindow(This)	\
    ( (This)->lpVtbl -> ZoomPickWindow(This) ) 

#define IIcadApplication_ZoomScaled(This,Scale,ScaleType)	\
    ( (This)->lpVtbl -> ZoomScaled(This,Scale,ScaleType) ) 

#define IIcadApplication_ZoomWindow(This,varLowerleft,varUpperRight)	\
    ( (This)->lpVtbl -> ZoomWindow(This,varLowerleft,varUpperRight) ) 

#define IIcadApplication_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadApplication_get_MenuBar(This,ppMenuBar)	\
    ( (This)->lpVtbl -> get_MenuBar(This,ppMenuBar) ) 

#define IIcadApplication_get_MenuGroups(This,ppMenuGroups)	\
    ( (This)->lpVtbl -> get_MenuGroups(This,ppMenuGroups) ) 

#define IIcadApplication_DefineFunction(This,FunctionName,FunctionPointer)	\
    ( (This)->lpVtbl -> DefineFunction(This,FunctionName,FunctionPointer) ) 

#define IIcadApplication_UndefineFunction(This,FunctionName)	\
    ( (This)->lpVtbl -> UndefineFunction(This,FunctionName) ) 

#define IIcadApplication_Help(This,HelpFile,HelpTopic,HelpCommand)	\
    ( (This)->lpVtbl -> Help(This,HelpFile,HelpTopic,HelpCommand) ) 

#define IIcadApplication_Quit(This)	\
    ( (This)->lpVtbl -> Quit(This) ) 

#define IIcadApplication_ListSDS(This,ListOfSDSApps)	\
    ( (This)->lpVtbl -> ListSDS(This,ListOfSDSApps) ) 

#define IIcadApplication_LoadSDS(This,ApplicationName)	\
    ( (This)->lpVtbl -> LoadSDS(This,ApplicationName) ) 

#define IIcadApplication_UnloadSDS(This,ApplicationName)	\
    ( (This)->lpVtbl -> UnloadSDS(This,ApplicationName) ) 

#define IIcadApplication_LoadLISP(This,ApplicationName)	\
    ( (This)->lpVtbl -> LoadLISP(This,ApplicationName) ) 

#define IIcadApplication_RunCommand(This,Command)	\
    ( (This)->lpVtbl -> RunCommand(This,Command) ) 

#define IIcadApplication_RunScript(This,ScriptName)	\
    ( (This)->lpVtbl -> RunScript(This,ScriptName) ) 

#define IIcadApplication_GetInterfaceObject(This,ProgID,ppObject)	\
    ( (This)->lpVtbl -> GetInterfaceObject(This,ProgID,ppObject) ) 

#define IIcadApplication_IsFunctionLoaded(This,FunctionName,Loaded)	\
    ( (This)->lpVtbl -> IsFunctionLoaded(This,FunctionName,Loaded) ) 

#define IIcadApplication_SetAppForMPrint(This,bForMPrint)	\
    ( (This)->lpVtbl -> SetAppForMPrint(This,bForMPrint) ) 

#define IIcadApplication_MPrint(This,sFilePath,Success)	\
    ( (This)->lpVtbl -> MPrint(This,sFilePath,Success) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadApplication_INTERFACE_DEFINED__ */


#ifndef __IIcadWorkspace_INTERFACE_DEFINED__
#define __IIcadWorkspace_INTERFACE_DEFINED__

/* interface IIcadWorkspace */
/* [unique][helpstring][dual][nonextensible][uuid][object] */ 


EXTERN_C const IID IID_IIcadWorkspace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1b21c801-7212-45f4-8a14-2b981af8a80c")
    IIcadWorkspace : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadApplication **ppReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveDocument( 
            /* [retval][out] */ IIcadDocument **Document) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pReturn) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadWorkspaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadWorkspace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadWorkspace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadWorkspace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadWorkspace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadWorkspace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadWorkspace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadWorkspace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadWorkspace * This,
            /* [retval][out] */ IIcadApplication **ppReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadWorkspace * This,
            /* [retval][out] */ IIcadApplication **ppReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveDocument )( 
            IIcadWorkspace * This,
            /* [retval][out] */ IIcadDocument **Document);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadWorkspace * This,
            /* [retval][out] */ BSTR *pReturn);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadWorkspace * This,
            /* [in] */ BSTR Value);
        
        END_INTERFACE
    } IIcadWorkspaceVtbl;

    interface IIcadWorkspace
    {
        CONST_VTBL struct IIcadWorkspaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadWorkspace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadWorkspace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadWorkspace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadWorkspace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadWorkspace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadWorkspace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadWorkspace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadWorkspace_get_Application(This,ppReturn)	\
    ( (This)->lpVtbl -> get_Application(This,ppReturn) ) 

#define IIcadWorkspace_get_Parent(This,ppReturn)	\
    ( (This)->lpVtbl -> get_Parent(This,ppReturn) ) 

#define IIcadWorkspace_get_ActiveDocument(This,Document)	\
    ( (This)->lpVtbl -> get_ActiveDocument(This,Document) ) 

#define IIcadWorkspace_get_Name(This,pReturn)	\
    ( (This)->lpVtbl -> get_Name(This,pReturn) ) 

#define IIcadWorkspace_put_Name(This,Value)	\
    ( (This)->lpVtbl -> put_Name(This,Value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadWorkspace_INTERFACE_DEFINED__ */


#ifndef __IIcadApplicationPreferences_INTERFACE_DEFINED__
#define __IIcadApplicationPreferences_INTERFACE_DEFINED__

/* interface IIcadApplicationPreferences */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadApplicationPreferences;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7f09cf81-c33c-4db4-b864-1afa08266087")
    IIcadApplicationPreferences : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CursorSize( 
            /* [retval][out] */ int *Size) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CursorSize( 
            /* [in] */ int Size) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CursorXColor( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CursorXColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CursorYColor( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CursorYColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CursorZColor( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CursorZColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DisplayScrollBars( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DisplayScrollBars( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DockedVisibleLines( 
            /* [retval][out] */ int *NumberOfLines) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DockedVisibleLines( 
            /* [in] */ int NumberOfLines) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GraphicsWinBackgrndColor( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GraphicsWinBackgrndColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HistoryLines( 
            /* [retval][out] */ int *NumberOfLines) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HistoryLines( 
            /* [in] */ int NumberOfLines) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MaxIntelliCADWindow( 
            /* [retval][out] */ VARIANT_BOOL *Maximize) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxIntelliCADWindow( 
            /* [in] */ VARIANT_BOOL Maximize) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AutoSaveInterval( 
            /* [retval][out] */ int *Interval) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AutoSaveInterval( 
            /* [in] */ int Interval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LogFileName( 
            /* [retval][out] */ BSTR *LogFileName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LogFileName( 
            /* [in] */ BSTR LogFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LogFileOn( 
            /* [retval][out] */ VARIANT_BOOL *On) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LogFileOn( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltFontFile( 
            /* [retval][out] */ BSTR *AltFontFileName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltFontFile( 
            /* [in] */ BSTR AltFontFileName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadApplicationPreferencesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadApplicationPreferences * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadApplicationPreferences * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadApplicationPreferences * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadApplicationPreferences * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadApplicationPreferences * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadApplicationPreferences * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadApplicationPreferences * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CursorSize )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ int *Size);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CursorSize )( 
            IIcadApplicationPreferences * This,
            /* [in] */ int Size);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CursorXColor )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CursorXColor )( 
            IIcadApplicationPreferences * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CursorYColor )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CursorYColor )( 
            IIcadApplicationPreferences * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CursorZColor )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CursorZColor )( 
            IIcadApplicationPreferences * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayScrollBars )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayScrollBars )( 
            IIcadApplicationPreferences * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DockedVisibleLines )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ int *NumberOfLines);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DockedVisibleLines )( 
            IIcadApplicationPreferences * This,
            /* [in] */ int NumberOfLines);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GraphicsWinBackgrndColor )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GraphicsWinBackgrndColor )( 
            IIcadApplicationPreferences * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HistoryLines )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ int *NumberOfLines);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HistoryLines )( 
            IIcadApplicationPreferences * This,
            /* [in] */ int NumberOfLines);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxIntelliCADWindow )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Maximize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxIntelliCADWindow )( 
            IIcadApplicationPreferences * This,
            /* [in] */ VARIANT_BOOL Maximize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSaveInterval )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ int *Interval);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSaveInterval )( 
            IIcadApplicationPreferences * This,
            /* [in] */ int Interval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogFileName )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ BSTR *LogFileName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LogFileName )( 
            IIcadApplicationPreferences * This,
            /* [in] */ BSTR LogFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogFileOn )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ VARIANT_BOOL *On);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LogFileOn )( 
            IIcadApplicationPreferences * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltFontFile )( 
            IIcadApplicationPreferences * This,
            /* [retval][out] */ BSTR *AltFontFileName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltFontFile )( 
            IIcadApplicationPreferences * This,
            /* [in] */ BSTR AltFontFileName);
        
        END_INTERFACE
    } IIcadApplicationPreferencesVtbl;

    interface IIcadApplicationPreferences
    {
        CONST_VTBL struct IIcadApplicationPreferencesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadApplicationPreferences_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadApplicationPreferences_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadApplicationPreferences_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadApplicationPreferences_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadApplicationPreferences_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadApplicationPreferences_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadApplicationPreferences_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadApplicationPreferences_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define IIcadApplicationPreferences_get_Parent(This,Application)	\
    ( (This)->lpVtbl -> get_Parent(This,Application) ) 

#define IIcadApplicationPreferences_get_CursorSize(This,Size)	\
    ( (This)->lpVtbl -> get_CursorSize(This,Size) ) 

#define IIcadApplicationPreferences_put_CursorSize(This,Size)	\
    ( (This)->lpVtbl -> put_CursorSize(This,Size) ) 

#define IIcadApplicationPreferences_get_CursorXColor(This,pColor)	\
    ( (This)->lpVtbl -> get_CursorXColor(This,pColor) ) 

#define IIcadApplicationPreferences_put_CursorXColor(This,Color)	\
    ( (This)->lpVtbl -> put_CursorXColor(This,Color) ) 

#define IIcadApplicationPreferences_get_CursorYColor(This,pColor)	\
    ( (This)->lpVtbl -> get_CursorYColor(This,pColor) ) 

#define IIcadApplicationPreferences_put_CursorYColor(This,Color)	\
    ( (This)->lpVtbl -> put_CursorYColor(This,Color) ) 

#define IIcadApplicationPreferences_get_CursorZColor(This,pColor)	\
    ( (This)->lpVtbl -> get_CursorZColor(This,pColor) ) 

#define IIcadApplicationPreferences_put_CursorZColor(This,Color)	\
    ( (This)->lpVtbl -> put_CursorZColor(This,Color) ) 

#define IIcadApplicationPreferences_get_DisplayScrollBars(This,Visible)	\
    ( (This)->lpVtbl -> get_DisplayScrollBars(This,Visible) ) 

#define IIcadApplicationPreferences_put_DisplayScrollBars(This,Visible)	\
    ( (This)->lpVtbl -> put_DisplayScrollBars(This,Visible) ) 

#define IIcadApplicationPreferences_get_DockedVisibleLines(This,NumberOfLines)	\
    ( (This)->lpVtbl -> get_DockedVisibleLines(This,NumberOfLines) ) 

#define IIcadApplicationPreferences_put_DockedVisibleLines(This,NumberOfLines)	\
    ( (This)->lpVtbl -> put_DockedVisibleLines(This,NumberOfLines) ) 

#define IIcadApplicationPreferences_get_GraphicsWinBackgrndColor(This,pColor)	\
    ( (This)->lpVtbl -> get_GraphicsWinBackgrndColor(This,pColor) ) 

#define IIcadApplicationPreferences_put_GraphicsWinBackgrndColor(This,Color)	\
    ( (This)->lpVtbl -> put_GraphicsWinBackgrndColor(This,Color) ) 

#define IIcadApplicationPreferences_get_HistoryLines(This,NumberOfLines)	\
    ( (This)->lpVtbl -> get_HistoryLines(This,NumberOfLines) ) 

#define IIcadApplicationPreferences_put_HistoryLines(This,NumberOfLines)	\
    ( (This)->lpVtbl -> put_HistoryLines(This,NumberOfLines) ) 

#define IIcadApplicationPreferences_get_MaxIntelliCADWindow(This,Maximize)	\
    ( (This)->lpVtbl -> get_MaxIntelliCADWindow(This,Maximize) ) 

#define IIcadApplicationPreferences_put_MaxIntelliCADWindow(This,Maximize)	\
    ( (This)->lpVtbl -> put_MaxIntelliCADWindow(This,Maximize) ) 

#define IIcadApplicationPreferences_get_AutoSaveInterval(This,Interval)	\
    ( (This)->lpVtbl -> get_AutoSaveInterval(This,Interval) ) 

#define IIcadApplicationPreferences_put_AutoSaveInterval(This,Interval)	\
    ( (This)->lpVtbl -> put_AutoSaveInterval(This,Interval) ) 

#define IIcadApplicationPreferences_get_LogFileName(This,LogFileName)	\
    ( (This)->lpVtbl -> get_LogFileName(This,LogFileName) ) 

#define IIcadApplicationPreferences_put_LogFileName(This,LogFileName)	\
    ( (This)->lpVtbl -> put_LogFileName(This,LogFileName) ) 

#define IIcadApplicationPreferences_get_LogFileOn(This,On)	\
    ( (This)->lpVtbl -> get_LogFileOn(This,On) ) 

#define IIcadApplicationPreferences_put_LogFileOn(This,On)	\
    ( (This)->lpVtbl -> put_LogFileOn(This,On) ) 

#define IIcadApplicationPreferences_get_AltFontFile(This,AltFontFileName)	\
    ( (This)->lpVtbl -> get_AltFontFile(This,AltFontFileName) ) 

#define IIcadApplicationPreferences_put_AltFontFile(This,AltFontFileName)	\
    ( (This)->lpVtbl -> put_AltFontFile(This,AltFontFileName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadApplicationPreferences_INTERFACE_DEFINED__ */


#ifndef __IIcadGroups_INTERFACE_DEFINED__
#define __IIcadGroups_INTERFACE_DEFINED__

/* interface IIcadGroups */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34fc8dfc-0bfe-4a38-b3c2-317d937ddfe0")
    IIcadGroups : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadGroup **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadGroup **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadGroups * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadGroups * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadGroups * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadGroups * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadGroups * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadGroups * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadGroups * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadGroups * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadGroups * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadGroup **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadGroups * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadGroup **ppItem);
        
        END_INTERFACE
    } IIcadGroupsVtbl;

    interface IIcadGroups
    {
        CONST_VTBL struct IIcadGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadGroups_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadGroups_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadGroups_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadGroups_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadGroups_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadGroups_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadGroups_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadGroups_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadGroups_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadGroups_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadGroups_INTERFACE_DEFINED__ */


#ifndef __IIcadDbItem_INTERFACE_DEFINED__
#define __IIcadDbItem_INTERFACE_DEFINED__

/* interface IIcadDbItem */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDbItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1e9d415b-dc3a-4570-afc7-8304064a1b72")
    IIcadDbItem : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppParent) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Handle( 
            /* [retval][out] */ BSTR *pstrHandle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjectID( 
            /* [retval][out] */ long *plngID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE _handitem( 
            /* [retval][out] */ long *pHanditem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetXData( 
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetXData( 
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasExtensionDictionary( 
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetExtensionDictionary( 
            /* [retval][out] */ IIcadDictionary **ppExtDictionary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDbItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDbItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDbItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDbItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDbItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDbItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDbItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDbItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDbItem * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDbItem * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDbItem * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDbItem * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDbItem * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDbItem * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDbItem * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDbItem * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDbItem * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDbItem * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDbItem * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        END_INTERFACE
    } IIcadDbItemVtbl;

    interface IIcadDbItem
    {
        CONST_VTBL struct IIcadDbItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDbItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDbItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDbItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDbItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDbItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDbItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDbItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDbItem_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDbItem_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDbItem_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDbItem_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDbItem_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDbItem__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDbItem_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDbItem_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDbItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDbItem_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDbItem_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDbItem_INTERFACE_DEFINED__ */


#ifndef __IIcadGroup_INTERFACE_DEFINED__
#define __IIcadGroup_INTERFACE_DEFINED__

/* interface IIcadGroup */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bbf13d76-e14b-49a9-9bc1-bcabe07aa22e")
    IIcadGroup : public IIcadDbItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IIcadEntity **ppEntity) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Layer( 
            /* [in] */ BSTR layer) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Linetype( 
            /* [in] */ BSTR linetype) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_LinetypeScale( 
            /* [in] */ double linetypeScale) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL isVisible) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Highlight( 
            /* [in] */ VARIANT_BOOL HighlightFlag) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_TrueColor( 
            /* [in] */ IIcadAcCmColor *pAcCmColor) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Lineweight( 
            /* [in] */ ZcLineWeight lineWeight) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AppendItems( 
            /* [in] */ VARIANT Objects) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveItems( 
            /* [in] */ VARIANT Objects) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ ZcColors color) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadGroup * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadGroup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadGroup * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadGroup * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadGroup * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadGroup * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadGroup * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadGroup * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadGroup * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadGroup * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadGroup * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadGroup * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadGroup * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadGroup * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadGroup * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadGroup * This,
            /* [in] */ long Index,
            /* [retval][out] */ IIcadEntity **ppEntity);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadGroup * This,
            /* [retval][out] */ IUnknown **ppVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadGroup * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadGroup * This,
            /* [in] */ BSTR layer);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadGroup * This,
            /* [in] */ BSTR linetype);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadGroup * This,
            /* [in] */ double linetypeScale);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadGroup * This,
            /* [in] */ VARIANT_BOOL isVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadGroup * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadGroup * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadGroup * This,
            /* [in] */ ZcLineWeight lineWeight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AppendItems )( 
            IIcadGroup * This,
            /* [in] */ VARIANT Objects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveItems )( 
            IIcadGroup * This,
            /* [in] */ VARIANT Objects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadGroup * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadGroup * This,
            /* [in] */ ZcColors color);
        
        END_INTERFACE
    } IIcadGroupVtbl;

    interface IIcadGroup
    {
        CONST_VTBL struct IIcadGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadGroup_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadGroup_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadGroup_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadGroup_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadGroup_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadGroup__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadGroup_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadGroup_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadGroup_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadGroup_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadGroup_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadGroup_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define IIcadGroup_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define IIcadGroup_Item(This,Index,ppEntity)	\
    ( (This)->lpVtbl -> Item(This,Index,ppEntity) ) 

#define IIcadGroup_get__NewEnum(This,ppVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppVal) ) 

#define IIcadGroup_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IIcadGroup_put_Layer(This,layer)	\
    ( (This)->lpVtbl -> put_Layer(This,layer) ) 

#define IIcadGroup_put_Linetype(This,linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,linetype) ) 

#define IIcadGroup_put_LinetypeScale(This,linetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,linetypeScale) ) 

#define IIcadGroup_put_Visible(This,isVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,isVisible) ) 

#define IIcadGroup_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadGroup_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadGroup_put_Lineweight(This,lineWeight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,lineWeight) ) 

#define IIcadGroup_AppendItems(This,Objects)	\
    ( (This)->lpVtbl -> AppendItems(This,Objects) ) 

#define IIcadGroup_RemoveItems(This,Objects)	\
    ( (This)->lpVtbl -> RemoveItems(This,Objects) ) 

#define IIcadGroup_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadGroup_put_Color(This,color)	\
    ( (This)->lpVtbl -> put_Color(This,color) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadGroup_INTERFACE_DEFINED__ */


#ifndef __IIcadState_INTERFACE_DEFINED__
#define __IIcadState_INTERFACE_DEFINED__

/* interface IIcadState */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C224B979-5AEA-4bac-8A08-98F2CB3F21D8")
    IIcadState : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsQuiescent( 
            /* [retval][out] */ VARIANT_BOOL *bIsQuiet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadState * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadState * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadState * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadState * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadState * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadState * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsQuiescent )( 
            IIcadState * This,
            /* [retval][out] */ VARIANT_BOOL *bIsQuiet);
        
        END_INTERFACE
    } IIcadStateVtbl;

    interface IIcadState
    {
        CONST_VTBL struct IIcadStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadState_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadState_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadState_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadState_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadState_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadState_get_IsQuiescent(This,bIsQuiet)	\
    ( (This)->lpVtbl -> get_IsQuiescent(This,bIsQuiet) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadState_INTERFACE_DEFINED__ */


#ifndef __IIcadXRecord_INTERFACE_DEFINED__
#define __IIcadXRecord_INTERFACE_DEFINED__

/* interface IIcadXRecord */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadXRecord;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AF941469-0CAE-43e1-9A16-DFB95356846E")
    IIcadXRecord : public IIcadDbItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetXRecordData( 
            /* [out] */ VARIANT *XRecordDataType,
            /* [out] */ VARIANT *XRecordDataValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetXRecordData( 
            /* [in] */ VARIANT XRecordDataType,
            /* [in] */ VARIANT XRecordDataValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TranslateIDs( 
            /* [retval][out] */ VARIANT_BOOL *bTranslateIDs) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TranslateIDs( 
            /* [in] */ VARIANT_BOOL bTranslateIDs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadXRecordVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadXRecord * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadXRecord * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadXRecord * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadXRecord * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadXRecord * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadXRecord * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadXRecord * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadXRecord * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadXRecord * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadXRecord * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadXRecord * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadXRecord * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadXRecord * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadXRecord * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadXRecord * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadXRecord * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadXRecord * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadXRecord * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadXRecord * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadXRecord * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXRecordData )( 
            IIcadXRecord * This,
            /* [out] */ VARIANT *XRecordDataType,
            /* [out] */ VARIANT *XRecordDataValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXRecordData )( 
            IIcadXRecord * This,
            /* [in] */ VARIANT XRecordDataType,
            /* [in] */ VARIANT XRecordDataValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TranslateIDs )( 
            IIcadXRecord * This,
            /* [retval][out] */ VARIANT_BOOL *bTranslateIDs);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TranslateIDs )( 
            IIcadXRecord * This,
            /* [in] */ VARIANT_BOOL bTranslateIDs);
        
        END_INTERFACE
    } IIcadXRecordVtbl;

    interface IIcadXRecord
    {
        CONST_VTBL struct IIcadXRecordVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadXRecord_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadXRecord_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadXRecord_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadXRecord_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadXRecord_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadXRecord_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadXRecord_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadXRecord_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadXRecord_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadXRecord_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadXRecord_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadXRecord_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadXRecord__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadXRecord_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadXRecord_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadXRecord_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadXRecord_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadXRecord_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadXRecord_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define IIcadXRecord_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define IIcadXRecord_GetXRecordData(This,XRecordDataType,XRecordDataValue)	\
    ( (This)->lpVtbl -> GetXRecordData(This,XRecordDataType,XRecordDataValue) ) 

#define IIcadXRecord_SetXRecordData(This,XRecordDataType,XRecordDataValue)	\
    ( (This)->lpVtbl -> SetXRecordData(This,XRecordDataType,XRecordDataValue) ) 

#define IIcadXRecord_get_TranslateIDs(This,bTranslateIDs)	\
    ( (This)->lpVtbl -> get_TranslateIDs(This,bTranslateIDs) ) 

#define IIcadXRecord_put_TranslateIDs(This,bTranslateIDs)	\
    ( (This)->lpVtbl -> put_TranslateIDs(This,bTranslateIDs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadXRecord_INTERFACE_DEFINED__ */


#ifndef __IIcadDictionary_INTERFACE_DEFINED__
#define __IIcadDictionary_INTERFACE_DEFINED__

/* interface IIcadDictionary */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A1288074-EAB1-4cc5-9FA0-79C1D80B9677")
    IIcadDictionary : public IIcadDbItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddObject( 
            /* [in] */ BSTR Keyword,
            /* [in] */ BSTR ObjectName,
            /* [retval][out] */ IDispatch **ppNewObj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetName( 
            /* [in] */ IDispatch *pObject,
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetObject( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IDispatch **ppObj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IDispatch **ppObj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Rename( 
            /* [in] */ BSTR OldName,
            /* [in] */ BSTR NewName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Replace( 
            /* [in] */ BSTR OldName,
            /* [in] */ IDispatch *pObj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **ppItem) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddXRecord( 
            /* [in] */ BSTR Keyword,
            /* [retval][out] */ IIcadXRecord **ppNewXRecord) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDictionary * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDictionary * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDictionary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDictionary * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDictionary * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDictionary * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDictionary * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDictionary * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDictionary * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDictionary * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDictionary * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDictionary * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDictionary * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDictionary * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDictionary * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDictionary * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadDictionary * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadDictionary * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddObject )( 
            IIcadDictionary * This,
            /* [in] */ BSTR Keyword,
            /* [in] */ BSTR ObjectName,
            /* [retval][out] */ IDispatch **ppNewObj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetName )( 
            IIcadDictionary * This,
            /* [in] */ IDispatch *pObject,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            IIcadDictionary * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IDispatch **ppObj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IIcadDictionary * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IDispatch **ppObj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rename )( 
            IIcadDictionary * This,
            /* [in] */ BSTR OldName,
            /* [in] */ BSTR NewName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Replace )( 
            IIcadDictionary * This,
            /* [in] */ BSTR OldName,
            /* [in] */ IDispatch *pObj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadDictionary * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **ppItem);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadDictionary * This,
            /* [retval][out] */ IUnknown **ppVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadDictionary * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddXRecord )( 
            IIcadDictionary * This,
            /* [in] */ BSTR Keyword,
            /* [retval][out] */ IIcadXRecord **ppNewXRecord);
        
        END_INTERFACE
    } IIcadDictionaryVtbl;

    interface IIcadDictionary
    {
        CONST_VTBL struct IIcadDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDictionary_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDictionary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDictionary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDictionary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDictionary_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDictionary_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDictionary_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDictionary_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDictionary_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDictionary__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDictionary_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDictionary_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDictionary_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDictionary_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDictionary_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDictionary_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define IIcadDictionary_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define IIcadDictionary_AddObject(This,Keyword,ObjectName,ppNewObj)	\
    ( (This)->lpVtbl -> AddObject(This,Keyword,ObjectName,ppNewObj) ) 

#define IIcadDictionary_GetName(This,pObject,bstrName)	\
    ( (This)->lpVtbl -> GetName(This,pObject,bstrName) ) 

#define IIcadDictionary_GetObject(This,Name,ppObj)	\
    ( (This)->lpVtbl -> GetObject(This,Name,ppObj) ) 

#define IIcadDictionary_Remove(This,Name,ppObj)	\
    ( (This)->lpVtbl -> Remove(This,Name,ppObj) ) 

#define IIcadDictionary_Rename(This,OldName,NewName)	\
    ( (This)->lpVtbl -> Rename(This,OldName,NewName) ) 

#define IIcadDictionary_Replace(This,OldName,pObj)	\
    ( (This)->lpVtbl -> Replace(This,OldName,pObj) ) 

#define IIcadDictionary_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadDictionary_get__NewEnum(This,ppVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppVal) ) 

#define IIcadDictionary_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IIcadDictionary_AddXRecord(This,Keyword,ppNewXRecord)	\
    ( (This)->lpVtbl -> AddXRecord(This,Keyword,ppNewXRecord) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDictionary_INTERFACE_DEFINED__ */


#ifndef __IIcadDictionaries_INTERFACE_DEFINED__
#define __IIcadDictionaries_INTERFACE_DEFINED__

/* interface IIcadDictionaries */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDictionaries;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2E552076-8ACF-4dbd-91B7-CF425F90934D")
    IIcadDictionaries : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadDictionary **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDictionariesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDictionaries * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDictionaries * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDictionaries * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDictionaries * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDictionaries * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDictionaries * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDictionaries * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDictionaries * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadDictionaries * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDictionaries * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadDictionaries * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadDictionaries * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadDictionary **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadDictionaries * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **ppItem);
        
        END_INTERFACE
    } IIcadDictionariesVtbl;

    interface IIcadDictionaries
    {
        CONST_VTBL struct IIcadDictionariesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDictionaries_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDictionaries_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDictionaries_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDictionaries_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDictionaries_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDictionaries_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDictionaries_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDictionaries_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDictionaries_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadDictionaries_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDictionaries_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadDictionaries_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadDictionaries_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDictionaries_INTERFACE_DEFINED__ */


#ifndef __IIcadPlotConfiguration_INTERFACE_DEFINED__
#define __IIcadPlotConfiguration_INTERFACE_DEFINED__

/* interface IIcadPlotConfiguration */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPlotConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4608DBA8-E313-419e-88F9-5C4573CD16BC")
    IIcadPlotConfiguration : public IIcadDbItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CanonicalMediaName( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanonicalMediaName( 
            /* [in] */ BSTR name) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CenterPlot( 
            /* [retval][out] */ VARIANT_BOOL *pIsCenter) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterPlot( 
            /* [in] */ VARIANT_BOOL center) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConfigName( 
            /* [retval][out] */ BSTR *pConfigName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ConfigName( 
            /* [in] */ BSTR configName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PaperUnits( 
            /* [retval][out] */ ZcPlotPaperUnits *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PaperUnits( 
            /* [in] */ ZcPlotPaperUnits type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotHidden( 
            /* [retval][out] */ VARIANT_BOOL *pIsHidden) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotHidden( 
            /* [in] */ VARIANT_BOOL plotHidden) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotOrigin( 
            /* [retval][out] */ VARIANT *pVarOriginPt) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotOrigin( 
            /* [in] */ VARIANT varOriginPt) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotRotation( 
            /* [retval][out] */ ZcPlotRotation *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotRotation( 
            /* [in] */ ZcPlotRotation type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotType( 
            /* [retval][out] */ ZcPlotType *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotType( 
            /* [in] */ ZcPlotType type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotViewportBorders( 
            /* [retval][out] */ VARIANT_BOOL *pIsPlotBorders) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotViewportBorders( 
            /* [in] */ VARIANT_BOOL bPlotBorders) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotViewportsFirst( 
            /* [retval][out] */ VARIANT_BOOL *pIsVpFirst) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotViewportsFirst( 
            /* [in] */ VARIANT_BOOL bVpFirst) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotWithLineweights( 
            /* [retval][out] */ VARIANT_BOOL *pIsWithLW) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotWithLineweights( 
            /* [in] */ VARIANT_BOOL bWithLW) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotWithPlotStyles( 
            /* [retval][out] */ VARIANT_BOOL *pIsWithPlotStyles) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlotWithPlotStyles( 
            /* [in] */ VARIANT_BOOL bWithPlotStyles) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleLineweights( 
            /* [retval][out] */ VARIANT_BOOL *pIsScaleLW) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleLineweights( 
            /* [in] */ VARIANT_BOOL bScaleLW) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ShowPlotStyles( 
            /* [retval][out] */ VARIANT_BOOL *pIsShowPlotStyles) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ShowPlotStyles( 
            /* [in] */ VARIANT_BOOL bShowPlotStyles) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StandardScale( 
            /* [retval][out] */ ZcPlotScale *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StandardScale( 
            /* [in] */ ZcPlotScale type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleSheet( 
            /* [retval][out] */ BSTR *pStyleSheet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleSheet( 
            /* [in] */ BSTR styleSheet) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UseStandardScale( 
            /* [retval][out] */ VARIANT_BOOL *pIsStdScale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UseStandardScale( 
            /* [in] */ VARIANT_BOOL bStdScale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ViewToPlot( 
            /* [retval][out] */ BSTR *pPlotViewName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ViewToPlot( 
            /* [in] */ BSTR plotViewName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPaperSize( 
            /* [out] */ double *Width,
            /* [out] */ double *Height) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetWindowToPlot( 
            /* [out] */ VARIANT *pVarLowerLeft,
            /* [out] */ VARIANT *pVarUpperRight) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetWindowToPlot( 
            /* [in] */ VARIANT varLowerLeft,
            /* [in] */ VARIANT varUpperRight) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCustomScale( 
            /* [in] */ double Numerator,
            /* [in] */ double Denominator) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCustomScale( 
            /* [out] */ double *pNumerator,
            /* [out] */ double *pDenominator) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPlotDeviceNames( 
            /* [retval][out] */ VARIANT *pArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPlotStyleTableNames( 
            /* [retval][out] */ VARIANT *pArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPaperMargins( 
            /* [out] */ VARIANT *pVarLowerLeft,
            /* [out] */ VARIANT *pVarUpperRight) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CopyFrom( 
            /* [in] */ IIcadPlotConfiguration *pPlotConfig) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCanonicalMediaNames( 
            /* [retval][out] */ VARIANT *pArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLocaleMediaName( 
            /* [in] */ BSTR bstrCanoncaleName,
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RefreshPlotDeviceInfo( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ModelType( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlotConfiguration * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlotConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlotConfiguration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPlotConfiguration * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPlotConfiguration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPlotConfiguration * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPlotConfiguration * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadPlotConfiguration * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadPlotConfiguration * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadPlotConfiguration * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanonicalMediaName )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanonicalMediaName )( 
            IIcadPlotConfiguration * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterPlot )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsCenter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterPlot )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL center);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigName )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pConfigName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigName )( 
            IIcadPlotConfiguration * This,
            /* [in] */ BSTR configName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaperUnits )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ ZcPlotPaperUnits *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PaperUnits )( 
            IIcadPlotConfiguration * This,
            /* [in] */ ZcPlotPaperUnits type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotHidden )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsHidden);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotHidden )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL plotHidden);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotOrigin )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pVarOriginPt);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotOrigin )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT varOriginPt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotRotation )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ ZcPlotRotation *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotRotation )( 
            IIcadPlotConfiguration * This,
            /* [in] */ ZcPlotRotation type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotType )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ ZcPlotType *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotType )( 
            IIcadPlotConfiguration * This,
            /* [in] */ ZcPlotType type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportBorders )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsPlotBorders);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportBorders )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL bPlotBorders);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportsFirst )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsVpFirst);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportsFirst )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL bVpFirst);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithLineweights )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsWithLW);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithLineweights )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL bWithLW);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithPlotStyles )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsWithPlotStyles);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithPlotStyles )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL bWithPlotStyles);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLineweights )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsScaleLW);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLineweights )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL bScaleLW);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPlotStyles )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsShowPlotStyles);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowPlotStyles )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL bShowPlotStyles);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StandardScale )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ ZcPlotScale *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StandardScale )( 
            IIcadPlotConfiguration * This,
            /* [in] */ ZcPlotScale type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pStyleSheet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )( 
            IIcadPlotConfiguration * This,
            /* [in] */ BSTR styleSheet);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseStandardScale )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStdScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseStandardScale )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT_BOOL bStdScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewToPlot )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ BSTR *pPlotViewName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ViewToPlot )( 
            IIcadPlotConfiguration * This,
            /* [in] */ BSTR plotViewName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPaperSize )( 
            IIcadPlotConfiguration * This,
            /* [out] */ double *Width,
            /* [out] */ double *Height);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWindowToPlot )( 
            IIcadPlotConfiguration * This,
            /* [out] */ VARIANT *pVarLowerLeft,
            /* [out] */ VARIANT *pVarUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetWindowToPlot )( 
            IIcadPlotConfiguration * This,
            /* [in] */ VARIANT varLowerLeft,
            /* [in] */ VARIANT varUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCustomScale )( 
            IIcadPlotConfiguration * This,
            /* [in] */ double Numerator,
            /* [in] */ double Denominator);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCustomScale )( 
            IIcadPlotConfiguration * This,
            /* [out] */ double *pNumerator,
            /* [out] */ double *pDenominator);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPlotDeviceNames )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPlotStyleTableNames )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPaperMargins )( 
            IIcadPlotConfiguration * This,
            /* [out] */ VARIANT *pVarLowerLeft,
            /* [out] */ VARIANT *pVarUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CopyFrom )( 
            IIcadPlotConfiguration * This,
            /* [in] */ IIcadPlotConfiguration *pPlotConfig);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCanonicalMediaNames )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT *pArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLocaleMediaName )( 
            IIcadPlotConfiguration * This,
            /* [in] */ BSTR bstrCanoncaleName,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RefreshPlotDeviceInfo )( 
            IIcadPlotConfiguration * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ModelType )( 
            IIcadPlotConfiguration * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IIcadPlotConfigurationVtbl;

    interface IIcadPlotConfiguration
    {
        CONST_VTBL struct IIcadPlotConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlotConfiguration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlotConfiguration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlotConfiguration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlotConfiguration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPlotConfiguration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPlotConfiguration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPlotConfiguration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPlotConfiguration_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPlotConfiguration_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadPlotConfiguration_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPlotConfiguration_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadPlotConfiguration_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadPlotConfiguration__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadPlotConfiguration_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadPlotConfiguration_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadPlotConfiguration_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadPlotConfiguration_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadPlotConfiguration_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadPlotConfiguration_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define IIcadPlotConfiguration_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define IIcadPlotConfiguration_get_CanonicalMediaName(This,pName)	\
    ( (This)->lpVtbl -> get_CanonicalMediaName(This,pName) ) 

#define IIcadPlotConfiguration_put_CanonicalMediaName(This,name)	\
    ( (This)->lpVtbl -> put_CanonicalMediaName(This,name) ) 

#define IIcadPlotConfiguration_get_CenterPlot(This,pIsCenter)	\
    ( (This)->lpVtbl -> get_CenterPlot(This,pIsCenter) ) 

#define IIcadPlotConfiguration_put_CenterPlot(This,center)	\
    ( (This)->lpVtbl -> put_CenterPlot(This,center) ) 

#define IIcadPlotConfiguration_get_ConfigName(This,pConfigName)	\
    ( (This)->lpVtbl -> get_ConfigName(This,pConfigName) ) 

#define IIcadPlotConfiguration_put_ConfigName(This,configName)	\
    ( (This)->lpVtbl -> put_ConfigName(This,configName) ) 

#define IIcadPlotConfiguration_get_PaperUnits(This,pType)	\
    ( (This)->lpVtbl -> get_PaperUnits(This,pType) ) 

#define IIcadPlotConfiguration_put_PaperUnits(This,type)	\
    ( (This)->lpVtbl -> put_PaperUnits(This,type) ) 

#define IIcadPlotConfiguration_get_PlotHidden(This,pIsHidden)	\
    ( (This)->lpVtbl -> get_PlotHidden(This,pIsHidden) ) 

#define IIcadPlotConfiguration_put_PlotHidden(This,plotHidden)	\
    ( (This)->lpVtbl -> put_PlotHidden(This,plotHidden) ) 

#define IIcadPlotConfiguration_get_PlotOrigin(This,pVarOriginPt)	\
    ( (This)->lpVtbl -> get_PlotOrigin(This,pVarOriginPt) ) 

#define IIcadPlotConfiguration_put_PlotOrigin(This,varOriginPt)	\
    ( (This)->lpVtbl -> put_PlotOrigin(This,varOriginPt) ) 

#define IIcadPlotConfiguration_get_PlotRotation(This,pType)	\
    ( (This)->lpVtbl -> get_PlotRotation(This,pType) ) 

#define IIcadPlotConfiguration_put_PlotRotation(This,type)	\
    ( (This)->lpVtbl -> put_PlotRotation(This,type) ) 

#define IIcadPlotConfiguration_get_PlotType(This,pType)	\
    ( (This)->lpVtbl -> get_PlotType(This,pType) ) 

#define IIcadPlotConfiguration_put_PlotType(This,type)	\
    ( (This)->lpVtbl -> put_PlotType(This,type) ) 

#define IIcadPlotConfiguration_get_PlotViewportBorders(This,pIsPlotBorders)	\
    ( (This)->lpVtbl -> get_PlotViewportBorders(This,pIsPlotBorders) ) 

#define IIcadPlotConfiguration_put_PlotViewportBorders(This,bPlotBorders)	\
    ( (This)->lpVtbl -> put_PlotViewportBorders(This,bPlotBorders) ) 

#define IIcadPlotConfiguration_get_PlotViewportsFirst(This,pIsVpFirst)	\
    ( (This)->lpVtbl -> get_PlotViewportsFirst(This,pIsVpFirst) ) 

#define IIcadPlotConfiguration_put_PlotViewportsFirst(This,bVpFirst)	\
    ( (This)->lpVtbl -> put_PlotViewportsFirst(This,bVpFirst) ) 

#define IIcadPlotConfiguration_get_PlotWithLineweights(This,pIsWithLW)	\
    ( (This)->lpVtbl -> get_PlotWithLineweights(This,pIsWithLW) ) 

#define IIcadPlotConfiguration_put_PlotWithLineweights(This,bWithLW)	\
    ( (This)->lpVtbl -> put_PlotWithLineweights(This,bWithLW) ) 

#define IIcadPlotConfiguration_get_PlotWithPlotStyles(This,pIsWithPlotStyles)	\
    ( (This)->lpVtbl -> get_PlotWithPlotStyles(This,pIsWithPlotStyles) ) 

#define IIcadPlotConfiguration_put_PlotWithPlotStyles(This,bWithPlotStyles)	\
    ( (This)->lpVtbl -> put_PlotWithPlotStyles(This,bWithPlotStyles) ) 

#define IIcadPlotConfiguration_get_ScaleLineweights(This,pIsScaleLW)	\
    ( (This)->lpVtbl -> get_ScaleLineweights(This,pIsScaleLW) ) 

#define IIcadPlotConfiguration_put_ScaleLineweights(This,bScaleLW)	\
    ( (This)->lpVtbl -> put_ScaleLineweights(This,bScaleLW) ) 

#define IIcadPlotConfiguration_get_ShowPlotStyles(This,pIsShowPlotStyles)	\
    ( (This)->lpVtbl -> get_ShowPlotStyles(This,pIsShowPlotStyles) ) 

#define IIcadPlotConfiguration_put_ShowPlotStyles(This,bShowPlotStyles)	\
    ( (This)->lpVtbl -> put_ShowPlotStyles(This,bShowPlotStyles) ) 

#define IIcadPlotConfiguration_get_StandardScale(This,pType)	\
    ( (This)->lpVtbl -> get_StandardScale(This,pType) ) 

#define IIcadPlotConfiguration_put_StandardScale(This,type)	\
    ( (This)->lpVtbl -> put_StandardScale(This,type) ) 

#define IIcadPlotConfiguration_get_StyleSheet(This,pStyleSheet)	\
    ( (This)->lpVtbl -> get_StyleSheet(This,pStyleSheet) ) 

#define IIcadPlotConfiguration_put_StyleSheet(This,styleSheet)	\
    ( (This)->lpVtbl -> put_StyleSheet(This,styleSheet) ) 

#define IIcadPlotConfiguration_get_UseStandardScale(This,pIsStdScale)	\
    ( (This)->lpVtbl -> get_UseStandardScale(This,pIsStdScale) ) 

#define IIcadPlotConfiguration_put_UseStandardScale(This,bStdScale)	\
    ( (This)->lpVtbl -> put_UseStandardScale(This,bStdScale) ) 

#define IIcadPlotConfiguration_get_ViewToPlot(This,pPlotViewName)	\
    ( (This)->lpVtbl -> get_ViewToPlot(This,pPlotViewName) ) 

#define IIcadPlotConfiguration_put_ViewToPlot(This,plotViewName)	\
    ( (This)->lpVtbl -> put_ViewToPlot(This,plotViewName) ) 

#define IIcadPlotConfiguration_GetPaperSize(This,Width,Height)	\
    ( (This)->lpVtbl -> GetPaperSize(This,Width,Height) ) 

#define IIcadPlotConfiguration_GetWindowToPlot(This,pVarLowerLeft,pVarUpperRight)	\
    ( (This)->lpVtbl -> GetWindowToPlot(This,pVarLowerLeft,pVarUpperRight) ) 

#define IIcadPlotConfiguration_SetWindowToPlot(This,varLowerLeft,varUpperRight)	\
    ( (This)->lpVtbl -> SetWindowToPlot(This,varLowerLeft,varUpperRight) ) 

#define IIcadPlotConfiguration_SetCustomScale(This,Numerator,Denominator)	\
    ( (This)->lpVtbl -> SetCustomScale(This,Numerator,Denominator) ) 

#define IIcadPlotConfiguration_GetCustomScale(This,pNumerator,pDenominator)	\
    ( (This)->lpVtbl -> GetCustomScale(This,pNumerator,pDenominator) ) 

#define IIcadPlotConfiguration_GetPlotDeviceNames(This,pArray)	\
    ( (This)->lpVtbl -> GetPlotDeviceNames(This,pArray) ) 

#define IIcadPlotConfiguration_GetPlotStyleTableNames(This,pArray)	\
    ( (This)->lpVtbl -> GetPlotStyleTableNames(This,pArray) ) 

#define IIcadPlotConfiguration_GetPaperMargins(This,pVarLowerLeft,pVarUpperRight)	\
    ( (This)->lpVtbl -> GetPaperMargins(This,pVarLowerLeft,pVarUpperRight) ) 

#define IIcadPlotConfiguration_CopyFrom(This,pPlotConfig)	\
    ( (This)->lpVtbl -> CopyFrom(This,pPlotConfig) ) 

#define IIcadPlotConfiguration_GetCanonicalMediaNames(This,pArray)	\
    ( (This)->lpVtbl -> GetCanonicalMediaNames(This,pArray) ) 

#define IIcadPlotConfiguration_GetLocaleMediaName(This,bstrCanoncaleName,pName)	\
    ( (This)->lpVtbl -> GetLocaleMediaName(This,bstrCanoncaleName,pName) ) 

#define IIcadPlotConfiguration_RefreshPlotDeviceInfo(This)	\
    ( (This)->lpVtbl -> RefreshPlotDeviceInfo(This) ) 

#define IIcadPlotConfiguration_get_ModelType(This,pVal)	\
    ( (This)->lpVtbl -> get_ModelType(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlotConfiguration_INTERFACE_DEFINED__ */


#ifndef __IIcadPlotConfigurations_INTERFACE_DEFINED__
#define __IIcadPlotConfigurations_INTERFACE_DEFINED__

/* interface IIcadPlotConfigurations */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPlotConfigurations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD30B56D-76AD-445f-BFF4-C257B45AC01F")
    IIcadPlotConfigurations : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT ModelType,
            /* [retval][out] */ IIcadPlotConfiguration **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPlotConfiguration **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotConfigurationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlotConfigurations * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlotConfigurations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlotConfigurations * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPlotConfigurations * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPlotConfigurations * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPlotConfigurations * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPlotConfigurations * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPlotConfigurations * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadPlotConfigurations * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPlotConfigurations * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadPlotConfigurations * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadPlotConfigurations * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT ModelType,
            /* [retval][out] */ IIcadPlotConfiguration **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadPlotConfigurations * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadPlotConfiguration **ppItem);
        
        END_INTERFACE
    } IIcadPlotConfigurationsVtbl;

    interface IIcadPlotConfigurations
    {
        CONST_VTBL struct IIcadPlotConfigurationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlotConfigurations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlotConfigurations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlotConfigurations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlotConfigurations_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPlotConfigurations_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPlotConfigurations_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPlotConfigurations_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPlotConfigurations_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPlotConfigurations_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadPlotConfigurations_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPlotConfigurations_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadPlotConfigurations_Add(This,Name,ModelType,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ModelType,ppItem) ) 

#define IIcadPlotConfigurations_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlotConfigurations_INTERFACE_DEFINED__ */


#ifndef __IIcadLayout_INTERFACE_DEFINED__
#define __IIcadLayout_INTERFACE_DEFINED__

/* interface IIcadLayout */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLayout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D8E7F9AF-63F3-45af-906C-90C89A4EA94D")
    IIcadLayout : public IIcadPlotConfiguration
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Block( 
            /* [retval][out] */ IIcadBlock **ppBlock) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TabOrder( 
            /* [retval][out] */ long *pTabOrder) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TabOrder( 
            /* [in] */ long tabOrder) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLayoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLayout * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLayout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLayout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLayout * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLayout * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLayout * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLayout * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLayout * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadLayout * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLayout * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadLayout * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadLayout * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadLayout * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadLayout * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadLayout * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadLayout * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadLayout * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadLayout * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadLayout * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanonicalMediaName )( 
            IIcadLayout * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanonicalMediaName )( 
            IIcadLayout * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterPlot )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsCenter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterPlot )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL center);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigName )( 
            IIcadLayout * This,
            /* [retval][out] */ BSTR *pConfigName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigName )( 
            IIcadLayout * This,
            /* [in] */ BSTR configName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaperUnits )( 
            IIcadLayout * This,
            /* [retval][out] */ ZcPlotPaperUnits *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PaperUnits )( 
            IIcadLayout * This,
            /* [in] */ ZcPlotPaperUnits type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotHidden )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsHidden);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotHidden )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL plotHidden);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotOrigin )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT *pVarOriginPt);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotOrigin )( 
            IIcadLayout * This,
            /* [in] */ VARIANT varOriginPt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotRotation )( 
            IIcadLayout * This,
            /* [retval][out] */ ZcPlotRotation *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotRotation )( 
            IIcadLayout * This,
            /* [in] */ ZcPlotRotation type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotType )( 
            IIcadLayout * This,
            /* [retval][out] */ ZcPlotType *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotType )( 
            IIcadLayout * This,
            /* [in] */ ZcPlotType type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportBorders )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsPlotBorders);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportBorders )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL bPlotBorders);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotViewportsFirst )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsVpFirst);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotViewportsFirst )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL bVpFirst);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithLineweights )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsWithLW);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithLineweights )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL bWithLW);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotWithPlotStyles )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsWithPlotStyles);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlotWithPlotStyles )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL bWithPlotStyles);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLineweights )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsScaleLW);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLineweights )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL bScaleLW);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPlotStyles )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsShowPlotStyles);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowPlotStyles )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL bShowPlotStyles);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StandardScale )( 
            IIcadLayout * This,
            /* [retval][out] */ ZcPlotScale *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StandardScale )( 
            IIcadLayout * This,
            /* [in] */ ZcPlotScale type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )( 
            IIcadLayout * This,
            /* [retval][out] */ BSTR *pStyleSheet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )( 
            IIcadLayout * This,
            /* [in] */ BSTR styleSheet);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseStandardScale )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStdScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseStandardScale )( 
            IIcadLayout * This,
            /* [in] */ VARIANT_BOOL bStdScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewToPlot )( 
            IIcadLayout * This,
            /* [retval][out] */ BSTR *pPlotViewName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ViewToPlot )( 
            IIcadLayout * This,
            /* [in] */ BSTR plotViewName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPaperSize )( 
            IIcadLayout * This,
            /* [out] */ double *Width,
            /* [out] */ double *Height);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWindowToPlot )( 
            IIcadLayout * This,
            /* [out] */ VARIANT *pVarLowerLeft,
            /* [out] */ VARIANT *pVarUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetWindowToPlot )( 
            IIcadLayout * This,
            /* [in] */ VARIANT varLowerLeft,
            /* [in] */ VARIANT varUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCustomScale )( 
            IIcadLayout * This,
            /* [in] */ double Numerator,
            /* [in] */ double Denominator);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCustomScale )( 
            IIcadLayout * This,
            /* [out] */ double *pNumerator,
            /* [out] */ double *pDenominator);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPlotDeviceNames )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT *pArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPlotStyleTableNames )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT *pArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPaperMargins )( 
            IIcadLayout * This,
            /* [out] */ VARIANT *pVarLowerLeft,
            /* [out] */ VARIANT *pVarUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CopyFrom )( 
            IIcadLayout * This,
            /* [in] */ IIcadPlotConfiguration *pPlotConfig);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCanonicalMediaNames )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT *pArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLocaleMediaName )( 
            IIcadLayout * This,
            /* [in] */ BSTR bstrCanoncaleName,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RefreshPlotDeviceInfo )( 
            IIcadLayout * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ModelType )( 
            IIcadLayout * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Block )( 
            IIcadLayout * This,
            /* [retval][out] */ IIcadBlock **ppBlock);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TabOrder )( 
            IIcadLayout * This,
            /* [retval][out] */ long *pTabOrder);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TabOrder )( 
            IIcadLayout * This,
            /* [in] */ long tabOrder);
        
        END_INTERFACE
    } IIcadLayoutVtbl;

    interface IIcadLayout
    {
        CONST_VTBL struct IIcadLayoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLayout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLayout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLayout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLayout_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLayout_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLayout_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLayout_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLayout_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLayout_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadLayout_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLayout_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadLayout_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadLayout__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadLayout_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadLayout_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadLayout_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadLayout_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadLayout_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadLayout_get_Name(This,pName)	\
    ( (This)->lpVtbl -> get_Name(This,pName) ) 

#define IIcadLayout_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define IIcadLayout_get_CanonicalMediaName(This,pName)	\
    ( (This)->lpVtbl -> get_CanonicalMediaName(This,pName) ) 

#define IIcadLayout_put_CanonicalMediaName(This,name)	\
    ( (This)->lpVtbl -> put_CanonicalMediaName(This,name) ) 

#define IIcadLayout_get_CenterPlot(This,pIsCenter)	\
    ( (This)->lpVtbl -> get_CenterPlot(This,pIsCenter) ) 

#define IIcadLayout_put_CenterPlot(This,center)	\
    ( (This)->lpVtbl -> put_CenterPlot(This,center) ) 

#define IIcadLayout_get_ConfigName(This,pConfigName)	\
    ( (This)->lpVtbl -> get_ConfigName(This,pConfigName) ) 

#define IIcadLayout_put_ConfigName(This,configName)	\
    ( (This)->lpVtbl -> put_ConfigName(This,configName) ) 

#define IIcadLayout_get_PaperUnits(This,pType)	\
    ( (This)->lpVtbl -> get_PaperUnits(This,pType) ) 

#define IIcadLayout_put_PaperUnits(This,type)	\
    ( (This)->lpVtbl -> put_PaperUnits(This,type) ) 

#define IIcadLayout_get_PlotHidden(This,pIsHidden)	\
    ( (This)->lpVtbl -> get_PlotHidden(This,pIsHidden) ) 

#define IIcadLayout_put_PlotHidden(This,plotHidden)	\
    ( (This)->lpVtbl -> put_PlotHidden(This,plotHidden) ) 

#define IIcadLayout_get_PlotOrigin(This,pVarOriginPt)	\
    ( (This)->lpVtbl -> get_PlotOrigin(This,pVarOriginPt) ) 

#define IIcadLayout_put_PlotOrigin(This,varOriginPt)	\
    ( (This)->lpVtbl -> put_PlotOrigin(This,varOriginPt) ) 

#define IIcadLayout_get_PlotRotation(This,pType)	\
    ( (This)->lpVtbl -> get_PlotRotation(This,pType) ) 

#define IIcadLayout_put_PlotRotation(This,type)	\
    ( (This)->lpVtbl -> put_PlotRotation(This,type) ) 

#define IIcadLayout_get_PlotType(This,pType)	\
    ( (This)->lpVtbl -> get_PlotType(This,pType) ) 

#define IIcadLayout_put_PlotType(This,type)	\
    ( (This)->lpVtbl -> put_PlotType(This,type) ) 

#define IIcadLayout_get_PlotViewportBorders(This,pIsPlotBorders)	\
    ( (This)->lpVtbl -> get_PlotViewportBorders(This,pIsPlotBorders) ) 

#define IIcadLayout_put_PlotViewportBorders(This,bPlotBorders)	\
    ( (This)->lpVtbl -> put_PlotViewportBorders(This,bPlotBorders) ) 

#define IIcadLayout_get_PlotViewportsFirst(This,pIsVpFirst)	\
    ( (This)->lpVtbl -> get_PlotViewportsFirst(This,pIsVpFirst) ) 

#define IIcadLayout_put_PlotViewportsFirst(This,bVpFirst)	\
    ( (This)->lpVtbl -> put_PlotViewportsFirst(This,bVpFirst) ) 

#define IIcadLayout_get_PlotWithLineweights(This,pIsWithLW)	\
    ( (This)->lpVtbl -> get_PlotWithLineweights(This,pIsWithLW) ) 

#define IIcadLayout_put_PlotWithLineweights(This,bWithLW)	\
    ( (This)->lpVtbl -> put_PlotWithLineweights(This,bWithLW) ) 

#define IIcadLayout_get_PlotWithPlotStyles(This,pIsWithPlotStyles)	\
    ( (This)->lpVtbl -> get_PlotWithPlotStyles(This,pIsWithPlotStyles) ) 

#define IIcadLayout_put_PlotWithPlotStyles(This,bWithPlotStyles)	\
    ( (This)->lpVtbl -> put_PlotWithPlotStyles(This,bWithPlotStyles) ) 

#define IIcadLayout_get_ScaleLineweights(This,pIsScaleLW)	\
    ( (This)->lpVtbl -> get_ScaleLineweights(This,pIsScaleLW) ) 

#define IIcadLayout_put_ScaleLineweights(This,bScaleLW)	\
    ( (This)->lpVtbl -> put_ScaleLineweights(This,bScaleLW) ) 

#define IIcadLayout_get_ShowPlotStyles(This,pIsShowPlotStyles)	\
    ( (This)->lpVtbl -> get_ShowPlotStyles(This,pIsShowPlotStyles) ) 

#define IIcadLayout_put_ShowPlotStyles(This,bShowPlotStyles)	\
    ( (This)->lpVtbl -> put_ShowPlotStyles(This,bShowPlotStyles) ) 

#define IIcadLayout_get_StandardScale(This,pType)	\
    ( (This)->lpVtbl -> get_StandardScale(This,pType) ) 

#define IIcadLayout_put_StandardScale(This,type)	\
    ( (This)->lpVtbl -> put_StandardScale(This,type) ) 

#define IIcadLayout_get_StyleSheet(This,pStyleSheet)	\
    ( (This)->lpVtbl -> get_StyleSheet(This,pStyleSheet) ) 

#define IIcadLayout_put_StyleSheet(This,styleSheet)	\
    ( (This)->lpVtbl -> put_StyleSheet(This,styleSheet) ) 

#define IIcadLayout_get_UseStandardScale(This,pIsStdScale)	\
    ( (This)->lpVtbl -> get_UseStandardScale(This,pIsStdScale) ) 

#define IIcadLayout_put_UseStandardScale(This,bStdScale)	\
    ( (This)->lpVtbl -> put_UseStandardScale(This,bStdScale) ) 

#define IIcadLayout_get_ViewToPlot(This,pPlotViewName)	\
    ( (This)->lpVtbl -> get_ViewToPlot(This,pPlotViewName) ) 

#define IIcadLayout_put_ViewToPlot(This,plotViewName)	\
    ( (This)->lpVtbl -> put_ViewToPlot(This,plotViewName) ) 

#define IIcadLayout_GetPaperSize(This,Width,Height)	\
    ( (This)->lpVtbl -> GetPaperSize(This,Width,Height) ) 

#define IIcadLayout_GetWindowToPlot(This,pVarLowerLeft,pVarUpperRight)	\
    ( (This)->lpVtbl -> GetWindowToPlot(This,pVarLowerLeft,pVarUpperRight) ) 

#define IIcadLayout_SetWindowToPlot(This,varLowerLeft,varUpperRight)	\
    ( (This)->lpVtbl -> SetWindowToPlot(This,varLowerLeft,varUpperRight) ) 

#define IIcadLayout_SetCustomScale(This,Numerator,Denominator)	\
    ( (This)->lpVtbl -> SetCustomScale(This,Numerator,Denominator) ) 

#define IIcadLayout_GetCustomScale(This,pNumerator,pDenominator)	\
    ( (This)->lpVtbl -> GetCustomScale(This,pNumerator,pDenominator) ) 

#define IIcadLayout_GetPlotDeviceNames(This,pArray)	\
    ( (This)->lpVtbl -> GetPlotDeviceNames(This,pArray) ) 

#define IIcadLayout_GetPlotStyleTableNames(This,pArray)	\
    ( (This)->lpVtbl -> GetPlotStyleTableNames(This,pArray) ) 

#define IIcadLayout_GetPaperMargins(This,pVarLowerLeft,pVarUpperRight)	\
    ( (This)->lpVtbl -> GetPaperMargins(This,pVarLowerLeft,pVarUpperRight) ) 

#define IIcadLayout_CopyFrom(This,pPlotConfig)	\
    ( (This)->lpVtbl -> CopyFrom(This,pPlotConfig) ) 

#define IIcadLayout_GetCanonicalMediaNames(This,pArray)	\
    ( (This)->lpVtbl -> GetCanonicalMediaNames(This,pArray) ) 

#define IIcadLayout_GetLocaleMediaName(This,bstrCanoncaleName,pName)	\
    ( (This)->lpVtbl -> GetLocaleMediaName(This,bstrCanoncaleName,pName) ) 

#define IIcadLayout_RefreshPlotDeviceInfo(This)	\
    ( (This)->lpVtbl -> RefreshPlotDeviceInfo(This) ) 

#define IIcadLayout_get_ModelType(This,pVal)	\
    ( (This)->lpVtbl -> get_ModelType(This,pVal) ) 


#define IIcadLayout_get_Block(This,ppBlock)	\
    ( (This)->lpVtbl -> get_Block(This,ppBlock) ) 

#define IIcadLayout_get_TabOrder(This,pTabOrder)	\
    ( (This)->lpVtbl -> get_TabOrder(This,pTabOrder) ) 

#define IIcadLayout_put_TabOrder(This,tabOrder)	\
    ( (This)->lpVtbl -> put_TabOrder(This,tabOrder) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLayout_INTERFACE_DEFINED__ */


#ifndef __IIcadLayouts_INTERFACE_DEFINED__
#define __IIcadLayouts_INTERFACE_DEFINED__

/* interface IIcadLayouts */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLayouts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CEC741B0-F9BD-4d13-AD65-26F53F2B94DC")
    IIcadLayouts : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadLayout **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadLayout **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLayoutsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLayouts * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLayouts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLayouts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLayouts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLayouts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLayouts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLayouts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLayouts * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadLayouts * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLayouts * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadLayouts * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadLayouts * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadLayout **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadLayouts * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadLayout **ppItem);
        
        END_INTERFACE
    } IIcadLayoutsVtbl;

    interface IIcadLayouts
    {
        CONST_VTBL struct IIcadLayoutsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLayouts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLayouts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLayouts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLayouts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLayouts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLayouts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLayouts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLayouts_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLayouts_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadLayouts_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLayouts_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadLayouts_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadLayouts_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLayouts_INTERFACE_DEFINED__ */


#ifndef __IIcadPlot_INTERFACE_DEFINED__
#define __IIcadPlot_INTERFACE_DEFINED__

/* interface IIcadPlot */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPlot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9CA2C5C3-E22E-46a6-91C2-DF5EC12E3DBC")
    IIcadPlot : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BatchPlotProgress( 
            /* [retval][out] */ VARIANT_BOOL *bProgressStatus) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_BatchPlotProgress( 
            /* [in] */ VARIANT_BOOL bProgressStatus) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NumberOfCopies( 
            /* [retval][out] */ long *pNumber) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_NumberOfCopies( 
            /* [in] */ long number) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_QuietErrorMode( 
            /* [retval][out] */ VARIANT_BOOL *bErrorMode) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_QuietErrorMode( 
            /* [in] */ VARIANT_BOOL bErrorMode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DisplayPlotPreview( 
            /* [in] */ ZcPreviewMode PreviewMode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PlotToDevice( 
            /* [optional][in] */ BSTR PlotConfigName,
            /* [retval][out] */ VARIANT_BOOL *pbRet) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PlotToFile( 
            /* [in] */ BSTR PlotFileName,
            /* [optional][in] */ BSTR PlotConfigName,
            /* [retval][out] */ VARIANT_BOOL *pbRet) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetLayoutsToPlot( 
            /* [in] */ VARIANT LayoutList) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE StartBatchMode( 
            /* [in] */ long EntryCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPlotVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPlot * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPlot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPlot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPlot * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPlot * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPlot * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPlot * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPlot * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BatchPlotProgress )( 
            IIcadPlot * This,
            /* [retval][out] */ VARIANT_BOOL *bProgressStatus);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BatchPlotProgress )( 
            IIcadPlot * This,
            /* [in] */ VARIANT_BOOL bProgressStatus);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfCopies )( 
            IIcadPlot * This,
            /* [retval][out] */ long *pNumber);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_NumberOfCopies )( 
            IIcadPlot * This,
            /* [in] */ long number);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_QuietErrorMode )( 
            IIcadPlot * This,
            /* [retval][out] */ VARIANT_BOOL *bErrorMode);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_QuietErrorMode )( 
            IIcadPlot * This,
            /* [in] */ VARIANT_BOOL bErrorMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DisplayPlotPreview )( 
            IIcadPlot * This,
            /* [in] */ ZcPreviewMode PreviewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PlotToDevice )( 
            IIcadPlot * This,
            /* [optional][in] */ BSTR PlotConfigName,
            /* [retval][out] */ VARIANT_BOOL *pbRet);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PlotToFile )( 
            IIcadPlot * This,
            /* [in] */ BSTR PlotFileName,
            /* [optional][in] */ BSTR PlotConfigName,
            /* [retval][out] */ VARIANT_BOOL *pbRet);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetLayoutsToPlot )( 
            IIcadPlot * This,
            /* [in] */ VARIANT LayoutList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *StartBatchMode )( 
            IIcadPlot * This,
            /* [in] */ long EntryCount);
        
        END_INTERFACE
    } IIcadPlotVtbl;

    interface IIcadPlot
    {
        CONST_VTBL struct IIcadPlotVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPlot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPlot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPlot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPlot_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPlot_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPlot_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPlot_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPlot_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPlot_get_BatchPlotProgress(This,bProgressStatus)	\
    ( (This)->lpVtbl -> get_BatchPlotProgress(This,bProgressStatus) ) 

#define IIcadPlot_put_BatchPlotProgress(This,bProgressStatus)	\
    ( (This)->lpVtbl -> put_BatchPlotProgress(This,bProgressStatus) ) 

#define IIcadPlot_get_NumberOfCopies(This,pNumber)	\
    ( (This)->lpVtbl -> get_NumberOfCopies(This,pNumber) ) 

#define IIcadPlot_put_NumberOfCopies(This,number)	\
    ( (This)->lpVtbl -> put_NumberOfCopies(This,number) ) 

#define IIcadPlot_get_QuietErrorMode(This,bErrorMode)	\
    ( (This)->lpVtbl -> get_QuietErrorMode(This,bErrorMode) ) 

#define IIcadPlot_put_QuietErrorMode(This,bErrorMode)	\
    ( (This)->lpVtbl -> put_QuietErrorMode(This,bErrorMode) ) 

#define IIcadPlot_DisplayPlotPreview(This,PreviewMode)	\
    ( (This)->lpVtbl -> DisplayPlotPreview(This,PreviewMode) ) 

#define IIcadPlot_PlotToDevice(This,PlotConfigName,pbRet)	\
    ( (This)->lpVtbl -> PlotToDevice(This,PlotConfigName,pbRet) ) 

#define IIcadPlot_PlotToFile(This,PlotFileName,PlotConfigName,pbRet)	\
    ( (This)->lpVtbl -> PlotToFile(This,PlotFileName,PlotConfigName,pbRet) ) 

#define IIcadPlot_SetLayoutsToPlot(This,LayoutList)	\
    ( (This)->lpVtbl -> SetLayoutsToPlot(This,LayoutList) ) 

#define IIcadPlot_StartBatchMode(This,EntryCount)	\
    ( (This)->lpVtbl -> StartBatchMode(This,EntryCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPlot_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_Icad_0000_0042 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0042_v0_0_s_ifspec;

#ifndef __IIcadTableItem_INTERFACE_DEFINED__
#define __IIcadTableItem_INTERFACE_DEFINED__

/* interface IIcadTableItem */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadTableItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9bdb716f-66d0-4a00-b7f2-d933f53561f6")
    IIcadTableItem : public IIcadDbItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadTableItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadTableItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadTableItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadTableItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadTableItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadTableItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadTableItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadTableItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadTableItem * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadTableItem * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadTableItem * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadTableItem * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadTableItem * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadTableItem * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadTableItem * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadTableItem * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadTableItem * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadTableItem * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadTableItem * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadTableItem * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadTableItem * This,
            /* [in] */ BSTR Name);
        
        END_INTERFACE
    } IIcadTableItemVtbl;

    interface IIcadTableItem
    {
        CONST_VTBL struct IIcadTableItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadTableItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadTableItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadTableItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadTableItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadTableItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadTableItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadTableItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadTableItem_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadTableItem_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadTableItem_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadTableItem_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadTableItem_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadTableItem__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadTableItem_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadTableItem_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadTableItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadTableItem_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadTableItem_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadTableItem_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadTableItem_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadTableItem_INTERFACE_DEFINED__ */


#ifndef __IIcadRegisteredApplication_INTERFACE_DEFINED__
#define __IIcadRegisteredApplication_INTERFACE_DEFINED__

/* interface IIcadRegisteredApplication */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadRegisteredApplication;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("13802931-7001-408c-bd98-9533037d73c1")
    IIcadRegisteredApplication : public IIcadTableItem
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IIcadRegisteredApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadRegisteredApplication * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadRegisteredApplication * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadRegisteredApplication * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadRegisteredApplication * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadRegisteredApplication * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadRegisteredApplication * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadRegisteredApplication * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadRegisteredApplication * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadRegisteredApplication * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadRegisteredApplication * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadRegisteredApplication * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadRegisteredApplication * This,
            /* [in] */ BSTR Name);
        
        END_INTERFACE
    } IIcadRegisteredApplicationVtbl;

    interface IIcadRegisteredApplication
    {
        CONST_VTBL struct IIcadRegisteredApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadRegisteredApplication_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadRegisteredApplication_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadRegisteredApplication_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadRegisteredApplication_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadRegisteredApplication_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadRegisteredApplication_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadRegisteredApplication_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadRegisteredApplication_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadRegisteredApplication_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadRegisteredApplication_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadRegisteredApplication_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadRegisteredApplication_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadRegisteredApplication__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadRegisteredApplication_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadRegisteredApplication_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadRegisteredApplication_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadRegisteredApplication_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadRegisteredApplication_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadRegisteredApplication_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadRegisteredApplication_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadRegisteredApplication_INTERFACE_DEFINED__ */


#ifndef __IIcadRegisteredApplications_INTERFACE_DEFINED__
#define __IIcadRegisteredApplications_INTERFACE_DEFINED__

/* interface IIcadRegisteredApplications */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadRegisteredApplications;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fee03089-af0c-4665-a40b-e10a2825a0ba")
    IIcadRegisteredApplications : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadRegisteredApplication **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadRegisteredApplication **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadRegisteredApplicationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadRegisteredApplications * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadRegisteredApplications * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadRegisteredApplications * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadRegisteredApplications * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadRegisteredApplications * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadRegisteredApplications * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadRegisteredApplications * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadRegisteredApplications * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadRegisteredApplications * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadRegisteredApplications * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadRegisteredApplications * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadRegisteredApplications * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadRegisteredApplication **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadRegisteredApplications * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadRegisteredApplication **ppItem);
        
        END_INTERFACE
    } IIcadRegisteredApplicationsVtbl;

    interface IIcadRegisteredApplications
    {
        CONST_VTBL struct IIcadRegisteredApplicationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadRegisteredApplications_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadRegisteredApplications_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadRegisteredApplications_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadRegisteredApplications_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadRegisteredApplications_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadRegisteredApplications_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadRegisteredApplications_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadRegisteredApplications_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadRegisteredApplications_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadRegisteredApplications_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadRegisteredApplications_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadRegisteredApplications_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadRegisteredApplications_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadRegisteredApplications_INTERFACE_DEFINED__ */


#ifndef __IIcadEntities_INTERFACE_DEFINED__
#define __IIcadEntities_INTERFACE_DEFINED__

/* interface IIcadEntities */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadEntities;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a1ba154c-cd5f-4dba-ba0e-7fb7c65e6df2")
    IIcadEntities : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add3DFace( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcad3DFace **pp3DFace) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add3DMesh( 
            /* [in] */ long M,
            /* [in] */ long N,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolygonMesh **ppMesh) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add3DPoly( 
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcad3DPoly **pp3DPoly) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddArc( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IIcadArc **ppArc) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            /* [in] */ double Height,
            /* [in] */ ZcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IIcadAttribute **ppAttribute) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddBox( 
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppBox) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddCircle( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcadCircle **ppCircle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddCone( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCone) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddCylinder( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCylinder) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddDim3PointAngular( 
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDim3PointAngular **ppDimension) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddDimAligned( 
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAligned **ppDimension) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddDimAngular( 
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAngular **ppDimension) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddDimDiametric( 
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ VARIANT varFarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimDiametric **ppDimension) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddDimOrdinate( 
            /* [in] */ VARIANT varDefintionPoint,
            /* [in] */ VARIANT varLeaderEndPoint,
            /* [in] */ VARIANT_BOOL UseXAxis,
            /* [retval][out] */ IIcadDimOrdinate **ppDimension) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddDimRadial( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimRadial **ppDimension) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddDimRotated( 
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varDimLineLocation,
            /* [in] */ double Rotation,
            /* [retval][out] */ IIcadDimRotated **ppDimension) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddEllipse( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varMajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IIcadEllipse **ppEllipse) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddHatch( 
            /* [in] */ ZcHatchType PatternType,
            /* [in] */ BSTR PatternName,
            /* [defaultvalue][in] */ VARIANT_BOOL Associativity,
            /* [retval][out] */ IIcadHatch **ppHatch) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddRaster( 
            /* [in] */ BSTR ImageFile,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double ScaleFactor,
            /* [defaultvalue][optional][in] */ double RotationAngle,
            /* [retval][out] */ IIcadRasterImage **ppImage) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddXline( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadXline **ppInfiniteLine) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddLeader( 
            /* [in] */ VARIANT varPoints,
            /* [optional][in] */ IIcadEntity *Annotation,
            /* [defaultvalue][optional][in] */ ZcLeaderType Type,
            /* [retval][out] */ IIcadLeader **ppLeader) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddLightWeightPolyline( 
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadLightWeightPolyline **ppLWPolyline) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddLine( 
            /* [in] */ VARIANT varStartPoint,
            /* [in] */ VARIANT varEndPoint,
            /* [retval][out] */ IIcadLine **ppLine) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddMText( 
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IIcadMText **ppMText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPointEntity( 
            /* [in] */ VARIANT varPoint,
            /* [retval][out] */ IIcadPointEntity **ppPointEntity) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPolyline( 
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolyline **ppPolyline) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPolyfaceMesh( 
            /* [in] */ VARIANT varVertices,
            /* [in] */ VARIANT ListOfFaceIndices,
            /* [retval][out] */ IIcadPolyfaceMesh **ppMesh) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddRay( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadRay **ppRay) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddSolid( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcadSolid **ppSolid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddSphere( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcad3DSolid **ppSphere) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddSpline( 
            /* [in] */ VARIANT varPoints,
            /* [in] */ VARIANT varStartTangent,
            /* [in] */ VARIANT varEndTangent,
            /* [retval][out] */ IIcadSpline **ppSpline) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddText( 
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IIcadText **ppText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddTolerance( 
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ VARIANT varDirection,
            /* [retval][out] */ IIcadTolerance **ppTolerance) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddTorus( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IIcad3DSolid **pTorus) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddTrace( 
            /* [in] */ VARIANT varPoints,
            /* [retval][out] */ IIcadTrace **ppTrace) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddWedge( 
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppWedge) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddEllipticalCone( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCone) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddEllipticalCylinder( 
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCylinder) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddExtrudedSolid( 
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddExtrudedSolidAlongPath( 
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ IIcadEntity *pPath,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolidAlongPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddRevolvedSolid( 
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ VARIANT varAxisPoint,
            /* [in] */ VARIANT varDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IIcad3DSolid **ppRevolvedSolid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AttachExternalReference( 
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOverlay,
            /* [retval][out] */ IIcadExternalReference **ppXRef) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InsertBlock( 
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR BlockName,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadBlockReference **ppBlockInsert) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddShape( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double Height,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadShape **ppShape) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddRegion( 
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddMLine( 
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadMLine **ppMLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadEntitiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadEntities * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadEntities * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadEntities * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadEntities * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadEntities * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadEntities * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadEntities * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadEntities * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadEntities * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadEntities * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadEntities * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadEntities * This,
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcad3DFace **pp3DFace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IIcadEntities * This,
            /* [in] */ long M,
            /* [in] */ long N,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolygonMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcad3DPoly **pp3DPoly);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IIcadArc **ppArc);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IIcadEntities * This,
            /* [in] */ double Height,
            /* [in] */ ZcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IIcadAttribute **ppAttribute);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppBox);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcadCircle **ppCircle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDim3PointAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAligned **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ VARIANT varFarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimDiametric **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varDefintionPoint,
            /* [in] */ VARIANT varLeaderEndPoint,
            /* [in] */ VARIANT_BOOL UseXAxis,
            /* [retval][out] */ IIcadDimOrdinate **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimRadial **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varDimLineLocation,
            /* [in] */ double Rotation,
            /* [retval][out] */ IIcadDimRotated **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varMajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IIcadEllipse **ppEllipse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IIcadEntities * This,
            /* [in] */ ZcHatchType PatternType,
            /* [in] */ BSTR PatternName,
            /* [defaultvalue][in] */ VARIANT_BOOL Associativity,
            /* [retval][out] */ IIcadHatch **ppHatch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IIcadEntities * This,
            /* [in] */ BSTR ImageFile,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double ScaleFactor,
            /* [defaultvalue][optional][in] */ double RotationAngle,
            /* [retval][out] */ IIcadRasterImage **ppImage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadXline **ppInfiniteLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoints,
            /* [optional][in] */ IIcadEntity *Annotation,
            /* [defaultvalue][optional][in] */ ZcLeaderType Type,
            /* [retval][out] */ IIcadLeader **ppLeader);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadLightWeightPolyline **ppLWPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varStartPoint,
            /* [in] */ VARIANT varEndPoint,
            /* [retval][out] */ IIcadLine **ppLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IIcadMText **ppMText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPointEntity )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoint,
            /* [retval][out] */ IIcadPointEntity **ppPointEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolyline **ppPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varVertices,
            /* [in] */ VARIANT ListOfFaceIndices,
            /* [retval][out] */ IIcadPolyfaceMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadRay **ppRay);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcadSolid **ppSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcad3DSolid **ppSphere);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoints,
            /* [in] */ VARIANT varStartTangent,
            /* [in] */ VARIANT varEndTangent,
            /* [retval][out] */ IIcadSpline **ppSpline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IIcadEntities * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IIcadText **ppText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IIcadEntities * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ VARIANT varDirection,
            /* [retval][out] */ IIcadTolerance **ppTolerance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IIcad3DSolid **pTorus);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varPoints,
            /* [retval][out] */ IIcadTrace **ppTrace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppWedge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IIcadEntities * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IIcadEntities * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ IIcadEntity *pPath,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolidAlongPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IIcadEntities * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ VARIANT varAxisPoint,
            /* [in] */ VARIANT varDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IIcad3DSolid **ppRevolvedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IIcadEntities * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOverlay,
            /* [retval][out] */ IIcadExternalReference **ppXRef);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR BlockName,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadBlockReference **ppBlockInsert);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IIcadEntities * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double Height,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadShape **ppShape);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IIcadEntities * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IIcadEntities * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadMLine **ppMLine);
        
        END_INTERFACE
    } IIcadEntitiesVtbl;

    interface IIcadEntities
    {
        CONST_VTBL struct IIcadEntitiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadEntities_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadEntities_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadEntities_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadEntities_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadEntities_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadEntities_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadEntities_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadEntities_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadEntities_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadEntities_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadEntities_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadEntities_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadEntities_Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace)	\
    ( (This)->lpVtbl -> Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace) ) 

#define IIcadEntities_Add3DMesh(This,M,N,varVertices,ppMesh)	\
    ( (This)->lpVtbl -> Add3DMesh(This,M,N,varVertices,ppMesh) ) 

#define IIcadEntities_Add3DPoly(This,varVertices,pp3DPoly)	\
    ( (This)->lpVtbl -> Add3DPoly(This,varVertices,pp3DPoly) ) 

#define IIcadEntities_AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc)	\
    ( (This)->lpVtbl -> AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc) ) 

#define IIcadEntities_AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute) ) 

#define IIcadEntities_AddBox(This,varOrigin,Length,Width,Height,ppBox)	\
    ( (This)->lpVtbl -> AddBox(This,varOrigin,Length,Width,Height,ppBox) ) 

#define IIcadEntities_AddCircle(This,varCenter,Radius,ppCircle)	\
    ( (This)->lpVtbl -> AddCircle(This,varCenter,Radius,ppCircle) ) 

#define IIcadEntities_AddCone(This,varCenter,BaseRadius,Height,ppCone)	\
    ( (This)->lpVtbl -> AddCone(This,varCenter,BaseRadius,Height,ppCone) ) 

#define IIcadEntities_AddCylinder(This,varCenter,Radius,Height,ppCylinder)	\
    ( (This)->lpVtbl -> AddCylinder(This,varCenter,Radius,Height,ppCylinder) ) 

#define IIcadEntities_AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadEntities_AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension) ) 

#define IIcadEntities_AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadEntities_AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension) ) 

#define IIcadEntities_AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension)	\
    ( (This)->lpVtbl -> AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension) ) 

#define IIcadEntities_AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension) ) 

#define IIcadEntities_AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension) ) 

#define IIcadEntities_AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse)	\
    ( (This)->lpVtbl -> AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse) ) 

#define IIcadEntities_AddHatch(This,PatternType,PatternName,Associativity,ppHatch)	\
    ( (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,ppHatch) ) 

#define IIcadEntities_AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage)	\
    ( (This)->lpVtbl -> AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage) ) 

#define IIcadEntities_AddXline(This,varPoint1,varPoint2,ppInfiniteLine)	\
    ( (This)->lpVtbl -> AddXline(This,varPoint1,varPoint2,ppInfiniteLine) ) 

#define IIcadEntities_AddLeader(This,varPoints,Annotation,Type,ppLeader)	\
    ( (This)->lpVtbl -> AddLeader(This,varPoints,Annotation,Type,ppLeader) ) 

#define IIcadEntities_AddLightWeightPolyline(This,varVertices,ppLWPolyline)	\
    ( (This)->lpVtbl -> AddLightWeightPolyline(This,varVertices,ppLWPolyline) ) 

#define IIcadEntities_AddLine(This,varStartPoint,varEndPoint,ppLine)	\
    ( (This)->lpVtbl -> AddLine(This,varStartPoint,varEndPoint,ppLine) ) 

#define IIcadEntities_AddMText(This,varInsertionPoint,Width,Text,ppMText)	\
    ( (This)->lpVtbl -> AddMText(This,varInsertionPoint,Width,Text,ppMText) ) 

#define IIcadEntities_AddPointEntity(This,varPoint,ppPointEntity)	\
    ( (This)->lpVtbl -> AddPointEntity(This,varPoint,ppPointEntity) ) 

#define IIcadEntities_AddPolyline(This,varVertices,ppPolyline)	\
    ( (This)->lpVtbl -> AddPolyline(This,varVertices,ppPolyline) ) 

#define IIcadEntities_AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh)	\
    ( (This)->lpVtbl -> AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh) ) 

#define IIcadEntities_AddRay(This,varPoint1,varPoint2,ppRay)	\
    ( (This)->lpVtbl -> AddRay(This,varPoint1,varPoint2,ppRay) ) 

#define IIcadEntities_AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid)	\
    ( (This)->lpVtbl -> AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid) ) 

#define IIcadEntities_AddSphere(This,varCenter,Radius,ppSphere)	\
    ( (This)->lpVtbl -> AddSphere(This,varCenter,Radius,ppSphere) ) 

#define IIcadEntities_AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline)	\
    ( (This)->lpVtbl -> AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline) ) 

#define IIcadEntities_AddText(This,TextString,varInsertionPoint,Height,ppText)	\
    ( (This)->lpVtbl -> AddText(This,TextString,varInsertionPoint,Height,ppText) ) 

#define IIcadEntities_AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance)	\
    ( (This)->lpVtbl -> AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance) ) 

#define IIcadEntities_AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus)	\
    ( (This)->lpVtbl -> AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus) ) 

#define IIcadEntities_AddTrace(This,varPoints,ppTrace)	\
    ( (This)->lpVtbl -> AddTrace(This,varPoints,ppTrace) ) 

#define IIcadEntities_AddWedge(This,varOrigin,Length,Width,Height,ppWedge)	\
    ( (This)->lpVtbl -> AddWedge(This,varOrigin,Length,Width,Height,ppWedge) ) 

#define IIcadEntities_AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone)	\
    ( (This)->lpVtbl -> AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone) ) 

#define IIcadEntities_AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder)	\
    ( (This)->lpVtbl -> AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder) ) 

#define IIcadEntities_AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid)	\
    ( (This)->lpVtbl -> AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid) ) 

#define IIcadEntities_AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath)	\
    ( (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath) ) 

#define IIcadEntities_AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid)	\
    ( (This)->lpVtbl -> AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid) ) 

#define IIcadEntities_AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef)	\
    ( (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef) ) 

#define IIcadEntities_InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert)	\
    ( (This)->lpVtbl -> InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert) ) 

#define IIcadEntities_AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape)	\
    ( (This)->lpVtbl -> AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape) ) 

#define IIcadEntities_AddRegion(This,ObjectList,pRegions)	\
    ( (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions) ) 

#define IIcadEntities_AddMLine(This,varVertices,ppMLine)	\
    ( (This)->lpVtbl -> AddMLine(This,varVertices,ppMLine) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadEntities_INTERFACE_DEFINED__ */


#ifndef __IIcadBlock_INTERFACE_DEFINED__
#define __IIcadBlock_INTERFACE_DEFINED__

/* interface IIcadBlock */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadBlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("dc50406a-2f1e-443f-926f-cd89b99a0d20")
    IIcadBlock : public IIcadEntities
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Origin( 
            /* [retval][out] */ VARIANT *pVarOrigin) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Origin( 
            /* [in] */ VARIANT varOrigin) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsXRef( 
            /* [retval][out] */ VARIANT_BOOL *IsXRef) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Handle( 
            /* [retval][out] */ BSTR *pstrHandle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsLayout( 
            /* [retval][out] */ VARIANT_BOOL *pIsLayout) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [retval][out] */ BSTR *pbstrComments) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Comments( 
            /* [in] */ BSTR bstrComments) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Layout( 
            /* [retval][out] */ IIcadLayout **ppLayout) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddItems( 
            /* [in] */ IIcadSelectionSet *Entities,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL DeleteOriginals = TRUE) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetXData( 
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetXData( 
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Bind( 
            /* [in] */ VARIANT_BOOL bPrefixName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Unload( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Reload( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE WBlock( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE _handitem( 
            /* [retval][out] */ long *pHanditem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadBlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadBlock * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadBlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadBlock * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadBlock * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadBlock * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadBlock * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadBlock * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadBlock * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadBlock * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadBlock * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadBlock * This,
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcad3DFace **pp3DFace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IIcadBlock * This,
            /* [in] */ long M,
            /* [in] */ long N,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolygonMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcad3DPoly **pp3DPoly);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IIcadArc **ppArc);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IIcadBlock * This,
            /* [in] */ double Height,
            /* [in] */ ZcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IIcadAttribute **ppAttribute);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppBox);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcadCircle **ppCircle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDim3PointAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAligned **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ VARIANT varFarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimDiametric **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varDefintionPoint,
            /* [in] */ VARIANT varLeaderEndPoint,
            /* [in] */ VARIANT_BOOL UseXAxis,
            /* [retval][out] */ IIcadDimOrdinate **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimRadial **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varDimLineLocation,
            /* [in] */ double Rotation,
            /* [retval][out] */ IIcadDimRotated **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varMajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IIcadEllipse **ppEllipse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IIcadBlock * This,
            /* [in] */ ZcHatchType PatternType,
            /* [in] */ BSTR PatternName,
            /* [defaultvalue][in] */ VARIANT_BOOL Associativity,
            /* [retval][out] */ IIcadHatch **ppHatch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IIcadBlock * This,
            /* [in] */ BSTR ImageFile,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double ScaleFactor,
            /* [defaultvalue][optional][in] */ double RotationAngle,
            /* [retval][out] */ IIcadRasterImage **ppImage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadXline **ppInfiniteLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoints,
            /* [optional][in] */ IIcadEntity *Annotation,
            /* [defaultvalue][optional][in] */ ZcLeaderType Type,
            /* [retval][out] */ IIcadLeader **ppLeader);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadLightWeightPolyline **ppLWPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varStartPoint,
            /* [in] */ VARIANT varEndPoint,
            /* [retval][out] */ IIcadLine **ppLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IIcadMText **ppMText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPointEntity )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoint,
            /* [retval][out] */ IIcadPointEntity **ppPointEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolyline **ppPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varVertices,
            /* [in] */ VARIANT ListOfFaceIndices,
            /* [retval][out] */ IIcadPolyfaceMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadRay **ppRay);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcadSolid **ppSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcad3DSolid **ppSphere);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoints,
            /* [in] */ VARIANT varStartTangent,
            /* [in] */ VARIANT varEndTangent,
            /* [retval][out] */ IIcadSpline **ppSpline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IIcadBlock * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IIcadText **ppText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IIcadBlock * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ VARIANT varDirection,
            /* [retval][out] */ IIcadTolerance **ppTolerance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IIcad3DSolid **pTorus);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varPoints,
            /* [retval][out] */ IIcadTrace **ppTrace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppWedge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IIcadBlock * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IIcadBlock * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ IIcadEntity *pPath,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolidAlongPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IIcadBlock * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ VARIANT varAxisPoint,
            /* [in] */ VARIANT varDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IIcad3DSolid **ppRevolvedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IIcadBlock * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOverlay,
            /* [retval][out] */ IIcadExternalReference **ppXRef);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR BlockName,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadBlockReference **ppBlockInsert);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IIcadBlock * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double Height,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadShape **ppShape);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IIcadBlock * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadMLine **ppMLine);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IIcadBlock * This,
            /* [retval][out] */ VARIANT *pVarOrigin);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IIcadBlock * This,
            /* [in] */ VARIANT varOrigin);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadBlock * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadBlock * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsXRef )( 
            IIcadBlock * This,
            /* [retval][out] */ VARIANT_BOOL *IsXRef);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadBlock * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadBlock * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLayout )( 
            IIcadBlock * This,
            /* [retval][out] */ VARIANT_BOOL *pIsLayout);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            IIcadBlock * This,
            /* [retval][out] */ BSTR *pbstrComments);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Comments )( 
            IIcadBlock * This,
            /* [in] */ BSTR bstrComments);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IIcadBlock * This,
            /* [retval][out] */ IIcadLayout **ppLayout);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddItems )( 
            IIcadBlock * This,
            /* [in] */ IIcadSelectionSet *Entities,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL DeleteOriginals);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadBlock * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadBlock * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadBlock * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Bind )( 
            IIcadBlock * This,
            /* [in] */ VARIANT_BOOL bPrefixName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IIcadBlock * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Unload )( 
            IIcadBlock * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Reload )( 
            IIcadBlock * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *WBlock )( 
            IIcadBlock * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadBlock * This,
            /* [retval][out] */ long *pHanditem);
        
        END_INTERFACE
    } IIcadBlockVtbl;

    interface IIcadBlock
    {
        CONST_VTBL struct IIcadBlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadBlock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadBlock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadBlock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadBlock_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadBlock_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadBlock_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadBlock_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadBlock_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadBlock_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadBlock_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadBlock_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadBlock_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadBlock_Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace)	\
    ( (This)->lpVtbl -> Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace) ) 

#define IIcadBlock_Add3DMesh(This,M,N,varVertices,ppMesh)	\
    ( (This)->lpVtbl -> Add3DMesh(This,M,N,varVertices,ppMesh) ) 

#define IIcadBlock_Add3DPoly(This,varVertices,pp3DPoly)	\
    ( (This)->lpVtbl -> Add3DPoly(This,varVertices,pp3DPoly) ) 

#define IIcadBlock_AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc)	\
    ( (This)->lpVtbl -> AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc) ) 

#define IIcadBlock_AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute) ) 

#define IIcadBlock_AddBox(This,varOrigin,Length,Width,Height,ppBox)	\
    ( (This)->lpVtbl -> AddBox(This,varOrigin,Length,Width,Height,ppBox) ) 

#define IIcadBlock_AddCircle(This,varCenter,Radius,ppCircle)	\
    ( (This)->lpVtbl -> AddCircle(This,varCenter,Radius,ppCircle) ) 

#define IIcadBlock_AddCone(This,varCenter,BaseRadius,Height,ppCone)	\
    ( (This)->lpVtbl -> AddCone(This,varCenter,BaseRadius,Height,ppCone) ) 

#define IIcadBlock_AddCylinder(This,varCenter,Radius,Height,ppCylinder)	\
    ( (This)->lpVtbl -> AddCylinder(This,varCenter,Radius,Height,ppCylinder) ) 

#define IIcadBlock_AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadBlock_AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension) ) 

#define IIcadBlock_AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadBlock_AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension) ) 

#define IIcadBlock_AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension)	\
    ( (This)->lpVtbl -> AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension) ) 

#define IIcadBlock_AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension) ) 

#define IIcadBlock_AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension) ) 

#define IIcadBlock_AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse)	\
    ( (This)->lpVtbl -> AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse) ) 

#define IIcadBlock_AddHatch(This,PatternType,PatternName,Associativity,ppHatch)	\
    ( (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,ppHatch) ) 

#define IIcadBlock_AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage)	\
    ( (This)->lpVtbl -> AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage) ) 

#define IIcadBlock_AddXline(This,varPoint1,varPoint2,ppInfiniteLine)	\
    ( (This)->lpVtbl -> AddXline(This,varPoint1,varPoint2,ppInfiniteLine) ) 

#define IIcadBlock_AddLeader(This,varPoints,Annotation,Type,ppLeader)	\
    ( (This)->lpVtbl -> AddLeader(This,varPoints,Annotation,Type,ppLeader) ) 

#define IIcadBlock_AddLightWeightPolyline(This,varVertices,ppLWPolyline)	\
    ( (This)->lpVtbl -> AddLightWeightPolyline(This,varVertices,ppLWPolyline) ) 

#define IIcadBlock_AddLine(This,varStartPoint,varEndPoint,ppLine)	\
    ( (This)->lpVtbl -> AddLine(This,varStartPoint,varEndPoint,ppLine) ) 

#define IIcadBlock_AddMText(This,varInsertionPoint,Width,Text,ppMText)	\
    ( (This)->lpVtbl -> AddMText(This,varInsertionPoint,Width,Text,ppMText) ) 

#define IIcadBlock_AddPointEntity(This,varPoint,ppPointEntity)	\
    ( (This)->lpVtbl -> AddPointEntity(This,varPoint,ppPointEntity) ) 

#define IIcadBlock_AddPolyline(This,varVertices,ppPolyline)	\
    ( (This)->lpVtbl -> AddPolyline(This,varVertices,ppPolyline) ) 

#define IIcadBlock_AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh)	\
    ( (This)->lpVtbl -> AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh) ) 

#define IIcadBlock_AddRay(This,varPoint1,varPoint2,ppRay)	\
    ( (This)->lpVtbl -> AddRay(This,varPoint1,varPoint2,ppRay) ) 

#define IIcadBlock_AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid)	\
    ( (This)->lpVtbl -> AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid) ) 

#define IIcadBlock_AddSphere(This,varCenter,Radius,ppSphere)	\
    ( (This)->lpVtbl -> AddSphere(This,varCenter,Radius,ppSphere) ) 

#define IIcadBlock_AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline)	\
    ( (This)->lpVtbl -> AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline) ) 

#define IIcadBlock_AddText(This,TextString,varInsertionPoint,Height,ppText)	\
    ( (This)->lpVtbl -> AddText(This,TextString,varInsertionPoint,Height,ppText) ) 

#define IIcadBlock_AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance)	\
    ( (This)->lpVtbl -> AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance) ) 

#define IIcadBlock_AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus)	\
    ( (This)->lpVtbl -> AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus) ) 

#define IIcadBlock_AddTrace(This,varPoints,ppTrace)	\
    ( (This)->lpVtbl -> AddTrace(This,varPoints,ppTrace) ) 

#define IIcadBlock_AddWedge(This,varOrigin,Length,Width,Height,ppWedge)	\
    ( (This)->lpVtbl -> AddWedge(This,varOrigin,Length,Width,Height,ppWedge) ) 

#define IIcadBlock_AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone)	\
    ( (This)->lpVtbl -> AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone) ) 

#define IIcadBlock_AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder)	\
    ( (This)->lpVtbl -> AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder) ) 

#define IIcadBlock_AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid)	\
    ( (This)->lpVtbl -> AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid) ) 

#define IIcadBlock_AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath)	\
    ( (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath) ) 

#define IIcadBlock_AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid)	\
    ( (This)->lpVtbl -> AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid) ) 

#define IIcadBlock_AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef)	\
    ( (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef) ) 

#define IIcadBlock_InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert)	\
    ( (This)->lpVtbl -> InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert) ) 

#define IIcadBlock_AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape)	\
    ( (This)->lpVtbl -> AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape) ) 

#define IIcadBlock_AddRegion(This,ObjectList,pRegions)	\
    ( (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions) ) 

#define IIcadBlock_AddMLine(This,varVertices,ppMLine)	\
    ( (This)->lpVtbl -> AddMLine(This,varVertices,ppMLine) ) 


#define IIcadBlock_get_Origin(This,pVarOrigin)	\
    ( (This)->lpVtbl -> get_Origin(This,pVarOrigin) ) 

#define IIcadBlock_put_Origin(This,varOrigin)	\
    ( (This)->lpVtbl -> put_Origin(This,varOrigin) ) 

#define IIcadBlock_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadBlock_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define IIcadBlock_get_IsXRef(This,IsXRef)	\
    ( (This)->lpVtbl -> get_IsXRef(This,IsXRef) ) 

#define IIcadBlock_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadBlock_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadBlock_get_IsLayout(This,pIsLayout)	\
    ( (This)->lpVtbl -> get_IsLayout(This,pIsLayout) ) 

#define IIcadBlock_get_Comments(This,pbstrComments)	\
    ( (This)->lpVtbl -> get_Comments(This,pbstrComments) ) 

#define IIcadBlock_put_Comments(This,bstrComments)	\
    ( (This)->lpVtbl -> put_Comments(This,bstrComments) ) 

#define IIcadBlock_get_Layout(This,ppLayout)	\
    ( (This)->lpVtbl -> get_Layout(This,ppLayout) ) 

#define IIcadBlock_AddItems(This,Entities,DeleteOriginals)	\
    ( (This)->lpVtbl -> AddItems(This,Entities,DeleteOriginals) ) 

#define IIcadBlock_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadBlock_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadBlock_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadBlock_Bind(This,bPrefixName)	\
    ( (This)->lpVtbl -> Bind(This,bPrefixName) ) 

#define IIcadBlock_Detach(This)	\
    ( (This)->lpVtbl -> Detach(This) ) 

#define IIcadBlock_Unload(This)	\
    ( (This)->lpVtbl -> Unload(This) ) 

#define IIcadBlock_Reload(This)	\
    ( (This)->lpVtbl -> Reload(This) ) 

#define IIcadBlock_WBlock(This,FileName)	\
    ( (This)->lpVtbl -> WBlock(This,FileName) ) 

#define IIcadBlock__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadBlock_INTERFACE_DEFINED__ */


#ifndef __IIcadBlocks_INTERFACE_DEFINED__
#define __IIcadBlocks_INTERFACE_DEFINED__

/* interface IIcadBlocks */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadBlocks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fbc58968-5a40-423d-8eed-f3b8e68b3ef8")
    IIcadBlocks : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadBlock **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadBlock **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadBlocksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadBlocks * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadBlocks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadBlocks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadBlocks * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadBlocks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadBlocks * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadBlocks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadBlocks * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadBlocks * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadBlocks * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadBlocks * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadBlocks * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadBlocks * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadBlock **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadBlocks * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadBlock **ppItem);
        
        END_INTERFACE
    } IIcadBlocksVtbl;

    interface IIcadBlocks
    {
        CONST_VTBL struct IIcadBlocksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadBlocks_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadBlocks_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadBlocks_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadBlocks_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadBlocks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadBlocks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadBlocks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadBlocks_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadBlocks_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadBlocks_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadBlocks_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadBlocks_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadBlocks_Add(This,varInsertionPoint,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,varInsertionPoint,Name,ppItem) ) 

#define IIcadBlocks_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadBlocks_INTERFACE_DEFINED__ */


#ifndef __IIcadDimensionStyle_INTERFACE_DEFINED__
#define __IIcadDimensionStyle_INTERFACE_DEFINED__

/* interface IIcadDimensionStyle */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimensionStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("26c2db96-e055-4841-aeb2-2b8e17ba9d27")
    IIcadDimensionStyle : public IIcadTableItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimPost( 
            /* [retval][out] */ BSTR *pDimPost) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimPost( 
            /* [in] */ BSTR DimPost) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimApost( 
            /* [retval][out] */ BSTR *pDimApost) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimApost( 
            /* [in] */ BSTR DimApost) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimBlk( 
            /* [retval][out] */ BSTR *pDimBlk) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimBlk( 
            /* [in] */ BSTR DimBlk) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimBlk1( 
            /* [retval][out] */ BSTR *pDimBlk1) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimBlk1( 
            /* [in] */ BSTR DimBlk1) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimBlk2( 
            /* [retval][out] */ BSTR *pDimBlk2) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimBlk2( 
            /* [in] */ BSTR DimBlk2) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimScale( 
            /* [retval][out] */ double *pDimScale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimScale( 
            /* [in] */ double DimScale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAsz( 
            /* [retval][out] */ double *pDimAsz) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAsz( 
            /* [in] */ double DimAsz) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimExo( 
            /* [retval][out] */ double *pDimExo) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimExo( 
            /* [in] */ double DimExo) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimDli( 
            /* [retval][out] */ double *pDimDli) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimDli( 
            /* [in] */ double DimDli) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimExe( 
            /* [retval][out] */ double *pDimExe) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimExe( 
            /* [in] */ double DimExe) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimRnd( 
            /* [retval][out] */ double *pDimRnd) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimRnd( 
            /* [in] */ double DimRnd) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimDle( 
            /* [retval][out] */ double *pDimDle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimDle( 
            /* [in] */ double DimDle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTp( 
            /* [retval][out] */ double *pDimTp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTp( 
            /* [in] */ double DimTp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTm( 
            /* [retval][out] */ double *pDimTm) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTm( 
            /* [in] */ double DimTm) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTol( 
            /* [retval][out] */ int *pDimTol) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTol( 
            /* [in] */ int DimTol) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLim( 
            /* [retval][out] */ int *pDimLim) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLim( 
            /* [in] */ int DimLim) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTih( 
            /* [retval][out] */ int *pDimTih) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTih( 
            /* [in] */ int DimTih) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimToh( 
            /* [retval][out] */ int *pDimToh) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimToh( 
            /* [in] */ int DimToh) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimSe1( 
            /* [retval][out] */ int *pDimSe1) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimSe1( 
            /* [in] */ int DimSe1) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimSe2( 
            /* [retval][out] */ int *pDimSe2) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimSe2( 
            /* [in] */ int DimSe2) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTad( 
            /* [retval][out] */ int *pDimTad) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTad( 
            /* [in] */ int DimTad) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimZin( 
            /* [retval][out] */ int *pDimZin) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimZin( 
            /* [in] */ int DimZin) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTxt( 
            /* [retval][out] */ double *pDimTxt) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTxt( 
            /* [in] */ double DimTxt) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimCen( 
            /* [retval][out] */ double *pDimCen) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimCen( 
            /* [in] */ double DimCen) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTsz( 
            /* [retval][out] */ double *pDimTsz) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTsz( 
            /* [in] */ double DimTsz) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAltf( 
            /* [retval][out] */ double *pDimAltf) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAltf( 
            /* [in] */ double DimAltf) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLfac( 
            /* [retval][out] */ double *pDimLfac) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLfac( 
            /* [in] */ double DimLfac) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTvp( 
            /* [retval][out] */ double *pDimTvp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTvp( 
            /* [in] */ double DimTvp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTfac( 
            /* [retval][out] */ double *pDimTfac) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTfac( 
            /* [in] */ double DimTfac) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimGap( 
            /* [retval][out] */ double *pDimGap) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimGap( 
            /* [in] */ double DimGap) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAlt( 
            /* [retval][out] */ int *pDimAlt) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAlt( 
            /* [in] */ int DimAlt) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAltd( 
            /* [retval][out] */ int *pDimAltd) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAltd( 
            /* [in] */ int DimAltd) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTofl( 
            /* [retval][out] */ int *pDimTofl) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTofl( 
            /* [in] */ int DimTofl) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimSah( 
            /* [retval][out] */ int *pDimSah) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimSah( 
            /* [in] */ int DimSah) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTix( 
            /* [retval][out] */ int *pDimTix) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTix( 
            /* [in] */ int DimTix) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimSohd( 
            /* [retval][out] */ int *pDimSohd) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimSohd( 
            /* [in] */ int DimSohd) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimClrd( 
            /* [retval][out] */ int *pDimClrd) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimClrd( 
            /* [in] */ int DimClrd) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimClre( 
            /* [retval][out] */ int *pDimClre) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimClre( 
            /* [in] */ int DimClre) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimClrt( 
            /* [retval][out] */ int *pDimClrt) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimClrt( 
            /* [in] */ int DimClrt) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimUnit( 
            /* [retval][out] */ int *pDimUnit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimUnit( 
            /* [in] */ int DimUnit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimDec( 
            /* [retval][out] */ int *pDimDec) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimDec( 
            /* [in] */ int DimDec) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTdec( 
            /* [retval][out] */ int *pDimTdec) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTdec( 
            /* [in] */ int DimTdec) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAltu( 
            /* [retval][out] */ int *pDimAltu) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAltu( 
            /* [in] */ int DimAltu) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAlttd( 
            /* [retval][out] */ int *pDimAlttd) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAlttd( 
            /* [in] */ int DimAlttd) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAunit( 
            /* [retval][out] */ int *pDimAunit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAunit( 
            /* [in] */ int DimAunit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimJust( 
            /* [retval][out] */ int *pDimJust) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimJust( 
            /* [in] */ int DimJust) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimSd1( 
            /* [retval][out] */ int *pDimSd1) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimSd1( 
            /* [in] */ int DimSd1) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimSd2( 
            /* [retval][out] */ int *pDimSd2) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimSd2( 
            /* [in] */ int DimSd2) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTolj( 
            /* [retval][out] */ int *pDimTolj) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTolj( 
            /* [in] */ int DimTolj) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTzin( 
            /* [retval][out] */ int *pDimTzin) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTzin( 
            /* [in] */ int DimTzin) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAltz( 
            /* [retval][out] */ int *pDimAltz) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAltz( 
            /* [in] */ int DimAltz) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimAlttz( 
            /* [retval][out] */ int *pDimAlttz) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimAlttz( 
            /* [in] */ int DimAlttz) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimFit( 
            /* [retval][out] */ int *pDimFit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimFit( 
            /* [in] */ int DimFit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimUpt( 
            /* [retval][out] */ int *pDimUpt) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimUpt( 
            /* [in] */ int DimUpt) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimTxSty( 
            /* [retval][out] */ BSTR *pDimTxSty) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimTxSty( 
            /* [in] */ BSTR DimTxSty) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLwd( 
            /* [retval][out] */ int *pDimLwd) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLwd( 
            /* [in] */ int intDimLwd) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLwe( 
            /* [retval][out] */ int *pDimLwe) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLwe( 
            /* [in] */ int intDimLwe) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimensionStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimensionStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimensionStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimensionStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimensionStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimensionStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimensionStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimensionStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimensionStyle * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimensionStyle * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimPost )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pDimPost);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimPost )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR DimPost);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimApost )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pDimApost);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimApost )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR DimApost);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimBlk )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pDimBlk);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimBlk )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR DimBlk);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimBlk1 )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pDimBlk1);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimBlk1 )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR DimBlk1);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimBlk2 )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pDimBlk2);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimBlk2 )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR DimBlk2);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimScale )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimScale )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAsz )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimAsz);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAsz )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimAsz);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimExo )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimExo);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimExo )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimExo);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimDli )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimDli);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimDli )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimDli);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimExe )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimExe);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimExe )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimExe);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimRnd )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimRnd);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimRnd )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimRnd);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimDle )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimDle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimDle )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimDle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTp )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimTp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTp )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimTp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTm )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimTm);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTm )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimTm);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTol )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTol);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTol )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTol);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLim )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimLim);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLim )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimLim);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTih )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTih);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTih )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTih);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimToh )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimToh);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimToh )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimToh);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimSe1 )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimSe1);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimSe1 )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimSe1);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimSe2 )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimSe2);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimSe2 )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimSe2);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTad )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTad);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTad )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTad);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimZin )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimZin);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimZin )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimZin);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTxt )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimTxt);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTxt )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimTxt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimCen )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimCen);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimCen )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimCen);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTsz )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimTsz);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTsz )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimTsz);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAltf )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimAltf);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAltf )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimAltf);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLfac )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimLfac);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLfac )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimLfac);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTvp )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimTvp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTvp )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimTvp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTfac )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimTfac);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTfac )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimTfac);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimGap )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ double *pDimGap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimGap )( 
            IIcadDimensionStyle * This,
            /* [in] */ double DimGap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAlt )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimAlt);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAlt )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimAlt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAltd )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimAltd);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAltd )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimAltd);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTofl )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTofl);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTofl )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTofl);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimSah )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimSah);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimSah )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimSah);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTix )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTix);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTix )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTix);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimSohd )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimSohd);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimSohd )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimSohd);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimClrd )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimClrd);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimClrd )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimClrd);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimClre )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimClre);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimClre )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimClre);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimClrt )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimClrt);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimClrt )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimClrt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimUnit )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimUnit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimUnit )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimUnit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimDec )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimDec);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimDec )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimDec);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTdec )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTdec);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTdec )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTdec);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAltu )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimAltu);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAltu )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimAltu);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAlttd )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimAlttd);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAlttd )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimAlttd);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAunit )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimAunit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAunit )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimAunit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimJust )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimJust);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimJust )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimJust);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimSd1 )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimSd1);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimSd1 )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimSd1);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimSd2 )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimSd2);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimSd2 )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimSd2);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTolj )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTolj);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTolj )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTolj);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTzin )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimTzin);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTzin )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimTzin);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAltz )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimAltz);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAltz )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimAltz);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimAlttz )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimAlttz);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimAlttz )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimAlttz);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimFit )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimFit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimFit )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimFit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimUpt )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimUpt);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimUpt )( 
            IIcadDimensionStyle * This,
            /* [in] */ int DimUpt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimTxSty )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ BSTR *pDimTxSty);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimTxSty )( 
            IIcadDimensionStyle * This,
            /* [in] */ BSTR DimTxSty);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLwd )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimLwd);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLwd )( 
            IIcadDimensionStyle * This,
            /* [in] */ int intDimLwd);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLwe )( 
            IIcadDimensionStyle * This,
            /* [retval][out] */ int *pDimLwe);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLwe )( 
            IIcadDimensionStyle * This,
            /* [in] */ int intDimLwe);
        
        END_INTERFACE
    } IIcadDimensionStyleVtbl;

    interface IIcadDimensionStyle
    {
        CONST_VTBL struct IIcadDimensionStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimensionStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimensionStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimensionStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimensionStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimensionStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimensionStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimensionStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimensionStyle_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimensionStyle_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimensionStyle_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimensionStyle_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimensionStyle_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimensionStyle__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimensionStyle_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimensionStyle_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimensionStyle_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimensionStyle_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimensionStyle_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimensionStyle_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadDimensionStyle_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#define IIcadDimensionStyle_get_DimPost(This,pDimPost)	\
    ( (This)->lpVtbl -> get_DimPost(This,pDimPost) ) 

#define IIcadDimensionStyle_put_DimPost(This,DimPost)	\
    ( (This)->lpVtbl -> put_DimPost(This,DimPost) ) 

#define IIcadDimensionStyle_get_DimApost(This,pDimApost)	\
    ( (This)->lpVtbl -> get_DimApost(This,pDimApost) ) 

#define IIcadDimensionStyle_put_DimApost(This,DimApost)	\
    ( (This)->lpVtbl -> put_DimApost(This,DimApost) ) 

#define IIcadDimensionStyle_get_DimBlk(This,pDimBlk)	\
    ( (This)->lpVtbl -> get_DimBlk(This,pDimBlk) ) 

#define IIcadDimensionStyle_put_DimBlk(This,DimBlk)	\
    ( (This)->lpVtbl -> put_DimBlk(This,DimBlk) ) 

#define IIcadDimensionStyle_get_DimBlk1(This,pDimBlk1)	\
    ( (This)->lpVtbl -> get_DimBlk1(This,pDimBlk1) ) 

#define IIcadDimensionStyle_put_DimBlk1(This,DimBlk1)	\
    ( (This)->lpVtbl -> put_DimBlk1(This,DimBlk1) ) 

#define IIcadDimensionStyle_get_DimBlk2(This,pDimBlk2)	\
    ( (This)->lpVtbl -> get_DimBlk2(This,pDimBlk2) ) 

#define IIcadDimensionStyle_put_DimBlk2(This,DimBlk2)	\
    ( (This)->lpVtbl -> put_DimBlk2(This,DimBlk2) ) 

#define IIcadDimensionStyle_get_DimScale(This,pDimScale)	\
    ( (This)->lpVtbl -> get_DimScale(This,pDimScale) ) 

#define IIcadDimensionStyle_put_DimScale(This,DimScale)	\
    ( (This)->lpVtbl -> put_DimScale(This,DimScale) ) 

#define IIcadDimensionStyle_get_DimAsz(This,pDimAsz)	\
    ( (This)->lpVtbl -> get_DimAsz(This,pDimAsz) ) 

#define IIcadDimensionStyle_put_DimAsz(This,DimAsz)	\
    ( (This)->lpVtbl -> put_DimAsz(This,DimAsz) ) 

#define IIcadDimensionStyle_get_DimExo(This,pDimExo)	\
    ( (This)->lpVtbl -> get_DimExo(This,pDimExo) ) 

#define IIcadDimensionStyle_put_DimExo(This,DimExo)	\
    ( (This)->lpVtbl -> put_DimExo(This,DimExo) ) 

#define IIcadDimensionStyle_get_DimDli(This,pDimDli)	\
    ( (This)->lpVtbl -> get_DimDli(This,pDimDli) ) 

#define IIcadDimensionStyle_put_DimDli(This,DimDli)	\
    ( (This)->lpVtbl -> put_DimDli(This,DimDli) ) 

#define IIcadDimensionStyle_get_DimExe(This,pDimExe)	\
    ( (This)->lpVtbl -> get_DimExe(This,pDimExe) ) 

#define IIcadDimensionStyle_put_DimExe(This,DimExe)	\
    ( (This)->lpVtbl -> put_DimExe(This,DimExe) ) 

#define IIcadDimensionStyle_get_DimRnd(This,pDimRnd)	\
    ( (This)->lpVtbl -> get_DimRnd(This,pDimRnd) ) 

#define IIcadDimensionStyle_put_DimRnd(This,DimRnd)	\
    ( (This)->lpVtbl -> put_DimRnd(This,DimRnd) ) 

#define IIcadDimensionStyle_get_DimDle(This,pDimDle)	\
    ( (This)->lpVtbl -> get_DimDle(This,pDimDle) ) 

#define IIcadDimensionStyle_put_DimDle(This,DimDle)	\
    ( (This)->lpVtbl -> put_DimDle(This,DimDle) ) 

#define IIcadDimensionStyle_get_DimTp(This,pDimTp)	\
    ( (This)->lpVtbl -> get_DimTp(This,pDimTp) ) 

#define IIcadDimensionStyle_put_DimTp(This,DimTp)	\
    ( (This)->lpVtbl -> put_DimTp(This,DimTp) ) 

#define IIcadDimensionStyle_get_DimTm(This,pDimTm)	\
    ( (This)->lpVtbl -> get_DimTm(This,pDimTm) ) 

#define IIcadDimensionStyle_put_DimTm(This,DimTm)	\
    ( (This)->lpVtbl -> put_DimTm(This,DimTm) ) 

#define IIcadDimensionStyle_get_DimTol(This,pDimTol)	\
    ( (This)->lpVtbl -> get_DimTol(This,pDimTol) ) 

#define IIcadDimensionStyle_put_DimTol(This,DimTol)	\
    ( (This)->lpVtbl -> put_DimTol(This,DimTol) ) 

#define IIcadDimensionStyle_get_DimLim(This,pDimLim)	\
    ( (This)->lpVtbl -> get_DimLim(This,pDimLim) ) 

#define IIcadDimensionStyle_put_DimLim(This,DimLim)	\
    ( (This)->lpVtbl -> put_DimLim(This,DimLim) ) 

#define IIcadDimensionStyle_get_DimTih(This,pDimTih)	\
    ( (This)->lpVtbl -> get_DimTih(This,pDimTih) ) 

#define IIcadDimensionStyle_put_DimTih(This,DimTih)	\
    ( (This)->lpVtbl -> put_DimTih(This,DimTih) ) 

#define IIcadDimensionStyle_get_DimToh(This,pDimToh)	\
    ( (This)->lpVtbl -> get_DimToh(This,pDimToh) ) 

#define IIcadDimensionStyle_put_DimToh(This,DimToh)	\
    ( (This)->lpVtbl -> put_DimToh(This,DimToh) ) 

#define IIcadDimensionStyle_get_DimSe1(This,pDimSe1)	\
    ( (This)->lpVtbl -> get_DimSe1(This,pDimSe1) ) 

#define IIcadDimensionStyle_put_DimSe1(This,DimSe1)	\
    ( (This)->lpVtbl -> put_DimSe1(This,DimSe1) ) 

#define IIcadDimensionStyle_get_DimSe2(This,pDimSe2)	\
    ( (This)->lpVtbl -> get_DimSe2(This,pDimSe2) ) 

#define IIcadDimensionStyle_put_DimSe2(This,DimSe2)	\
    ( (This)->lpVtbl -> put_DimSe2(This,DimSe2) ) 

#define IIcadDimensionStyle_get_DimTad(This,pDimTad)	\
    ( (This)->lpVtbl -> get_DimTad(This,pDimTad) ) 

#define IIcadDimensionStyle_put_DimTad(This,DimTad)	\
    ( (This)->lpVtbl -> put_DimTad(This,DimTad) ) 

#define IIcadDimensionStyle_get_DimZin(This,pDimZin)	\
    ( (This)->lpVtbl -> get_DimZin(This,pDimZin) ) 

#define IIcadDimensionStyle_put_DimZin(This,DimZin)	\
    ( (This)->lpVtbl -> put_DimZin(This,DimZin) ) 

#define IIcadDimensionStyle_get_DimTxt(This,pDimTxt)	\
    ( (This)->lpVtbl -> get_DimTxt(This,pDimTxt) ) 

#define IIcadDimensionStyle_put_DimTxt(This,DimTxt)	\
    ( (This)->lpVtbl -> put_DimTxt(This,DimTxt) ) 

#define IIcadDimensionStyle_get_DimCen(This,pDimCen)	\
    ( (This)->lpVtbl -> get_DimCen(This,pDimCen) ) 

#define IIcadDimensionStyle_put_DimCen(This,DimCen)	\
    ( (This)->lpVtbl -> put_DimCen(This,DimCen) ) 

#define IIcadDimensionStyle_get_DimTsz(This,pDimTsz)	\
    ( (This)->lpVtbl -> get_DimTsz(This,pDimTsz) ) 

#define IIcadDimensionStyle_put_DimTsz(This,DimTsz)	\
    ( (This)->lpVtbl -> put_DimTsz(This,DimTsz) ) 

#define IIcadDimensionStyle_get_DimAltf(This,pDimAltf)	\
    ( (This)->lpVtbl -> get_DimAltf(This,pDimAltf) ) 

#define IIcadDimensionStyle_put_DimAltf(This,DimAltf)	\
    ( (This)->lpVtbl -> put_DimAltf(This,DimAltf) ) 

#define IIcadDimensionStyle_get_DimLfac(This,pDimLfac)	\
    ( (This)->lpVtbl -> get_DimLfac(This,pDimLfac) ) 

#define IIcadDimensionStyle_put_DimLfac(This,DimLfac)	\
    ( (This)->lpVtbl -> put_DimLfac(This,DimLfac) ) 

#define IIcadDimensionStyle_get_DimTvp(This,pDimTvp)	\
    ( (This)->lpVtbl -> get_DimTvp(This,pDimTvp) ) 

#define IIcadDimensionStyle_put_DimTvp(This,DimTvp)	\
    ( (This)->lpVtbl -> put_DimTvp(This,DimTvp) ) 

#define IIcadDimensionStyle_get_DimTfac(This,pDimTfac)	\
    ( (This)->lpVtbl -> get_DimTfac(This,pDimTfac) ) 

#define IIcadDimensionStyle_put_DimTfac(This,DimTfac)	\
    ( (This)->lpVtbl -> put_DimTfac(This,DimTfac) ) 

#define IIcadDimensionStyle_get_DimGap(This,pDimGap)	\
    ( (This)->lpVtbl -> get_DimGap(This,pDimGap) ) 

#define IIcadDimensionStyle_put_DimGap(This,DimGap)	\
    ( (This)->lpVtbl -> put_DimGap(This,DimGap) ) 

#define IIcadDimensionStyle_get_DimAlt(This,pDimAlt)	\
    ( (This)->lpVtbl -> get_DimAlt(This,pDimAlt) ) 

#define IIcadDimensionStyle_put_DimAlt(This,DimAlt)	\
    ( (This)->lpVtbl -> put_DimAlt(This,DimAlt) ) 

#define IIcadDimensionStyle_get_DimAltd(This,pDimAltd)	\
    ( (This)->lpVtbl -> get_DimAltd(This,pDimAltd) ) 

#define IIcadDimensionStyle_put_DimAltd(This,DimAltd)	\
    ( (This)->lpVtbl -> put_DimAltd(This,DimAltd) ) 

#define IIcadDimensionStyle_get_DimTofl(This,pDimTofl)	\
    ( (This)->lpVtbl -> get_DimTofl(This,pDimTofl) ) 

#define IIcadDimensionStyle_put_DimTofl(This,DimTofl)	\
    ( (This)->lpVtbl -> put_DimTofl(This,DimTofl) ) 

#define IIcadDimensionStyle_get_DimSah(This,pDimSah)	\
    ( (This)->lpVtbl -> get_DimSah(This,pDimSah) ) 

#define IIcadDimensionStyle_put_DimSah(This,DimSah)	\
    ( (This)->lpVtbl -> put_DimSah(This,DimSah) ) 

#define IIcadDimensionStyle_get_DimTix(This,pDimTix)	\
    ( (This)->lpVtbl -> get_DimTix(This,pDimTix) ) 

#define IIcadDimensionStyle_put_DimTix(This,DimTix)	\
    ( (This)->lpVtbl -> put_DimTix(This,DimTix) ) 

#define IIcadDimensionStyle_get_DimSohd(This,pDimSohd)	\
    ( (This)->lpVtbl -> get_DimSohd(This,pDimSohd) ) 

#define IIcadDimensionStyle_put_DimSohd(This,DimSohd)	\
    ( (This)->lpVtbl -> put_DimSohd(This,DimSohd) ) 

#define IIcadDimensionStyle_get_DimClrd(This,pDimClrd)	\
    ( (This)->lpVtbl -> get_DimClrd(This,pDimClrd) ) 

#define IIcadDimensionStyle_put_DimClrd(This,DimClrd)	\
    ( (This)->lpVtbl -> put_DimClrd(This,DimClrd) ) 

#define IIcadDimensionStyle_get_DimClre(This,pDimClre)	\
    ( (This)->lpVtbl -> get_DimClre(This,pDimClre) ) 

#define IIcadDimensionStyle_put_DimClre(This,DimClre)	\
    ( (This)->lpVtbl -> put_DimClre(This,DimClre) ) 

#define IIcadDimensionStyle_get_DimClrt(This,pDimClrt)	\
    ( (This)->lpVtbl -> get_DimClrt(This,pDimClrt) ) 

#define IIcadDimensionStyle_put_DimClrt(This,DimClrt)	\
    ( (This)->lpVtbl -> put_DimClrt(This,DimClrt) ) 

#define IIcadDimensionStyle_get_DimUnit(This,pDimUnit)	\
    ( (This)->lpVtbl -> get_DimUnit(This,pDimUnit) ) 

#define IIcadDimensionStyle_put_DimUnit(This,DimUnit)	\
    ( (This)->lpVtbl -> put_DimUnit(This,DimUnit) ) 

#define IIcadDimensionStyle_get_DimDec(This,pDimDec)	\
    ( (This)->lpVtbl -> get_DimDec(This,pDimDec) ) 

#define IIcadDimensionStyle_put_DimDec(This,DimDec)	\
    ( (This)->lpVtbl -> put_DimDec(This,DimDec) ) 

#define IIcadDimensionStyle_get_DimTdec(This,pDimTdec)	\
    ( (This)->lpVtbl -> get_DimTdec(This,pDimTdec) ) 

#define IIcadDimensionStyle_put_DimTdec(This,DimTdec)	\
    ( (This)->lpVtbl -> put_DimTdec(This,DimTdec) ) 

#define IIcadDimensionStyle_get_DimAltu(This,pDimAltu)	\
    ( (This)->lpVtbl -> get_DimAltu(This,pDimAltu) ) 

#define IIcadDimensionStyle_put_DimAltu(This,DimAltu)	\
    ( (This)->lpVtbl -> put_DimAltu(This,DimAltu) ) 

#define IIcadDimensionStyle_get_DimAlttd(This,pDimAlttd)	\
    ( (This)->lpVtbl -> get_DimAlttd(This,pDimAlttd) ) 

#define IIcadDimensionStyle_put_DimAlttd(This,DimAlttd)	\
    ( (This)->lpVtbl -> put_DimAlttd(This,DimAlttd) ) 

#define IIcadDimensionStyle_get_DimAunit(This,pDimAunit)	\
    ( (This)->lpVtbl -> get_DimAunit(This,pDimAunit) ) 

#define IIcadDimensionStyle_put_DimAunit(This,DimAunit)	\
    ( (This)->lpVtbl -> put_DimAunit(This,DimAunit) ) 

#define IIcadDimensionStyle_get_DimJust(This,pDimJust)	\
    ( (This)->lpVtbl -> get_DimJust(This,pDimJust) ) 

#define IIcadDimensionStyle_put_DimJust(This,DimJust)	\
    ( (This)->lpVtbl -> put_DimJust(This,DimJust) ) 

#define IIcadDimensionStyle_get_DimSd1(This,pDimSd1)	\
    ( (This)->lpVtbl -> get_DimSd1(This,pDimSd1) ) 

#define IIcadDimensionStyle_put_DimSd1(This,DimSd1)	\
    ( (This)->lpVtbl -> put_DimSd1(This,DimSd1) ) 

#define IIcadDimensionStyle_get_DimSd2(This,pDimSd2)	\
    ( (This)->lpVtbl -> get_DimSd2(This,pDimSd2) ) 

#define IIcadDimensionStyle_put_DimSd2(This,DimSd2)	\
    ( (This)->lpVtbl -> put_DimSd2(This,DimSd2) ) 

#define IIcadDimensionStyle_get_DimTolj(This,pDimTolj)	\
    ( (This)->lpVtbl -> get_DimTolj(This,pDimTolj) ) 

#define IIcadDimensionStyle_put_DimTolj(This,DimTolj)	\
    ( (This)->lpVtbl -> put_DimTolj(This,DimTolj) ) 

#define IIcadDimensionStyle_get_DimTzin(This,pDimTzin)	\
    ( (This)->lpVtbl -> get_DimTzin(This,pDimTzin) ) 

#define IIcadDimensionStyle_put_DimTzin(This,DimTzin)	\
    ( (This)->lpVtbl -> put_DimTzin(This,DimTzin) ) 

#define IIcadDimensionStyle_get_DimAltz(This,pDimAltz)	\
    ( (This)->lpVtbl -> get_DimAltz(This,pDimAltz) ) 

#define IIcadDimensionStyle_put_DimAltz(This,DimAltz)	\
    ( (This)->lpVtbl -> put_DimAltz(This,DimAltz) ) 

#define IIcadDimensionStyle_get_DimAlttz(This,pDimAlttz)	\
    ( (This)->lpVtbl -> get_DimAlttz(This,pDimAlttz) ) 

#define IIcadDimensionStyle_put_DimAlttz(This,DimAlttz)	\
    ( (This)->lpVtbl -> put_DimAlttz(This,DimAlttz) ) 

#define IIcadDimensionStyle_get_DimFit(This,pDimFit)	\
    ( (This)->lpVtbl -> get_DimFit(This,pDimFit) ) 

#define IIcadDimensionStyle_put_DimFit(This,DimFit)	\
    ( (This)->lpVtbl -> put_DimFit(This,DimFit) ) 

#define IIcadDimensionStyle_get_DimUpt(This,pDimUpt)	\
    ( (This)->lpVtbl -> get_DimUpt(This,pDimUpt) ) 

#define IIcadDimensionStyle_put_DimUpt(This,DimUpt)	\
    ( (This)->lpVtbl -> put_DimUpt(This,DimUpt) ) 

#define IIcadDimensionStyle_get_DimTxSty(This,pDimTxSty)	\
    ( (This)->lpVtbl -> get_DimTxSty(This,pDimTxSty) ) 

#define IIcadDimensionStyle_put_DimTxSty(This,DimTxSty)	\
    ( (This)->lpVtbl -> put_DimTxSty(This,DimTxSty) ) 

#define IIcadDimensionStyle_get_DimLwd(This,pDimLwd)	\
    ( (This)->lpVtbl -> get_DimLwd(This,pDimLwd) ) 

#define IIcadDimensionStyle_put_DimLwd(This,intDimLwd)	\
    ( (This)->lpVtbl -> put_DimLwd(This,intDimLwd) ) 

#define IIcadDimensionStyle_get_DimLwe(This,pDimLwe)	\
    ( (This)->lpVtbl -> get_DimLwe(This,pDimLwe) ) 

#define IIcadDimensionStyle_put_DimLwe(This,intDimLwe)	\
    ( (This)->lpVtbl -> put_DimLwe(This,intDimLwe) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimensionStyle_get_DimTxSty_Proxy( 
    IIcadDimensionStyle * This,
    /* [retval][out] */ BSTR *pDimTxSty);


void __RPC_STUB IIcadDimensionStyle_get_DimTxSty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimensionStyle_put_DimTxSty_Proxy( 
    IIcadDimensionStyle * This,
    /* [in] */ BSTR DimTxSty);


void __RPC_STUB IIcadDimensionStyle_put_DimTxSty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimensionStyle_get_DimLwd_Proxy( 
    IIcadDimensionStyle * This,
    /* [retval][out] */ int *pDimLwd);


void __RPC_STUB IIcadDimensionStyle_get_DimLwd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimensionStyle_put_DimLwd_Proxy( 
    IIcadDimensionStyle * This,
    /* [in] */ int intDimLwd);


void __RPC_STUB IIcadDimensionStyle_put_DimLwd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimensionStyle_get_DimLwe_Proxy( 
    IIcadDimensionStyle * This,
    /* [retval][out] */ int *pDimLwe);


void __RPC_STUB IIcadDimensionStyle_get_DimLwe_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimensionStyle_put_DimLwe_Proxy( 
    IIcadDimensionStyle * This,
    /* [in] */ int intDimLwe);


void __RPC_STUB IIcadDimensionStyle_put_DimLwe_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDimensionStyle_INTERFACE_DEFINED__ */


#ifndef __IIcadDimensionStyles_INTERFACE_DEFINED__
#define __IIcadDimensionStyles_INTERFACE_DEFINED__

/* interface IIcadDimensionStyles */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimensionStyles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5dd8fac1-86f8-420b-879f-5b52552c39e8")
    IIcadDimensionStyles : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadDimensionStyle **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadDimensionStyle **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimensionStylesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimensionStyles * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimensionStyles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimensionStyles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimensionStyles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimensionStyles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimensionStyles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimensionStyles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimensionStyles * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadDimensionStyles * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimensionStyles * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadDimensionStyles * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadDimensionStyles * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadDimensionStyle **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadDimensionStyles * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadDimensionStyle **ppItem);
        
        END_INTERFACE
    } IIcadDimensionStylesVtbl;

    interface IIcadDimensionStyles
    {
        CONST_VTBL struct IIcadDimensionStylesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimensionStyles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimensionStyles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimensionStyles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimensionStyles_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimensionStyles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimensionStyles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimensionStyles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimensionStyles_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimensionStyles_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadDimensionStyles_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimensionStyles_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadDimensionStyles_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadDimensionStyles_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDimensionStyles_INTERFACE_DEFINED__ */


#ifndef __IIcadLayer_INTERFACE_DEFINED__
#define __IIcadLayer_INTERFACE_DEFINED__

/* interface IIcadLayer */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLayer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("043ead53-7912-424d-8256-0b6d036f54a1")
    IIcadLayer : public IIcadTableItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Color( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Freeze( 
            /* [retval][out] */ VARIANT_BOOL *pFreeze) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Freeze( 
            /* [in] */ VARIANT_BOOL Freeze) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LayerOn( 
            /* [retval][out] */ VARIANT_BOOL *pOn) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LayerOn( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Linetype( 
            /* [retval][out] */ BSTR *pLinetype) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Linetype( 
            /* [in] */ BSTR Linetype) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Lock( 
            /* [retval][out] */ VARIANT_BOOL *pLock) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Lock( 
            /* [in] */ VARIANT_BOOL Lock) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TrueColor( 
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TrueColor( 
            /* [in] */ IIcadAcCmColor *pAcCmColor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_used( 
            /* [retval][out] */ VARIANT_BOOL *pbUsed) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Plottable( 
            /* [retval][out] */ VARIANT_BOOL *pPlottable) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Plottable( 
            /* [in] */ VARIANT_BOOL Plottable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLayerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLayer * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLayer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLayer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLayer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLayer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLayer * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLayer * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadLayer * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLayer * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadLayer * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadLayer * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadLayer * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadLayer * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadLayer * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadLayer * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadLayer * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadLayer * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadLayer * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadLayer * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadLayer * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Freeze )( 
            IIcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *pFreeze);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Freeze )( 
            IIcadLayer * This,
            /* [in] */ VARIANT_BOOL Freeze);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LayerOn )( 
            IIcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *pOn);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LayerOn )( 
            IIcadLayer * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadLayer * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadLayer * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lock )( 
            IIcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *pLock);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lock )( 
            IIcadLayer * This,
            /* [in] */ VARIANT_BOOL Lock);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadLayer * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadLayer * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineWeight )( 
            IIcadLayer * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineWeight )( 
            IIcadLayer * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_used )( 
            IIcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *pbUsed);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Plottable )( 
            IIcadLayer * This,
            /* [retval][out] */ VARIANT_BOOL *pPlottable);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Plottable )( 
            IIcadLayer * This,
            /* [in] */ VARIANT_BOOL Plottable);
        
        END_INTERFACE
    } IIcadLayerVtbl;

    interface IIcadLayer
    {
        CONST_VTBL struct IIcadLayerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLayer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLayer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLayer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLayer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLayer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLayer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLayer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLayer_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLayer_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadLayer_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLayer_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadLayer_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadLayer__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadLayer_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadLayer_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadLayer_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadLayer_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadLayer_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadLayer_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadLayer_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#define IIcadLayer_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadLayer_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadLayer_get_Freeze(This,pFreeze)	\
    ( (This)->lpVtbl -> get_Freeze(This,pFreeze) ) 

#define IIcadLayer_put_Freeze(This,Freeze)	\
    ( (This)->lpVtbl -> put_Freeze(This,Freeze) ) 

#define IIcadLayer_get_LayerOn(This,pOn)	\
    ( (This)->lpVtbl -> get_LayerOn(This,pOn) ) 

#define IIcadLayer_put_LayerOn(This,On)	\
    ( (This)->lpVtbl -> put_LayerOn(This,On) ) 

#define IIcadLayer_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadLayer_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadLayer_get_Lock(This,pLock)	\
    ( (This)->lpVtbl -> get_Lock(This,pLock) ) 

#define IIcadLayer_put_Lock(This,Lock)	\
    ( (This)->lpVtbl -> put_Lock(This,Lock) ) 

#define IIcadLayer_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadLayer_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadLayer_get_LineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_LineWeight(This,pLineweight) ) 

#define IIcadLayer_put_LineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_LineWeight(This,Lineweight) ) 

#define IIcadLayer_get_used(This,pbUsed)	\
    ( (This)->lpVtbl -> get_used(This,pbUsed) ) 

#define IIcadLayer_get_Plottable(This,pPlottable)	\
    ( (This)->lpVtbl -> get_Plottable(This,pPlottable) ) 

#define IIcadLayer_put_Plottable(This,Plottable)	\
    ( (This)->lpVtbl -> put_Plottable(This,Plottable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLayer_INTERFACE_DEFINED__ */


#ifndef __IIcadLayers_INTERFACE_DEFINED__
#define __IIcadLayers_INTERFACE_DEFINED__

/* interface IIcadLayers */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLayers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eb29b4f3-3d58-4d64-8944-00cfc9dc5016")
    IIcadLayers : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadLayer **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadLayer **ppItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GenerateUsageData( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetXData( 
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetXData( 
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLayersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLayers * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLayers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLayers * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLayers * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLayers * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLayers * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLayers * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLayers * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadLayers * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLayers * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadLayers * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadLayers * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadLayer **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadLayers * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadLayer **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GenerateUsageData )( 
            IIcadLayers * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadLayers * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadLayers * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        END_INTERFACE
    } IIcadLayersVtbl;

    interface IIcadLayers
    {
        CONST_VTBL struct IIcadLayersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLayers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLayers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLayers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLayers_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLayers_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLayers_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLayers_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLayers_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLayers_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadLayers_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLayers_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadLayers_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadLayers_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadLayers_GenerateUsageData(This)	\
    ( (This)->lpVtbl -> GenerateUsageData(This) ) 

#define IIcadLayers_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadLayers_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLayers_INTERFACE_DEFINED__ */


#ifndef __IIcadLinetype_INTERFACE_DEFINED__
#define __IIcadLinetype_INTERFACE_DEFINED__

/* interface IIcadLinetype */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLinetype;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("94267228-ec6b-4f46-b3dc-dc4f73d5aeed")
    IIcadLinetype : public IIcadTableItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLinetypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLinetype * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLinetype * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLinetype * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLinetype * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLinetype * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLinetype * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLinetype * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLinetype * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadLinetype * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLinetype * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadLinetype * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadLinetype * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadLinetype * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadLinetype * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadLinetype * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadLinetype * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadLinetype * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadLinetype * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadLinetype * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadLinetype * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IIcadLinetype * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IIcadLinetype * This,
            /* [in] */ BSTR Description);
        
        END_INTERFACE
    } IIcadLinetypeVtbl;

    interface IIcadLinetype
    {
        CONST_VTBL struct IIcadLinetypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLinetype_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLinetype_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLinetype_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLinetype_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLinetype_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLinetype_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLinetype_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLinetype_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLinetype_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadLinetype_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLinetype_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadLinetype_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadLinetype__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadLinetype_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadLinetype_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadLinetype_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadLinetype_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadLinetype_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadLinetype_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadLinetype_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#define IIcadLinetype_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IIcadLinetype_put_Description(This,Description)	\
    ( (This)->lpVtbl -> put_Description(This,Description) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLinetype_INTERFACE_DEFINED__ */


#ifndef __IIcadLinetypes_INTERFACE_DEFINED__
#define __IIcadLinetypes_INTERFACE_DEFINED__

/* interface IIcadLinetypes */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLinetypes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7186cff8-d6c8-4865-a1dd-26c00fa5f6dd")
    IIcadLinetypes : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadLinetype **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadLinetype **ppItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ BSTR LinetypeName,
            /* [in] */ BSTR FileName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLinetypesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLinetypes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLinetypes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLinetypes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLinetypes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLinetypes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLinetypes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLinetypes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLinetypes * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadLinetypes * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLinetypes * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadLinetypes * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadLinetypes * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadLinetype **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadLinetypes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadLinetype **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Load )( 
            IIcadLinetypes * This,
            /* [in] */ BSTR LinetypeName,
            /* [in] */ BSTR FileName);
        
        END_INTERFACE
    } IIcadLinetypesVtbl;

    interface IIcadLinetypes
    {
        CONST_VTBL struct IIcadLinetypesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLinetypes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLinetypes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLinetypes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLinetypes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLinetypes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLinetypes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLinetypes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLinetypes_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLinetypes_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadLinetypes_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLinetypes_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadLinetypes_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadLinetypes_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadLinetypes_Load(This,LinetypeName,FileName)	\
    ( (This)->lpVtbl -> Load(This,LinetypeName,FileName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLinetypes_INTERFACE_DEFINED__ */


#ifndef __IIcadTextStyle_INTERFACE_DEFINED__
#define __IIcadTextStyle_INTERFACE_DEFINED__

/* interface IIcadTextStyle */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadTextStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b61f174a-e6e1-4652-80a9-04becf69bf39")
    IIcadTextStyle : public IIcadTableItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BigFontFile( 
            /* [retval][out] */ BSTR *pFontFile) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BigFontFile( 
            /* [in] */ BSTR FontFile) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FontFile( 
            /* [retval][out] */ BSTR *pFontFile) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontFile( 
            /* [in] */ BSTR FontFile) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LastHeight( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LastHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ ZcTextGenerationFlag *pTextFlags) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ ZcTextGenerationFlag TextFlags) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Shape( 
            /* [retval][out] */ VARIANT_BOOL *pShape) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Shape( 
            /* [in] */ VARIANT_BOOL Shape) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFont( 
            /* [out][in] */ BSTR *TypeFace,
            /* [out][in] */ VARIANT_BOOL *Bold,
            /* [out][in] */ VARIANT_BOOL *Italic,
            /* [out][in] */ long *Charset,
            /* [out][in] */ long *PitchAndFamily) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetFont( 
            /* [in] */ BSTR TypeFace,
            /* [in] */ VARIANT_BOOL Bold,
            /* [in] */ VARIANT_BOOL Italic,
            /* [in] */ long Charset,
            /* [in] */ long PitchAndFamily) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadTextStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadTextStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadTextStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadTextStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadTextStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadTextStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadTextStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadTextStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadTextStyle * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadTextStyle * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadTextStyle * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadTextStyle * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadTextStyle * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadTextStyle * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadTextStyle * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadTextStyle * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadTextStyle * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadTextStyle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadTextStyle * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadTextStyle * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadTextStyle * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BigFontFile )( 
            IIcadTextStyle * This,
            /* [retval][out] */ BSTR *pFontFile);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BigFontFile )( 
            IIcadTextStyle * This,
            /* [in] */ BSTR FontFile);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFile )( 
            IIcadTextStyle * This,
            /* [retval][out] */ BSTR *pFontFile);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontFile )( 
            IIcadTextStyle * This,
            /* [in] */ BSTR FontFile);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadTextStyle * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadTextStyle * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastHeight )( 
            IIcadTextStyle * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LastHeight )( 
            IIcadTextStyle * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IIcadTextStyle * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IIcadTextStyle * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadTextStyle * This,
            /* [retval][out] */ double *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IIcadTextStyle * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IIcadTextStyle * This,
            /* [retval][out] */ ZcTextGenerationFlag *pTextFlags);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IIcadTextStyle * This,
            /* [in] */ ZcTextGenerationFlag TextFlags);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Shape )( 
            IIcadTextStyle * This,
            /* [retval][out] */ VARIANT_BOOL *pShape);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Shape )( 
            IIcadTextStyle * This,
            /* [in] */ VARIANT_BOOL Shape);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFont )( 
            IIcadTextStyle * This,
            /* [out][in] */ BSTR *TypeFace,
            /* [out][in] */ VARIANT_BOOL *Bold,
            /* [out][in] */ VARIANT_BOOL *Italic,
            /* [out][in] */ long *Charset,
            /* [out][in] */ long *PitchAndFamily);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFont )( 
            IIcadTextStyle * This,
            /* [in] */ BSTR TypeFace,
            /* [in] */ VARIANT_BOOL Bold,
            /* [in] */ VARIANT_BOOL Italic,
            /* [in] */ long Charset,
            /* [in] */ long PitchAndFamily);
        
        END_INTERFACE
    } IIcadTextStyleVtbl;

    interface IIcadTextStyle
    {
        CONST_VTBL struct IIcadTextStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadTextStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadTextStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadTextStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadTextStyle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadTextStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadTextStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadTextStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadTextStyle_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadTextStyle_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadTextStyle_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadTextStyle_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadTextStyle_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadTextStyle__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadTextStyle_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadTextStyle_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadTextStyle_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadTextStyle_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadTextStyle_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadTextStyle_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadTextStyle_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#define IIcadTextStyle_get_BigFontFile(This,pFontFile)	\
    ( (This)->lpVtbl -> get_BigFontFile(This,pFontFile) ) 

#define IIcadTextStyle_put_BigFontFile(This,FontFile)	\
    ( (This)->lpVtbl -> put_BigFontFile(This,FontFile) ) 

#define IIcadTextStyle_get_FontFile(This,pFontFile)	\
    ( (This)->lpVtbl -> get_FontFile(This,pFontFile) ) 

#define IIcadTextStyle_put_FontFile(This,FontFile)	\
    ( (This)->lpVtbl -> put_FontFile(This,FontFile) ) 

#define IIcadTextStyle_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadTextStyle_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadTextStyle_get_LastHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_LastHeight(This,pHeight) ) 

#define IIcadTextStyle_put_LastHeight(This,Height)	\
    ( (This)->lpVtbl -> put_LastHeight(This,Height) ) 

#define IIcadTextStyle_get_ObliqueAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_ObliqueAngle(This,pAngle) ) 

#define IIcadTextStyle_put_ObliqueAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_ObliqueAngle(This,Angle) ) 

#define IIcadTextStyle_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadTextStyle_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define IIcadTextStyle_get_TextGenerationFlag(This,pTextFlags)	\
    ( (This)->lpVtbl -> get_TextGenerationFlag(This,pTextFlags) ) 

#define IIcadTextStyle_put_TextGenerationFlag(This,TextFlags)	\
    ( (This)->lpVtbl -> put_TextGenerationFlag(This,TextFlags) ) 

#define IIcadTextStyle_get_Shape(This,pShape)	\
    ( (This)->lpVtbl -> get_Shape(This,pShape) ) 

#define IIcadTextStyle_put_Shape(This,Shape)	\
    ( (This)->lpVtbl -> put_Shape(This,Shape) ) 

#define IIcadTextStyle_GetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily)	\
    ( (This)->lpVtbl -> GetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily) ) 

#define IIcadTextStyle_SetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily)	\
    ( (This)->lpVtbl -> SetFont(This,TypeFace,Bold,Italic,Charset,PitchAndFamily) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadTextStyle_INTERFACE_DEFINED__ */


#ifndef __IIcadTextStyles_INTERFACE_DEFINED__
#define __IIcadTextStyles_INTERFACE_DEFINED__

/* interface IIcadTextStyles */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadTextStyles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("70a444d4-7008-4878-bfaf-8091e7c0a9d7")
    IIcadTextStyles : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadTextStyle **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadTextStyle **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadTextStylesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadTextStyles * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadTextStyles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadTextStyles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadTextStyles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadTextStyles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadTextStyles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadTextStyles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadTextStyles * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadTextStyles * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadTextStyles * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadTextStyles * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadTextStyles * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadTextStyles * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadTextStyle **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadTextStyles * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadTextStyle **ppItem);
        
        END_INTERFACE
    } IIcadTextStylesVtbl;

    interface IIcadTextStyles
    {
        CONST_VTBL struct IIcadTextStylesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadTextStyles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadTextStyles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadTextStyles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadTextStyles_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadTextStyles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadTextStyles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadTextStyles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadTextStyles_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadTextStyles_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadTextStyles_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadTextStyles_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadTextStyles_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadTextStyles_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadTextStyles_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadTextStyles_INTERFACE_DEFINED__ */


#ifndef __IIcadUserCoordSystem_INTERFACE_DEFINED__
#define __IIcadUserCoordSystem_INTERFACE_DEFINED__

/* interface IIcadUserCoordSystem */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadUserCoordSystem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a3018284-498d-44d8-a773-ca4070c52096")
    IIcadUserCoordSystem : public IIcadTableItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Origin( 
            /* [retval][out] */ VARIANT *vpOrigin) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Origin( 
            /* [in] */ VARIANT vOrigin) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_XVector( 
            /* [retval][out] */ VARIANT *vppVector) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_XVector( 
            /* [in] */ VARIANT vpVector) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_YVector( 
            /* [retval][out] */ VARIANT *vppVector) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_YVector( 
            /* [in] */ VARIANT vpVector) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ZVector( 
            /* [retval][out] */ VARIANT *vppVector) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetUCSMatrix( 
            /* [retval][out] */ VARIANT *pVarMatrix) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadUserCoordSystemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadUserCoordSystem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadUserCoordSystem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadUserCoordSystem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadUserCoordSystem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadUserCoordSystem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadUserCoordSystem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadUserCoordSystem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadUserCoordSystem * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadUserCoordSystem * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadUserCoordSystem * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadUserCoordSystem * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ VARIANT *vpOrigin);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IIcadUserCoordSystem * This,
            /* [in] */ VARIANT vOrigin);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_XVector )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ VARIANT *vppVector);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_XVector )( 
            IIcadUserCoordSystem * This,
            /* [in] */ VARIANT vpVector);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_YVector )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ VARIANT *vppVector);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_YVector )( 
            IIcadUserCoordSystem * This,
            /* [in] */ VARIANT vpVector);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZVector )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ VARIANT *vppVector);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetUCSMatrix )( 
            IIcadUserCoordSystem * This,
            /* [retval][out] */ VARIANT *pVarMatrix);
        
        END_INTERFACE
    } IIcadUserCoordSystemVtbl;

    interface IIcadUserCoordSystem
    {
        CONST_VTBL struct IIcadUserCoordSystemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadUserCoordSystem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadUserCoordSystem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadUserCoordSystem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadUserCoordSystem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadUserCoordSystem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadUserCoordSystem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadUserCoordSystem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadUserCoordSystem_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadUserCoordSystem_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadUserCoordSystem_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadUserCoordSystem_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadUserCoordSystem_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadUserCoordSystem__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadUserCoordSystem_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadUserCoordSystem_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadUserCoordSystem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadUserCoordSystem_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadUserCoordSystem_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadUserCoordSystem_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadUserCoordSystem_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#define IIcadUserCoordSystem_get_Origin(This,vpOrigin)	\
    ( (This)->lpVtbl -> get_Origin(This,vpOrigin) ) 

#define IIcadUserCoordSystem_put_Origin(This,vOrigin)	\
    ( (This)->lpVtbl -> put_Origin(This,vOrigin) ) 

#define IIcadUserCoordSystem_get_XVector(This,vppVector)	\
    ( (This)->lpVtbl -> get_XVector(This,vppVector) ) 

#define IIcadUserCoordSystem_put_XVector(This,vpVector)	\
    ( (This)->lpVtbl -> put_XVector(This,vpVector) ) 

#define IIcadUserCoordSystem_get_YVector(This,vppVector)	\
    ( (This)->lpVtbl -> get_YVector(This,vppVector) ) 

#define IIcadUserCoordSystem_put_YVector(This,vpVector)	\
    ( (This)->lpVtbl -> put_YVector(This,vpVector) ) 

#define IIcadUserCoordSystem_get_ZVector(This,vppVector)	\
    ( (This)->lpVtbl -> get_ZVector(This,vppVector) ) 

#define IIcadUserCoordSystem_GetUCSMatrix(This,pVarMatrix)	\
    ( (This)->lpVtbl -> GetUCSMatrix(This,pVarMatrix) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadUserCoordSystem_INTERFACE_DEFINED__ */


#ifndef __IIcadUserCoordSystems_INTERFACE_DEFINED__
#define __IIcadUserCoordSystems_INTERFACE_DEFINED__

/* interface IIcadUserCoordSystems */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadUserCoordSystems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0da4141b-85cc-472b-911e-44725dd79348")
    IIcadUserCoordSystems : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT varOrigin,
            /* [in] */ VARIANT varXAxis,
            /* [in] */ VARIANT varYAxis,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadUserCoordSystem **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadUserCoordSystem **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadUserCoordSystemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadUserCoordSystems * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadUserCoordSystems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadUserCoordSystems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadUserCoordSystems * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadUserCoordSystems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadUserCoordSystems * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadUserCoordSystems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadUserCoordSystems * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadUserCoordSystems * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadUserCoordSystems * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadUserCoordSystems * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadUserCoordSystems * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ VARIANT varXAxis,
            /* [in] */ VARIANT varYAxis,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadUserCoordSystem **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadUserCoordSystems * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadUserCoordSystem **ppItem);
        
        END_INTERFACE
    } IIcadUserCoordSystemsVtbl;

    interface IIcadUserCoordSystems
    {
        CONST_VTBL struct IIcadUserCoordSystemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadUserCoordSystems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadUserCoordSystems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadUserCoordSystems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadUserCoordSystems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadUserCoordSystems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadUserCoordSystems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadUserCoordSystems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadUserCoordSystems_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadUserCoordSystems_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadUserCoordSystems_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadUserCoordSystems_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadUserCoordSystems_Add(This,varOrigin,varXAxis,varYAxis,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,varOrigin,varXAxis,varYAxis,Name,ppItem) ) 

#define IIcadUserCoordSystems_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadUserCoordSystems_INTERFACE_DEFINED__ */


#ifndef __IIcadView_INTERFACE_DEFINED__
#define __IIcadView_INTERFACE_DEFINED__

/* interface IIcadView */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2bb3dc36-888a-4bb6-9cb9-e5078ba39f62")
    IIcadView : public IIcadTableItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ VARIANT *vppNormal) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ VARIANT vNormal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LensLength( 
            /* [retval][out] */ double *pLensLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Target( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadView * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadView * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadView * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadView * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadView * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadView * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadView * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadView * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadView * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadView * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadView * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadView * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadView * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadView * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadView * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IIcadView * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IIcadView * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IIcadView * This,
            /* [retval][out] */ VARIANT *vppNormal);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IIcadView * This,
            /* [in] */ VARIANT vNormal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadView * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadView * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LensLength )( 
            IIcadView * This,
            /* [retval][out] */ double *pLensLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IIcadView * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IIcadView * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadView * This,
            /* [retval][out] */ double *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IIcadView * This,
            /* [in] */ double Width);
        
        END_INTERFACE
    } IIcadViewVtbl;

    interface IIcadView
    {
        CONST_VTBL struct IIcadViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadView_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadView_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadView_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadView_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadView_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadView__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadView_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadView_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadView_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadView_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadView_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#define IIcadView_get_Center(This,var)	\
    ( (This)->lpVtbl -> get_Center(This,var) ) 

#define IIcadView_put_Center(This,var)	\
    ( (This)->lpVtbl -> put_Center(This,var) ) 

#define IIcadView_get_Direction(This,vppNormal)	\
    ( (This)->lpVtbl -> get_Direction(This,vppNormal) ) 

#define IIcadView_put_Direction(This,vNormal)	\
    ( (This)->lpVtbl -> put_Direction(This,vNormal) ) 

#define IIcadView_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadView_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadView_get_LensLength(This,pLensLength)	\
    ( (This)->lpVtbl -> get_LensLength(This,pLensLength) ) 

#define IIcadView_get_Target(This,var)	\
    ( (This)->lpVtbl -> get_Target(This,var) ) 

#define IIcadView_put_Target(This,var)	\
    ( (This)->lpVtbl -> put_Target(This,var) ) 

#define IIcadView_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadView_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadView_INTERFACE_DEFINED__ */


#ifndef __IIcadViews_INTERFACE_DEFINED__
#define __IIcadViews_INTERFACE_DEFINED__

/* interface IIcadViews */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadViews;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c2052ff6-43a3-43fa-af89-694d8cc38679")
    IIcadViews : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadView **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadView **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadViewsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadViews * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadViews * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadViews * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadViews * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadViews * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadViews * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadViews * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadViews * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadViews * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadViews * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadViews * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadViews * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadView **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadViews * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadView **ppItem);
        
        END_INTERFACE
    } IIcadViewsVtbl;

    interface IIcadViews
    {
        CONST_VTBL struct IIcadViewsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadViews_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadViews_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadViews_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadViews_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadViews_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadViews_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadViews_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadViews_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadViews_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadViews_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadViews_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadViews_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadViews_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadViews_INTERFACE_DEFINED__ */


#ifndef __IIcadViewport_INTERFACE_DEFINED__
#define __IIcadViewport_INTERFACE_DEFINED__

/* interface IIcadViewport */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadViewport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("06451613-3919-4f6e-b2c6-9f15c9e544b6")
    IIcadViewport : public IIcadTableItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ VARIANT *vppNormal) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ VARIANT vNormal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GridOn( 
            /* [retval][out] */ VARIANT_BOOL *pGridOn) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GridOn( 
            /* [in] */ VARIANT_BOOL GridOn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LowerLeftCorner( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LowerLeftCorner( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OrthoOn( 
            /* [retval][out] */ VARIANT_BOOL *pOrthoOn) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OrthoOn( 
            /* [in] */ VARIANT_BOOL OrthoOn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SnapBasePoint( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SnapBasePoint( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SnapOn( 
            /* [retval][out] */ VARIANT_BOOL *pSnapOn) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SnapOn( 
            /* [in] */ VARIANT_BOOL SnapOn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SnapRotationAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SnapRotationAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Target( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UCSIconAtOrigin( 
            /* [retval][out] */ VARIANT_BOOL *pIcon) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UCSIconAtOrigin( 
            /* [in] */ VARIANT_BOOL Icon) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UCSIconOn( 
            /* [retval][out] */ VARIANT_BOOL *pIcon) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UCSIconOn( 
            /* [in] */ VARIANT_BOOL Icon) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UpperRightCorner( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UpperRightCorner( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetGridSpacing( 
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSnapSpacing( 
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetGridSpacing( 
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetSnapSpacing( 
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetView( 
            /* [in] */ IIcadView *View) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Split( 
            /* [in] */ ZcViewportSplitType NumberOfWindows) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomAll( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomCenter( 
            /* [in] */ VARIANT var,
            /* [in] */ double ZoomFactor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomExtents( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomPickWindow( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomScaled( 
            /* [in] */ double Scale,
            /* [in] */ ZcZoomScale ScaleType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomWindow( 
            /* [in] */ VARIANT vLowerleft,
            /* [in] */ VARIANT vUpperRight) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ZoomPrevious( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadViewportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadViewport * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadViewport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadViewport * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadViewport * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadViewport * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadViewport * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadViewport * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadViewport * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadViewport * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadViewport * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadViewport * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadViewport * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadViewport * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadViewport * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadViewport * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadViewport * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadViewport * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadViewport * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadViewport * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IIcadViewport * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT *vppNormal);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IIcadViewport * This,
            /* [in] */ VARIANT vNormal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GridOn )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pGridOn);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GridOn )( 
            IIcadViewport * This,
            /* [in] */ VARIANT_BOOL GridOn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadViewport * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadViewport * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LowerLeftCorner )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LowerLeftCorner )( 
            IIcadViewport * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrthoOn )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pOrthoOn);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OrthoOn )( 
            IIcadViewport * This,
            /* [in] */ VARIANT_BOOL OrthoOn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapBasePoint )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SnapBasePoint )( 
            IIcadViewport * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapOn )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pSnapOn);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SnapOn )( 
            IIcadViewport * This,
            /* [in] */ VARIANT_BOOL SnapOn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapRotationAngle )( 
            IIcadViewport * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SnapRotationAngle )( 
            IIcadViewport * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IIcadViewport * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconAtOrigin )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pIcon);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconAtOrigin )( 
            IIcadViewport * This,
            /* [in] */ VARIANT_BOOL Icon);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconOn )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pIcon);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconOn )( 
            IIcadViewport * This,
            /* [in] */ VARIANT_BOOL Icon);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpperRightCorner )( 
            IIcadViewport * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpperRightCorner )( 
            IIcadViewport * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadViewport * This,
            /* [retval][out] */ double *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IIcadViewport * This,
            /* [in] */ double Width);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetGridSpacing )( 
            IIcadViewport * This,
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSnapSpacing )( 
            IIcadViewport * This,
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetGridSpacing )( 
            IIcadViewport * This,
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetSnapSpacing )( 
            IIcadViewport * This,
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetView )( 
            IIcadViewport * This,
            /* [in] */ IIcadView *View);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Split )( 
            IIcadViewport * This,
            /* [in] */ ZcViewportSplitType NumberOfWindows);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomAll )( 
            IIcadViewport * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomCenter )( 
            IIcadViewport * This,
            /* [in] */ VARIANT var,
            /* [in] */ double ZoomFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomExtents )( 
            IIcadViewport * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomPickWindow )( 
            IIcadViewport * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomScaled )( 
            IIcadViewport * This,
            /* [in] */ double Scale,
            /* [in] */ ZcZoomScale ScaleType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomWindow )( 
            IIcadViewport * This,
            /* [in] */ VARIANT vLowerleft,
            /* [in] */ VARIANT vUpperRight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ZoomPrevious )( 
            IIcadViewport * This);
        
        END_INTERFACE
    } IIcadViewportVtbl;

    interface IIcadViewport
    {
        CONST_VTBL struct IIcadViewportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadViewport_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadViewport_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadViewport_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadViewport_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadViewport_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadViewport_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadViewport_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadViewport_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadViewport_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadViewport_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadViewport_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadViewport_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadViewport__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadViewport_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadViewport_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadViewport_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadViewport_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadViewport_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadViewport_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadViewport_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 


#define IIcadViewport_get_Center(This,var)	\
    ( (This)->lpVtbl -> get_Center(This,var) ) 

#define IIcadViewport_put_Center(This,var)	\
    ( (This)->lpVtbl -> put_Center(This,var) ) 

#define IIcadViewport_get_Direction(This,vppNormal)	\
    ( (This)->lpVtbl -> get_Direction(This,vppNormal) ) 

#define IIcadViewport_put_Direction(This,vNormal)	\
    ( (This)->lpVtbl -> put_Direction(This,vNormal) ) 

#define IIcadViewport_get_GridOn(This,pGridOn)	\
    ( (This)->lpVtbl -> get_GridOn(This,pGridOn) ) 

#define IIcadViewport_put_GridOn(This,GridOn)	\
    ( (This)->lpVtbl -> put_GridOn(This,GridOn) ) 

#define IIcadViewport_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadViewport_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadViewport_get_LowerLeftCorner(This,var)	\
    ( (This)->lpVtbl -> get_LowerLeftCorner(This,var) ) 

#define IIcadViewport_put_LowerLeftCorner(This,var)	\
    ( (This)->lpVtbl -> put_LowerLeftCorner(This,var) ) 

#define IIcadViewport_get_OrthoOn(This,pOrthoOn)	\
    ( (This)->lpVtbl -> get_OrthoOn(This,pOrthoOn) ) 

#define IIcadViewport_put_OrthoOn(This,OrthoOn)	\
    ( (This)->lpVtbl -> put_OrthoOn(This,OrthoOn) ) 

#define IIcadViewport_get_SnapBasePoint(This,var)	\
    ( (This)->lpVtbl -> get_SnapBasePoint(This,var) ) 

#define IIcadViewport_put_SnapBasePoint(This,var)	\
    ( (This)->lpVtbl -> put_SnapBasePoint(This,var) ) 

#define IIcadViewport_get_SnapOn(This,pSnapOn)	\
    ( (This)->lpVtbl -> get_SnapOn(This,pSnapOn) ) 

#define IIcadViewport_put_SnapOn(This,SnapOn)	\
    ( (This)->lpVtbl -> put_SnapOn(This,SnapOn) ) 

#define IIcadViewport_get_SnapRotationAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_SnapRotationAngle(This,pAngle) ) 

#define IIcadViewport_put_SnapRotationAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_SnapRotationAngle(This,Angle) ) 

#define IIcadViewport_get_Target(This,var)	\
    ( (This)->lpVtbl -> get_Target(This,var) ) 

#define IIcadViewport_put_Target(This,var)	\
    ( (This)->lpVtbl -> put_Target(This,var) ) 

#define IIcadViewport_get_UCSIconAtOrigin(This,pIcon)	\
    ( (This)->lpVtbl -> get_UCSIconAtOrigin(This,pIcon) ) 

#define IIcadViewport_put_UCSIconAtOrigin(This,Icon)	\
    ( (This)->lpVtbl -> put_UCSIconAtOrigin(This,Icon) ) 

#define IIcadViewport_get_UCSIconOn(This,pIcon)	\
    ( (This)->lpVtbl -> get_UCSIconOn(This,pIcon) ) 

#define IIcadViewport_put_UCSIconOn(This,Icon)	\
    ( (This)->lpVtbl -> put_UCSIconOn(This,Icon) ) 

#define IIcadViewport_get_UpperRightCorner(This,var)	\
    ( (This)->lpVtbl -> get_UpperRightCorner(This,var) ) 

#define IIcadViewport_put_UpperRightCorner(This,var)	\
    ( (This)->lpVtbl -> put_UpperRightCorner(This,var) ) 

#define IIcadViewport_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadViewport_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define IIcadViewport_GetGridSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> GetGridSpacing(This,Xspacing,Yspacing) ) 

#define IIcadViewport_GetSnapSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> GetSnapSpacing(This,Xspacing,Yspacing) ) 

#define IIcadViewport_SetGridSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> SetGridSpacing(This,Xspacing,Yspacing) ) 

#define IIcadViewport_SetSnapSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> SetSnapSpacing(This,Xspacing,Yspacing) ) 

#define IIcadViewport_SetView(This,View)	\
    ( (This)->lpVtbl -> SetView(This,View) ) 

#define IIcadViewport_Split(This,NumberOfWindows)	\
    ( (This)->lpVtbl -> Split(This,NumberOfWindows) ) 

#define IIcadViewport_ZoomAll(This)	\
    ( (This)->lpVtbl -> ZoomAll(This) ) 

#define IIcadViewport_ZoomCenter(This,var,ZoomFactor)	\
    ( (This)->lpVtbl -> ZoomCenter(This,var,ZoomFactor) ) 

#define IIcadViewport_ZoomExtents(This)	\
    ( (This)->lpVtbl -> ZoomExtents(This) ) 

#define IIcadViewport_ZoomPickWindow(This)	\
    ( (This)->lpVtbl -> ZoomPickWindow(This) ) 

#define IIcadViewport_ZoomScaled(This,Scale,ScaleType)	\
    ( (This)->lpVtbl -> ZoomScaled(This,Scale,ScaleType) ) 

#define IIcadViewport_ZoomWindow(This,vLowerleft,vUpperRight)	\
    ( (This)->lpVtbl -> ZoomWindow(This,vLowerleft,vUpperRight) ) 

#define IIcadViewport_ZoomPrevious(This)	\
    ( (This)->lpVtbl -> ZoomPrevious(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadViewport_INTERFACE_DEFINED__ */


#ifndef __IIcadViewports_INTERFACE_DEFINED__
#define __IIcadViewports_INTERFACE_DEFINED__

/* interface IIcadViewports */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadViewports;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b20f11c1-86de-4012-8774-5b50cf891f24")
    IIcadViewports : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadViewport **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadViewport **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadViewportsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadViewports * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadViewports * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadViewports * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadViewports * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadViewports * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadViewports * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadViewports * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadViewports * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadViewports * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadViewports * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadViewports * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadViewports * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadViewport **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadViewports * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadViewport **ppItem);
        
        END_INTERFACE
    } IIcadViewportsVtbl;

    interface IIcadViewports
    {
        CONST_VTBL struct IIcadViewportsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadViewports_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadViewports_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadViewports_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadViewports_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadViewports_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadViewports_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadViewports_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadViewports_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadViewports_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadViewports_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadViewports_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadViewports_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadViewports_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadViewports_INTERFACE_DEFINED__ */


#ifndef __IIcadSelectionSet_INTERFACE_DEFINED__
#define __IIcadSelectionSet_INTERFACE_DEFINED__

/* interface IIcadSelectionSet */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadSelectionSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3048caed-4df9-437e-91a7-c044e690a236")
    IIcadSelectionSet : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pstrName) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadSelectionSets **ppParent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Color( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Layer( 
            /* [retval][out] */ BSTR *pLayer) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Layer( 
            /* [in] */ BSTR Layer) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Linetype( 
            /* [retval][out] */ BSTR *pLinetype) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Linetype( 
            /* [in] */ BSTR Linetype) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *pVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SelMsg( 
            /* [retval][out] */ BSTR *pMsg) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelMsg( 
            /* [in] */ BSTR Msg) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddItems( 
            /* [in] */ VARIANT ArrayOfEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Erase( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Highlight( 
            /* [in] */ VARIANT_BOOL HighlightFlag) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveItems( 
            /* [in] */ VARIANT Entities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [in] */ ZcSelectionSetType Type,
            /* [optional][in] */ VARIANT vPoint1,
            /* [optional][in] */ VARIANT vPoint2,
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectAtPoint( 
            /* [in] */ VARIANT vPoint,
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectByPolygon( 
            /* [in] */ ZcSelectionSetType Type,
            /* [in] */ VARIANT vPolygonPoints,
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectOnScreen( 
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IIcadSelectionSet **ppCopy) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Mirror( 
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadSelectionSet **MirroredEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Mirror3D( 
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2,
            /* [in] */ VARIANT vPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadSelectionSet **MirroredEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Rotate( 
            /* [in] */ VARIANT vBasePoint,
            /* [in] */ double RotationAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Rotate3D( 
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2,
            /* [in] */ double RotationAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ScaleEntity( 
            /* [in] */ VARIANT vBasePoint,
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TransformBy( 
            /* [in] */ VARIANT Matrix) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadSelectionSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadSelectionSet * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadSelectionSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadSelectionSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadSelectionSet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadSelectionSet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadSelectionSet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadSelectionSet * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ BSTR *pstrName);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ IIcadSelectionSets **ppParent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadSelectionSet * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadSelectionSet * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadSelectionSet * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelMsg )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ BSTR *pMsg);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelMsg )( 
            IIcadSelectionSet * This,
            /* [in] */ BSTR Msg);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddItems )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT ArrayOfEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IIcadSelectionSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadSelectionSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadSelectionSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadSelectionSet * This,
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveItems )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT Entities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            IIcadSelectionSet * This,
            /* [in] */ ZcSelectionSetType Type,
            /* [optional][in] */ VARIANT vPoint1,
            /* [optional][in] */ VARIANT vPoint2,
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectAtPoint )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT vPoint,
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectByPolygon )( 
            IIcadSelectionSet * This,
            /* [in] */ ZcSelectionSetType Type,
            /* [in] */ VARIANT vPolygonPoints,
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectOnScreen )( 
            IIcadSelectionSet * This,
            /* [optional][in] */ VARIANT FilterType,
            /* [optional][in] */ VARIANT FilterData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadSelectionSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadSelectionSet * This,
            /* [retval][out] */ IIcadSelectionSet **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadSelectionSet **MirroredEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2,
            /* [in] */ VARIANT vPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadSelectionSet **MirroredEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT vBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT vPoint1,
            /* [in] */ VARIANT vPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT vBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadSelectionSet * This,
            /* [in] */ VARIANT Matrix);
        
        END_INTERFACE
    } IIcadSelectionSetVtbl;

    interface IIcadSelectionSet
    {
        CONST_VTBL struct IIcadSelectionSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadSelectionSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadSelectionSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadSelectionSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadSelectionSet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadSelectionSet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadSelectionSet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadSelectionSet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadSelectionSet_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadSelectionSet_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadSelectionSet_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadSelectionSet_get_Name(This,pstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pstrName) ) 

#define IIcadSelectionSet_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadSelectionSet_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadSelectionSet_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadSelectionSet_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadSelectionSet_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadSelectionSet_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadSelectionSet_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadSelectionSet_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadSelectionSet_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadSelectionSet_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadSelectionSet_get_SelMsg(This,pMsg)	\
    ( (This)->lpVtbl -> get_SelMsg(This,pMsg) ) 

#define IIcadSelectionSet_put_SelMsg(This,Msg)	\
    ( (This)->lpVtbl -> put_SelMsg(This,Msg) ) 

#define IIcadSelectionSet_AddItems(This,ArrayOfEntities)	\
    ( (This)->lpVtbl -> AddItems(This,ArrayOfEntities) ) 

#define IIcadSelectionSet_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IIcadSelectionSet_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadSelectionSet_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadSelectionSet_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadSelectionSet_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadSelectionSet_RemoveItems(This,Entities)	\
    ( (This)->lpVtbl -> RemoveItems(This,Entities) ) 

#define IIcadSelectionSet_Select(This,Type,vPoint1,vPoint2,FilterType,FilterData)	\
    ( (This)->lpVtbl -> Select(This,Type,vPoint1,vPoint2,FilterType,FilterData) ) 

#define IIcadSelectionSet_SelectAtPoint(This,vPoint,FilterType,FilterData)	\
    ( (This)->lpVtbl -> SelectAtPoint(This,vPoint,FilterType,FilterData) ) 

#define IIcadSelectionSet_SelectByPolygon(This,Type,vPolygonPoints,FilterType,FilterData)	\
    ( (This)->lpVtbl -> SelectByPolygon(This,Type,vPolygonPoints,FilterType,FilterData) ) 

#define IIcadSelectionSet_SelectOnScreen(This,FilterType,FilterData)	\
    ( (This)->lpVtbl -> SelectOnScreen(This,FilterType,FilterData) ) 

#define IIcadSelectionSet_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadSelectionSet_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadSelectionSet_Mirror(This,vPoint1,vPoint2,MakeCopy,MirroredEntities)	\
    ( (This)->lpVtbl -> Mirror(This,vPoint1,vPoint2,MakeCopy,MirroredEntities) ) 

#define IIcadSelectionSet_Mirror3D(This,vPoint1,vPoint2,vPoint3,MakeCopy,MirroredEntities)	\
    ( (This)->lpVtbl -> Mirror3D(This,vPoint1,vPoint2,vPoint3,MakeCopy,MirroredEntities) ) 

#define IIcadSelectionSet_Move(This,vPoint1,vPoint2)	\
    ( (This)->lpVtbl -> Move(This,vPoint1,vPoint2) ) 

#define IIcadSelectionSet_Rotate(This,vBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,vBasePoint,RotationAngle) ) 

#define IIcadSelectionSet_Rotate3D(This,vPoint1,vPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,vPoint1,vPoint2,RotationAngle) ) 

#define IIcadSelectionSet_ScaleEntity(This,vBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,vBasePoint,ScaleFactor) ) 

#define IIcadSelectionSet_TransformBy(This,Matrix)	\
    ( (This)->lpVtbl -> TransformBy(This,Matrix) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadSelectionSet_INTERFACE_DEFINED__ */


#ifndef __IIcadSelectionSets_INTERFACE_DEFINED__
#define __IIcadSelectionSets_INTERFACE_DEFINED__

/* interface IIcadSelectionSets */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadSelectionSets;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ca23cdd4-9e1a-4ce3-9790-88572c9837e7")
    IIcadSelectionSets : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **ppParent) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadSelectionSet **ppItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadSelectionSet **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadSelectionSetsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadSelectionSets * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadSelectionSets * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadSelectionSets * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadSelectionSets * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadSelectionSets * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadSelectionSets * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadSelectionSets * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadSelectionSets * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadSelectionSets * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadSelectionSets * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadSelectionSets * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IIcadSelectionSets * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IIcadSelectionSet **ppItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadSelectionSets * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadSelectionSet **ppItem);
        
        END_INTERFACE
    } IIcadSelectionSetsVtbl;

    interface IIcadSelectionSets
    {
        CONST_VTBL struct IIcadSelectionSetsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadSelectionSets_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadSelectionSets_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadSelectionSets_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadSelectionSets_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadSelectionSets_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadSelectionSets_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadSelectionSets_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadSelectionSets_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadSelectionSets_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadSelectionSets_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadSelectionSets_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadSelectionSets_Add(This,Name,ppItem)	\
    ( (This)->lpVtbl -> Add(This,Name,ppItem) ) 

#define IIcadSelectionSets_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadSelectionSets_INTERFACE_DEFINED__ */


#ifndef __IIcadSummaryInfo_INTERFACE_DEFINED__
#define __IIcadSummaryInfo_INTERFACE_DEFINED__

/* interface IIcadSummaryInfo */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadSummaryInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("054557C6-BE04-42a4-8BCC-622C61855F7A")
    IIcadSummaryInfo : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *pbstrAuthor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Author( 
            /* [in] */ BSTR bstrAuthor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [retval][out] */ BSTR *pbstrComments) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Comments( 
            /* [in] */ BSTR bstrComments) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HyperlinkBase( 
            /* [retval][out] */ BSTR *pbstrHyperlink) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HyperlinkBase( 
            /* [in] */ BSTR bstrHyperlink) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Keywords( 
            /* [retval][out] */ BSTR *pbstrKeywords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Keywords( 
            /* [in] */ BSTR bstrKeywords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LastSavedBy( 
            /* [retval][out] */ BSTR *pbstrLastSavedBy) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LastSavedBy( 
            /* [in] */ BSTR bstrLastSavedBy) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RevisionNumber( 
            /* [retval][out] */ BSTR *pbstrRevisionNumber) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RevisionNumber( 
            /* [in] */ BSTR bstrRevisionNumber) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *pbstrSubject) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR bstrSubject) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *pbstrTitle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Title( 
            /* [in] */ BSTR bstrTitle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddCustomInfo( 
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCustomByIndex( 
            /* [in] */ long Index,
            /* [out][in] */ BSTR *pkey,
            /* [out][in] */ BSTR *pValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCustomByKey( 
            /* [in] */ BSTR key,
            /* [out][in] */ BSTR *pValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE NumCustomInfo( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveCustomByIndex( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveCustomByKey( 
            /* [in] */ BSTR key) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCustomByIndex( 
            /* [in] */ long Index,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCustomByKey( 
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadSummaryInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadSummaryInfo * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadSummaryInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadSummaryInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadSummaryInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadSummaryInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadSummaryInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadSummaryInfo * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrAuthor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Author )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrAuthor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrComments);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Comments )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrComments);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HyperlinkBase )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrHyperlink);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HyperlinkBase )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrHyperlink);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Keywords )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrKeywords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Keywords )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrKeywords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastSavedBy )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrLastSavedBy);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LastSavedBy )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrLastSavedBy);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RevisionNumber )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrRevisionNumber);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RevisionNumber )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrRevisionNumber);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrSubject);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrSubject);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ BSTR *pbstrTitle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR bstrTitle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCustomInfo )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCustomByIndex )( 
            IIcadSummaryInfo * This,
            /* [in] */ long Index,
            /* [out][in] */ BSTR *pkey,
            /* [out][in] */ BSTR *pValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCustomByKey )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR key,
            /* [out][in] */ BSTR *pValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NumCustomInfo )( 
            IIcadSummaryInfo * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveCustomByIndex )( 
            IIcadSummaryInfo * This,
            /* [in] */ long Index);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveCustomByKey )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR key);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCustomByIndex )( 
            IIcadSummaryInfo * This,
            /* [in] */ long Index,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCustomByKey )( 
            IIcadSummaryInfo * This,
            /* [in] */ BSTR key,
            /* [in] */ BSTR Value);
        
        END_INTERFACE
    } IIcadSummaryInfoVtbl;

    interface IIcadSummaryInfo
    {
        CONST_VTBL struct IIcadSummaryInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadSummaryInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadSummaryInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadSummaryInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadSummaryInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadSummaryInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadSummaryInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadSummaryInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadSummaryInfo_get_Author(This,pbstrAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pbstrAuthor) ) 

#define IIcadSummaryInfo_put_Author(This,bstrAuthor)	\
    ( (This)->lpVtbl -> put_Author(This,bstrAuthor) ) 

#define IIcadSummaryInfo_get_Comments(This,pbstrComments)	\
    ( (This)->lpVtbl -> get_Comments(This,pbstrComments) ) 

#define IIcadSummaryInfo_put_Comments(This,bstrComments)	\
    ( (This)->lpVtbl -> put_Comments(This,bstrComments) ) 

#define IIcadSummaryInfo_get_HyperlinkBase(This,pbstrHyperlink)	\
    ( (This)->lpVtbl -> get_HyperlinkBase(This,pbstrHyperlink) ) 

#define IIcadSummaryInfo_put_HyperlinkBase(This,bstrHyperlink)	\
    ( (This)->lpVtbl -> put_HyperlinkBase(This,bstrHyperlink) ) 

#define IIcadSummaryInfo_get_Keywords(This,pbstrKeywords)	\
    ( (This)->lpVtbl -> get_Keywords(This,pbstrKeywords) ) 

#define IIcadSummaryInfo_put_Keywords(This,bstrKeywords)	\
    ( (This)->lpVtbl -> put_Keywords(This,bstrKeywords) ) 

#define IIcadSummaryInfo_get_LastSavedBy(This,pbstrLastSavedBy)	\
    ( (This)->lpVtbl -> get_LastSavedBy(This,pbstrLastSavedBy) ) 

#define IIcadSummaryInfo_put_LastSavedBy(This,bstrLastSavedBy)	\
    ( (This)->lpVtbl -> put_LastSavedBy(This,bstrLastSavedBy) ) 

#define IIcadSummaryInfo_get_RevisionNumber(This,pbstrRevisionNumber)	\
    ( (This)->lpVtbl -> get_RevisionNumber(This,pbstrRevisionNumber) ) 

#define IIcadSummaryInfo_put_RevisionNumber(This,bstrRevisionNumber)	\
    ( (This)->lpVtbl -> put_RevisionNumber(This,bstrRevisionNumber) ) 

#define IIcadSummaryInfo_get_Subject(This,pbstrSubject)	\
    ( (This)->lpVtbl -> get_Subject(This,pbstrSubject) ) 

#define IIcadSummaryInfo_put_Subject(This,bstrSubject)	\
    ( (This)->lpVtbl -> put_Subject(This,bstrSubject) ) 

#define IIcadSummaryInfo_get_Title(This,pbstrTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pbstrTitle) ) 

#define IIcadSummaryInfo_put_Title(This,bstrTitle)	\
    ( (This)->lpVtbl -> put_Title(This,bstrTitle) ) 

#define IIcadSummaryInfo_AddCustomInfo(This,key,Value)	\
    ( (This)->lpVtbl -> AddCustomInfo(This,key,Value) ) 

#define IIcadSummaryInfo_GetCustomByIndex(This,Index,pkey,pValue)	\
    ( (This)->lpVtbl -> GetCustomByIndex(This,Index,pkey,pValue) ) 

#define IIcadSummaryInfo_GetCustomByKey(This,key,pValue)	\
    ( (This)->lpVtbl -> GetCustomByKey(This,key,pValue) ) 

#define IIcadSummaryInfo_NumCustomInfo(This,pCount)	\
    ( (This)->lpVtbl -> NumCustomInfo(This,pCount) ) 

#define IIcadSummaryInfo_RemoveCustomByIndex(This,Index)	\
    ( (This)->lpVtbl -> RemoveCustomByIndex(This,Index) ) 

#define IIcadSummaryInfo_RemoveCustomByKey(This,key)	\
    ( (This)->lpVtbl -> RemoveCustomByKey(This,key) ) 

#define IIcadSummaryInfo_SetCustomByIndex(This,Index,key,Value)	\
    ( (This)->lpVtbl -> SetCustomByIndex(This,Index,key,Value) ) 

#define IIcadSummaryInfo_SetCustomByKey(This,key,Value)	\
    ( (This)->lpVtbl -> SetCustomByKey(This,key,Value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadSummaryInfo_INTERFACE_DEFINED__ */


#ifndef __IIcadSortentsTable_INTERFACE_DEFINED__
#define __IIcadSortentsTable_INTERFACE_DEFINED__

/* interface IIcadSortentsTable */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadSortentsTable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5DA9BC06-2F09-42b2-8D31-BB7CC938B165")
    IIcadSortentsTable : public IIcadDbItem
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Block( 
            /* [retval][out] */ IIcadBlock **ppBlock) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFullDrawOrder( 
            /* [out][in] */ VARIANT *pObject,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetRelativeDrawOrder( 
            /* [out][in] */ VARIANT *pObject,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MoveAbove( 
            /* [in] */ VARIANT Object,
            /* [in] */ IIcadEntity *pTarget) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MoveBelow( 
            /* [in] */ VARIANT Object,
            /* [in] */ IIcadEntity *pTarget) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MoveToBottom( 
            /* [in] */ VARIANT Object) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MoveToTop( 
            /* [in] */ VARIANT Object) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetRelativeDrawOrder( 
            /* [in] */ VARIANT Object) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SwapOrder( 
            /* [in] */ IIcadEntity *pEntity1,
            /* [in] */ IIcadEntity *pEntity2) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadSortentsTableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadSortentsTable * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadSortentsTable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadSortentsTable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadSortentsTable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadSortentsTable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadSortentsTable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadSortentsTable * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadSortentsTable * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadSortentsTable * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadSortentsTable * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Block )( 
            IIcadSortentsTable * This,
            /* [retval][out] */ IIcadBlock **ppBlock);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFullDrawOrder )( 
            IIcadSortentsTable * This,
            /* [out][in] */ VARIANT *pObject,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelativeDrawOrder )( 
            IIcadSortentsTable * This,
            /* [out][in] */ VARIANT *pObject,
            /* [in] */ VARIANT_BOOL honorSortentsSysvar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MoveAbove )( 
            IIcadSortentsTable * This,
            /* [in] */ VARIANT Object,
            /* [in] */ IIcadEntity *pTarget);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MoveBelow )( 
            IIcadSortentsTable * This,
            /* [in] */ VARIANT Object,
            /* [in] */ IIcadEntity *pTarget);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MoveToBottom )( 
            IIcadSortentsTable * This,
            /* [in] */ VARIANT Object);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MoveToTop )( 
            IIcadSortentsTable * This,
            /* [in] */ VARIANT Object);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetRelativeDrawOrder )( 
            IIcadSortentsTable * This,
            /* [in] */ VARIANT Object);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SwapOrder )( 
            IIcadSortentsTable * This,
            /* [in] */ IIcadEntity *pEntity1,
            /* [in] */ IIcadEntity *pEntity2);
        
        END_INTERFACE
    } IIcadSortentsTableVtbl;

    interface IIcadSortentsTable
    {
        CONST_VTBL struct IIcadSortentsTableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadSortentsTable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadSortentsTable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadSortentsTable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadSortentsTable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadSortentsTable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadSortentsTable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadSortentsTable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadSortentsTable_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadSortentsTable_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadSortentsTable_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadSortentsTable_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadSortentsTable_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadSortentsTable__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadSortentsTable_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadSortentsTable_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadSortentsTable_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadSortentsTable_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadSortentsTable_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadSortentsTable_Block(This,ppBlock)	\
    ( (This)->lpVtbl -> Block(This,ppBlock) ) 

#define IIcadSortentsTable_GetFullDrawOrder(This,pObject,honorSortentsSysvar)	\
    ( (This)->lpVtbl -> GetFullDrawOrder(This,pObject,honorSortentsSysvar) ) 

#define IIcadSortentsTable_GetRelativeDrawOrder(This,pObject,honorSortentsSysvar)	\
    ( (This)->lpVtbl -> GetRelativeDrawOrder(This,pObject,honorSortentsSysvar) ) 

#define IIcadSortentsTable_MoveAbove(This,Object,pTarget)	\
    ( (This)->lpVtbl -> MoveAbove(This,Object,pTarget) ) 

#define IIcadSortentsTable_MoveBelow(This,Object,pTarget)	\
    ( (This)->lpVtbl -> MoveBelow(This,Object,pTarget) ) 

#define IIcadSortentsTable_MoveToBottom(This,Object)	\
    ( (This)->lpVtbl -> MoveToBottom(This,Object) ) 

#define IIcadSortentsTable_MoveToTop(This,Object)	\
    ( (This)->lpVtbl -> MoveToTop(This,Object) ) 

#define IIcadSortentsTable_SetRelativeDrawOrder(This,Object)	\
    ( (This)->lpVtbl -> SetRelativeDrawOrder(This,Object) ) 

#define IIcadSortentsTable_SwapOrder(This,pEntity1,pEntity2)	\
    ( (This)->lpVtbl -> SwapOrder(This,pEntity1,pEntity2) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadSortentsTable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_Icad_0000_0065 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0065_v0_0_s_ifspec;

#ifndef __IIcadEntity_INTERFACE_DEFINED__
#define __IIcadEntity_INTERFACE_DEFINED__

/* interface IIcadEntity */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadEntity;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("39464fec-d503-40db-91c1-f08d7e2a1ea9")
    IIcadEntity : public IIcadDbItem
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Color( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EntityName( 
            /* [retval][out] */ BSTR *pEntName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EntityType( 
            /* [retval][out] */ ZcEntityType *pType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Layer( 
            /* [retval][out] */ BSTR *pLayer) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Layer( 
            /* [in] */ BSTR Layer) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Linetype( 
            /* [retval][out] */ BSTR *pLinetype) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Linetype( 
            /* [in] */ BSTR Linetype) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinetypeScale( 
            /* [retval][out] */ double *LinetypeScale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinetypeScale( 
            /* [in] */ double LinetypeScale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *pVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Hyperlinks( 
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TrueColor( 
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TrueColor( 
            /* [in] */ IIcadAcCmColor *pAcCmColor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ArrayPolar( 
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ArrayRectangular( 
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IIcadEntity **ppCopy) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Erase( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetBoundingBox( 
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible = FALSE) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Highlight( 
            /* [in] */ VARIANT_BOOL HighlightFlag) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IntersectWith( 
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Mirror( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Mirror3D( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Rotate( 
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Rotate3D( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ScaleEntity( 
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TransformBy( 
            /* [in] */ VARIANT varMatrix) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Lineweight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Lineweight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadEntityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadEntity * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadEntity * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadEntity * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadEntity * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadEntity * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadEntity * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadEntity * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadEntity * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadEntity * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadEntity * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadEntity * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadEntity * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadEntity * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadEntity * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadEntity * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadEntity * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadEntity * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadEntity * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadEntity * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadEntity * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadEntity * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadEntity * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadEntity * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadEntity * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadEntity * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadEntity * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadEntity * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadEntity * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadEntity * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadEntity * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadEntity * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadEntity * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadEntity * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadEntity * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadEntity * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadEntity * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadEntity * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadEntity * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadEntity * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadEntity * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadEntity * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadEntity * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadEntity * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadEntity * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadEntity * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadEntity * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        END_INTERFACE
    } IIcadEntityVtbl;

    interface IIcadEntity
    {
        CONST_VTBL struct IIcadEntityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadEntity_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadEntity_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadEntity_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadEntity_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadEntity_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadEntity_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadEntity_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadEntity_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadEntity_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadEntity_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadEntity_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadEntity_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadEntity__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadEntity_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadEntity_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadEntity_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadEntity_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadEntity_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadEntity_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadEntity_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadEntity_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadEntity_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadEntity_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadEntity_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadEntity_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadEntity_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadEntity_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadEntity_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadEntity_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadEntity_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadEntity_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadEntity_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadEntity_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadEntity_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadEntity_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadEntity_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadEntity_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadEntity_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadEntity_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadEntity_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadEntity_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadEntity_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadEntity_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadEntity_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadEntity_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadEntity_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadEntity_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadEntity_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadEntity_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadEntity_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadEntity_INTERFACE_DEFINED__ */


#ifndef __IIcad3DFace_INTERFACE_DEFINED__
#define __IIcad3DFace_INTERFACE_DEFINED__

/* interface IIcad3DFace */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcad3DFace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e1e2d930-1346-4e17-9d6d-b2aac009fa57")
    IIcad3DFace : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge1( 
            /* [retval][out] */ VARIANT_BOOL *bVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge1( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge2( 
            /* [retval][out] */ VARIANT_BOOL *bVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge2( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge3( 
            /* [retval][out] */ VARIANT_BOOL *bVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge3( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VisibilityEdge4( 
            /* [retval][out] */ VARIANT_BOOL *bVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VisibilityEdge4( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetInvisibleEdge( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT_BOOL *pState) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetInvisibleEdge( 
            /* [in] */ int Index,
            /* [in] */ VARIANT_BOOL State) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcad3DFaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcad3DFace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcad3DFace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcad3DFace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcad3DFace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcad3DFace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcad3DFace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcad3DFace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcad3DFace * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcad3DFace * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcad3DFace * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcad3DFace * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcad3DFace * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcad3DFace * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcad3DFace * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcad3DFace * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcad3DFace * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcad3DFace * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcad3DFace * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcad3DFace * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcad3DFace * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcad3DFace * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcad3DFace * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcad3DFace * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcad3DFace * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcad3DFace * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcad3DFace * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcad3DFace * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcad3DFace * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcad3DFace * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcad3DFace * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcad3DFace * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcad3DFace * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcad3DFace * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcad3DFace * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcad3DFace * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcad3DFace * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcad3DFace * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcad3DFace * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge1 )( 
            IIcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge1 )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge2 )( 
            IIcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge2 )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge3 )( 
            IIcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge3 )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityEdge4 )( 
            IIcad3DFace * This,
            /* [retval][out] */ VARIANT_BOOL *bVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VisibilityEdge4 )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcad3DFace * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcad3DFace * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcad3DFace * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcad3DFace * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetInvisibleEdge )( 
            IIcad3DFace * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT_BOOL *pState);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetInvisibleEdge )( 
            IIcad3DFace * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT_BOOL State);
        
        END_INTERFACE
    } IIcad3DFaceVtbl;

    interface IIcad3DFace
    {
        CONST_VTBL struct IIcad3DFaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcad3DFace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcad3DFace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcad3DFace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcad3DFace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcad3DFace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcad3DFace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcad3DFace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcad3DFace_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcad3DFace_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcad3DFace_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcad3DFace_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcad3DFace_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcad3DFace__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcad3DFace_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcad3DFace_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcad3DFace_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcad3DFace_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcad3DFace_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcad3DFace_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcad3DFace_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcad3DFace_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcad3DFace_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcad3DFace_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcad3DFace_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcad3DFace_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcad3DFace_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcad3DFace_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcad3DFace_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcad3DFace_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcad3DFace_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcad3DFace_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcad3DFace_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcad3DFace_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcad3DFace_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcad3DFace_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcad3DFace_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcad3DFace_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcad3DFace_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcad3DFace_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcad3DFace_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcad3DFace_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcad3DFace_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcad3DFace_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcad3DFace_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcad3DFace_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcad3DFace_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcad3DFace_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcad3DFace_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcad3DFace_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcad3DFace_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcad3DFace_get_VisibilityEdge1(This,bVisible)	\
    ( (This)->lpVtbl -> get_VisibilityEdge1(This,bVisible) ) 

#define IIcad3DFace_put_VisibilityEdge1(This,Visible)	\
    ( (This)->lpVtbl -> put_VisibilityEdge1(This,Visible) ) 

#define IIcad3DFace_get_VisibilityEdge2(This,bVisible)	\
    ( (This)->lpVtbl -> get_VisibilityEdge2(This,bVisible) ) 

#define IIcad3DFace_put_VisibilityEdge2(This,Visible)	\
    ( (This)->lpVtbl -> put_VisibilityEdge2(This,Visible) ) 

#define IIcad3DFace_get_VisibilityEdge3(This,bVisible)	\
    ( (This)->lpVtbl -> get_VisibilityEdge3(This,bVisible) ) 

#define IIcad3DFace_put_VisibilityEdge3(This,Visible)	\
    ( (This)->lpVtbl -> put_VisibilityEdge3(This,Visible) ) 

#define IIcad3DFace_get_VisibilityEdge4(This,bVisible)	\
    ( (This)->lpVtbl -> get_VisibilityEdge4(This,bVisible) ) 

#define IIcad3DFace_put_VisibilityEdge4(This,Visible)	\
    ( (This)->lpVtbl -> put_VisibilityEdge4(This,Visible) ) 

#define IIcad3DFace_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcad3DFace_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcad3DFace_get_Coordinate(This,Index,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,pVarCoord) ) 

#define IIcad3DFace_put_Coordinate(This,Index,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,varCoord) ) 

#define IIcad3DFace_GetInvisibleEdge(This,Index,pState)	\
    ( (This)->lpVtbl -> GetInvisibleEdge(This,Index,pState) ) 

#define IIcad3DFace_SetInvisibleEdge(This,Index,State)	\
    ( (This)->lpVtbl -> SetInvisibleEdge(This,Index,State) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcad3DFace_INTERFACE_DEFINED__ */


#ifndef __IIcad3DPoly_INTERFACE_DEFINED__
#define __IIcad3DPoly_INTERFACE_DEFINED__

/* interface IIcad3DPoly */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcad3DPoly;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("15eddc8a-0d73-445f-8797-dafa8fa1cd8c")
    IIcad3DPoly : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *pClosed) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Closed( 
            /* [in] */ VARIANT_BOOL Closed) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConstantWidth( 
            /* [retval][out] */ double *pConstantWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ConstantWidth( 
            /* [in] */ double dblConstantWidth) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AppendVertex( 
            /* [in] */ VARIANT varVertex) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcad3DPolyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcad3DPoly * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcad3DPoly * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcad3DPoly * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcad3DPoly * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcad3DPoly * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcad3DPoly * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcad3DPoly * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcad3DPoly * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcad3DPoly * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcad3DPoly * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcad3DPoly * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcad3DPoly * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcad3DPoly * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcad3DPoly * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcad3DPoly * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcad3DPoly * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcad3DPoly * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcad3DPoly * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcad3DPoly * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcad3DPoly * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcad3DPoly * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcad3DPoly * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcad3DPoly * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcad3DPoly * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcad3DPoly * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcad3DPoly * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcad3DPoly * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcad3DPoly * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcad3DPoly * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcad3DPoly * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcad3DPoly * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcad3DPoly * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcad3DPoly * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IIcad3DPoly * This,
            /* [retval][out] */ VARIANT_BOOL *pClosed);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Closed )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT_BOOL Closed);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcad3DPoly * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcad3DPoly * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcad3DPoly * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConstantWidth )( 
            IIcad3DPoly * This,
            /* [retval][out] */ double *pConstantWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConstantWidth )( 
            IIcad3DPoly * This,
            /* [in] */ double dblConstantWidth);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IIcad3DPoly * This,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AppendVertex )( 
            IIcad3DPoly * This,
            /* [in] */ VARIANT varVertex);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IIcad3DPoly * This,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        END_INTERFACE
    } IIcad3DPolyVtbl;

    interface IIcad3DPoly
    {
        CONST_VTBL struct IIcad3DPolyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcad3DPoly_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcad3DPoly_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcad3DPoly_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcad3DPoly_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcad3DPoly_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcad3DPoly_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcad3DPoly_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcad3DPoly_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcad3DPoly_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcad3DPoly_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcad3DPoly_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcad3DPoly_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcad3DPoly__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcad3DPoly_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcad3DPoly_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcad3DPoly_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcad3DPoly_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcad3DPoly_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcad3DPoly_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcad3DPoly_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcad3DPoly_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcad3DPoly_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcad3DPoly_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcad3DPoly_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcad3DPoly_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcad3DPoly_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcad3DPoly_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcad3DPoly_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcad3DPoly_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcad3DPoly_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcad3DPoly_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcad3DPoly_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcad3DPoly_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcad3DPoly_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcad3DPoly_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcad3DPoly_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcad3DPoly_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcad3DPoly_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcad3DPoly_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcad3DPoly_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcad3DPoly_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcad3DPoly_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcad3DPoly_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcad3DPoly_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcad3DPoly_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcad3DPoly_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcad3DPoly_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcad3DPoly_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcad3DPoly_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcad3DPoly_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcad3DPoly_get_Closed(This,pClosed)	\
    ( (This)->lpVtbl -> get_Closed(This,pClosed) ) 

#define IIcad3DPoly_put_Closed(This,Closed)	\
    ( (This)->lpVtbl -> put_Closed(This,Closed) ) 

#define IIcad3DPoly_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcad3DPoly_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcad3DPoly_get_Coordinate(This,Index,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,pVarCoord) ) 

#define IIcad3DPoly_put_Coordinate(This,Index,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,varCoord) ) 

#define IIcad3DPoly_get_ConstantWidth(This,pConstantWidth)	\
    ( (This)->lpVtbl -> get_ConstantWidth(This,pConstantWidth) ) 

#define IIcad3DPoly_put_ConstantWidth(This,dblConstantWidth)	\
    ( (This)->lpVtbl -> put_ConstantWidth(This,dblConstantWidth) ) 

#define IIcad3DPoly_get_Length(This,pLength)	\
    ( (This)->lpVtbl -> get_Length(This,pLength) ) 

#define IIcad3DPoly_AppendVertex(This,varVertex)	\
    ( (This)->lpVtbl -> AppendVertex(This,varVertex) ) 

#define IIcad3DPoly_Explode(This,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Explode(This,ppArrayOfEntities) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcad3DPoly_INTERFACE_DEFINED__ */


#ifndef __IIcadArc_INTERFACE_DEFINED__
#define __IIcadArc_INTERFACE_DEFINED__

/* interface IIcadArc */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadArc;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1d3da10d-d0ed-4668-8a5a-b7cb943a145f")
    IIcadArc : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *pVarCenter) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT varCenter) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EndAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EndAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ VARIANT *pVarEndPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArcLength( 
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Radius( 
            /* [retval][out] */ double *pRadius) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Radius( 
            /* [in] */ double Radius) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StartAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ VARIANT *pVarStartPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TotalAngle( 
            /* [retval][out] */ double *pTotalAngle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadArcVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadArc * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadArc * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadArc * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadArc * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadArc * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadArc * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadArc * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadArc * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadArc * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadArc * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadArc * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadArc * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadArc * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadArc * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadArc * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadArc * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadArc * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadArc * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadArc * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadArc * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadArc * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadArc * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadArc * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadArc * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadArc * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadArc * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadArc * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadArc * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadArc * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadArc * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadArc * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadArc * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadArc * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadArc * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadArc * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadArc * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadArc * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadArc * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadArc * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadArc * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadArc * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadArc * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadArc * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadArc * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadArc * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadArc * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadArc * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadArc * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadArc * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadArc * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadArc * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IIcadArc * This,
            /* [retval][out] */ VARIANT *pVarCenter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IIcadArc * This,
            /* [in] */ VARIANT varCenter);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndAngle )( 
            IIcadArc * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndAngle )( 
            IIcadArc * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            IIcadArc * This,
            /* [retval][out] */ VARIANT *pVarEndPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadArc * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadArc * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcLength )( 
            IIcadArc * This,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Radius )( 
            IIcadArc * This,
            /* [retval][out] */ double *pRadius);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Radius )( 
            IIcadArc * This,
            /* [in] */ double Radius);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartAngle )( 
            IIcadArc * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartAngle )( 
            IIcadArc * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            IIcadArc * This,
            /* [retval][out] */ VARIANT *pVarStartPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadArc * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadArc * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TotalAngle )( 
            IIcadArc * This,
            /* [retval][out] */ double *pTotalAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadArc * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        END_INTERFACE
    } IIcadArcVtbl;

    interface IIcadArc
    {
        CONST_VTBL struct IIcadArcVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadArc_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadArc_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadArc_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadArc_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadArc_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadArc_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadArc_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadArc_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadArc_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadArc_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadArc_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadArc_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadArc__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadArc_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadArc_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadArc_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadArc_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadArc_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadArc_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadArc_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadArc_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadArc_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadArc_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadArc_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadArc_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadArc_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadArc_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadArc_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadArc_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadArc_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadArc_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadArc_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadArc_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadArc_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadArc_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadArc_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadArc_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadArc_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadArc_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadArc_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadArc_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadArc_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadArc_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadArc_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadArc_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadArc_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadArc_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadArc_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadArc_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadArc_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadArc_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadArc_get_Center(This,pVarCenter)	\
    ( (This)->lpVtbl -> get_Center(This,pVarCenter) ) 

#define IIcadArc_put_Center(This,varCenter)	\
    ( (This)->lpVtbl -> put_Center(This,varCenter) ) 

#define IIcadArc_get_EndAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_EndAngle(This,pAngle) ) 

#define IIcadArc_put_EndAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_EndAngle(This,Angle) ) 

#define IIcadArc_get_EndPoint(This,pVarEndPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,pVarEndPoint) ) 

#define IIcadArc_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadArc_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadArc_get_ArcLength(This,pLength)	\
    ( (This)->lpVtbl -> get_ArcLength(This,pLength) ) 

#define IIcadArc_get_Radius(This,pRadius)	\
    ( (This)->lpVtbl -> get_Radius(This,pRadius) ) 

#define IIcadArc_put_Radius(This,Radius)	\
    ( (This)->lpVtbl -> put_Radius(This,Radius) ) 

#define IIcadArc_get_StartAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_StartAngle(This,pAngle) ) 

#define IIcadArc_put_StartAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_StartAngle(This,Angle) ) 

#define IIcadArc_get_StartPoint(This,pVarStartPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,pVarStartPoint) ) 

#define IIcadArc_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadArc_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadArc_get_TotalAngle(This,pTotalAngle)	\
    ( (This)->lpVtbl -> get_TotalAngle(This,pTotalAngle) ) 

#define IIcadArc_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadArc_INTERFACE_DEFINED__ */


#ifndef __IIcadAttribute_INTERFACE_DEFINED__
#define __IIcadAttribute_INTERFACE_DEFINED__

/* interface IIcadAttribute */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9518e037-4c21-4d8a-b4eb-deb6a7632ee1")
    IIcadAttribute : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FieldLength( 
            /* [retval][out] */ int *pFieldLength) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FieldLength( 
            /* [in] */ int FieldLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignment( 
            /* [retval][out] */ ZcHorizontalAlignment *pHorizAlign) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalAlignment( 
            /* [in] */ ZcHorizontalAlignment HorizAlign) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *pVarInsertPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT varInsertPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ ZcAttributeMode *pMode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Mode( 
            /* [in] */ ZcAttributeMode Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Constant( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Constant( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Invisible( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Invisible( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Preset( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Preset( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Verify( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Verify( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PromptString( 
            /* [retval][out] */ BSTR *pPrompt) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PromptString( 
            /* [in] */ BSTR Propmt) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *pStyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TagString( 
            /* [retval][out] */ BSTR *pTag) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TagString( 
            /* [in] */ BSTR Tag) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextAlignmentPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ ZcTextGenerationFlag *pFlags) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ ZcTextGenerationFlag Flags) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ ZcAlignment *pAlignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ ZcAlignment pAlignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Backward( 
            /* [retval][out] */ VARIANT_BOOL *bBackward) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Backward( 
            /* [in] */ VARIANT_BOOL bBackward) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UpsideDown( 
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UpsideDown( 
            /* [in] */ VARIANT_BOOL bUpsideDown) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *pText) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignment( 
            /* [retval][out] */ ZcVerticalAlignment *pVertAlign) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalAlignment( 
            /* [in] */ ZcVerticalAlignment VertAlign) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadAttribute * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadAttribute * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadAttribute * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadAttribute * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadAttribute * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadAttribute * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadAttribute * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadAttribute * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadAttribute * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadAttribute * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadAttribute * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadAttribute * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadAttribute * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadAttribute * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadAttribute * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadAttribute * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadAttribute * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadAttribute * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadAttribute * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadAttribute * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadAttribute * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadAttribute * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadAttribute * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadAttribute * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadAttribute * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FieldLength )( 
            IIcadAttribute * This,
            /* [retval][out] */ int *pFieldLength);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FieldLength )( 
            IIcadAttribute * This,
            /* [in] */ int FieldLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadAttribute * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadAttribute * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcHorizontalAlignment *pHorizAlign);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            IIcadAttribute * This,
            /* [in] */ ZcHorizontalAlignment HorizAlign);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT *pVarInsertPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varInsertPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcAttributeMode *pMode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mode )( 
            IIcadAttribute * This,
            /* [in] */ ZcAttributeMode Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constant )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Constant )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Invisible )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Invisible )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preset )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preset )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Verify )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Verify )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IIcadAttribute * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IIcadAttribute * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PromptString )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pPrompt);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PromptString )( 
            IIcadAttribute * This,
            /* [in] */ BSTR Propmt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadAttribute * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadAttribute * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadAttribute * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadAttribute * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pStyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadAttribute * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TagString )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pTag);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TagString )( 
            IIcadAttribute * This,
            /* [in] */ BSTR Tag);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadAttribute * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadAttribute * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentPoint )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignmentPoint )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcTextGenerationFlag *pFlags);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IIcadAttribute * This,
            /* [in] */ ZcTextGenerationFlag Flags);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcAlignment *pAlignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            IIcadAttribute * This,
            /* [in] */ ZcAlignment pAlignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Backward )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bBackward);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Backward )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL bBackward);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpsideDown )( 
            IIcadAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpsideDown )( 
            IIcadAttribute * This,
            /* [in] */ VARIANT_BOOL bUpsideDown);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadAttribute * This,
            /* [retval][out] */ BSTR *pText);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadAttribute * This,
            /* [in] */ BSTR Text);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            IIcadAttribute * This,
            /* [retval][out] */ ZcVerticalAlignment *pVertAlign);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            IIcadAttribute * This,
            /* [in] */ ZcVerticalAlignment VertAlign);
        
        END_INTERFACE
    } IIcadAttributeVtbl;

    interface IIcadAttribute
    {
        CONST_VTBL struct IIcadAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadAttribute_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadAttribute_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadAttribute_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadAttribute_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadAttribute_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadAttribute__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadAttribute_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadAttribute_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadAttribute_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadAttribute_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadAttribute_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadAttribute_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadAttribute_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadAttribute_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadAttribute_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadAttribute_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadAttribute_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadAttribute_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadAttribute_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadAttribute_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadAttribute_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadAttribute_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadAttribute_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadAttribute_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadAttribute_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadAttribute_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadAttribute_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadAttribute_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadAttribute_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadAttribute_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadAttribute_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadAttribute_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadAttribute_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadAttribute_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadAttribute_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadAttribute_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadAttribute_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadAttribute_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadAttribute_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadAttribute_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadAttribute_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadAttribute_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadAttribute_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadAttribute_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadAttribute_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadAttribute_get_FieldLength(This,pFieldLength)	\
    ( (This)->lpVtbl -> get_FieldLength(This,pFieldLength) ) 

#define IIcadAttribute_put_FieldLength(This,FieldLength)	\
    ( (This)->lpVtbl -> put_FieldLength(This,FieldLength) ) 

#define IIcadAttribute_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadAttribute_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadAttribute_get_HorizontalAlignment(This,pHorizAlign)	\
    ( (This)->lpVtbl -> get_HorizontalAlignment(This,pHorizAlign) ) 

#define IIcadAttribute_put_HorizontalAlignment(This,HorizAlign)	\
    ( (This)->lpVtbl -> put_HorizontalAlignment(This,HorizAlign) ) 

#define IIcadAttribute_get_InsertionPoint(This,pVarInsertPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,pVarInsertPoint) ) 

#define IIcadAttribute_put_InsertionPoint(This,varInsertPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,varInsertPoint) ) 

#define IIcadAttribute_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IIcadAttribute_put_Mode(This,Mode)	\
    ( (This)->lpVtbl -> put_Mode(This,Mode) ) 

#define IIcadAttribute_get_Constant(This,Mode)	\
    ( (This)->lpVtbl -> get_Constant(This,Mode) ) 

#define IIcadAttribute_put_Constant(This,Mode)	\
    ( (This)->lpVtbl -> put_Constant(This,Mode) ) 

#define IIcadAttribute_get_Invisible(This,Mode)	\
    ( (This)->lpVtbl -> get_Invisible(This,Mode) ) 

#define IIcadAttribute_put_Invisible(This,Mode)	\
    ( (This)->lpVtbl -> put_Invisible(This,Mode) ) 

#define IIcadAttribute_get_Preset(This,Mode)	\
    ( (This)->lpVtbl -> get_Preset(This,Mode) ) 

#define IIcadAttribute_put_Preset(This,Mode)	\
    ( (This)->lpVtbl -> put_Preset(This,Mode) ) 

#define IIcadAttribute_get_Verify(This,Mode)	\
    ( (This)->lpVtbl -> get_Verify(This,Mode) ) 

#define IIcadAttribute_put_Verify(This,Mode)	\
    ( (This)->lpVtbl -> put_Verify(This,Mode) ) 

#define IIcadAttribute_get_ObliqueAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_ObliqueAngle(This,pAngle) ) 

#define IIcadAttribute_put_ObliqueAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_ObliqueAngle(This,Angle) ) 

#define IIcadAttribute_get_PromptString(This,pPrompt)	\
    ( (This)->lpVtbl -> get_PromptString(This,pPrompt) ) 

#define IIcadAttribute_put_PromptString(This,Propmt)	\
    ( (This)->lpVtbl -> put_PromptString(This,Propmt) ) 

#define IIcadAttribute_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadAttribute_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadAttribute_get_ScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,pScaleFactor) ) 

#define IIcadAttribute_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadAttribute_get_StyleName(This,pStyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,pStyleName) ) 

#define IIcadAttribute_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadAttribute_get_TagString(This,pTag)	\
    ( (This)->lpVtbl -> get_TagString(This,pTag) ) 

#define IIcadAttribute_put_TagString(This,Tag)	\
    ( (This)->lpVtbl -> put_TagString(This,Tag) ) 

#define IIcadAttribute_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadAttribute_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadAttribute_get_TextAlignmentPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_TextAlignmentPoint(This,pVarPoint) ) 

#define IIcadAttribute_put_TextAlignmentPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_TextAlignmentPoint(This,varPoint) ) 

#define IIcadAttribute_get_TextGenerationFlag(This,pFlags)	\
    ( (This)->lpVtbl -> get_TextGenerationFlag(This,pFlags) ) 

#define IIcadAttribute_put_TextGenerationFlag(This,Flags)	\
    ( (This)->lpVtbl -> put_TextGenerationFlag(This,Flags) ) 

#define IIcadAttribute_get_Alignment(This,pAlignment)	\
    ( (This)->lpVtbl -> get_Alignment(This,pAlignment) ) 

#define IIcadAttribute_put_Alignment(This,pAlignment)	\
    ( (This)->lpVtbl -> put_Alignment(This,pAlignment) ) 

#define IIcadAttribute_get_Backward(This,bBackward)	\
    ( (This)->lpVtbl -> get_Backward(This,bBackward) ) 

#define IIcadAttribute_put_Backward(This,bBackward)	\
    ( (This)->lpVtbl -> put_Backward(This,bBackward) ) 

#define IIcadAttribute_get_UpsideDown(This,bUpsideDown)	\
    ( (This)->lpVtbl -> get_UpsideDown(This,bUpsideDown) ) 

#define IIcadAttribute_put_UpsideDown(This,bUpsideDown)	\
    ( (This)->lpVtbl -> put_UpsideDown(This,bUpsideDown) ) 

#define IIcadAttribute_get_TextString(This,pText)	\
    ( (This)->lpVtbl -> get_TextString(This,pText) ) 

#define IIcadAttribute_put_TextString(This,Text)	\
    ( (This)->lpVtbl -> put_TextString(This,Text) ) 

#define IIcadAttribute_get_VerticalAlignment(This,pVertAlign)	\
    ( (This)->lpVtbl -> get_VerticalAlignment(This,pVertAlign) ) 

#define IIcadAttribute_put_VerticalAlignment(This,VertAlign)	\
    ( (This)->lpVtbl -> put_VerticalAlignment(This,VertAlign) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadAttribute_INTERFACE_DEFINED__ */


#ifndef __IIcadAttributeReference_INTERFACE_DEFINED__
#define __IIcadAttributeReference_INTERFACE_DEFINED__

/* interface IIcadAttributeReference */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadAttributeReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("463e31c4-c833-4f17-871c-886d3a685512")
    IIcadAttributeReference : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FieldLength( 
            /* [retval][out] */ int *pFieldLength) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FieldLength( 
            /* [in] */ int FieldLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignment( 
            /* [retval][out] */ ZcHorizontalAlignment *pHorizAlign) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalAlignment( 
            /* [in] */ ZcHorizontalAlignment HorizAlign) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *pVarInsertPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT varInsertPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Constant( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Constant( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Invisible( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Invisible( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Preset( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Preset( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Verify( 
            /* [retval][out] */ VARIANT_BOOL *Mode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Verify( 
            /* [in] */ VARIANT_BOOL Mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *pStyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TagString( 
            /* [retval][out] */ BSTR *pTag) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TagString( 
            /* [in] */ BSTR Tag) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextAlignmentPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ ZcTextGenerationFlag *pFlags) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ ZcTextGenerationFlag Flags) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ ZcAlignment *pAlignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ ZcAlignment pAlignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Backward( 
            /* [retval][out] */ VARIANT_BOOL *bBackward) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Backward( 
            /* [in] */ VARIANT_BOOL bBackward) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UpsideDown( 
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UpsideDown( 
            /* [in] */ VARIANT_BOOL bUpsideDown) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *pText) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignment( 
            /* [retval][out] */ ZcVerticalAlignment *pVertAlign) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalAlignment( 
            /* [in] */ ZcVerticalAlignment VertAlign) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadAttributeReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadAttributeReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadAttributeReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadAttributeReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadAttributeReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadAttributeReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadAttributeReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadAttributeReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadAttributeReference * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadAttributeReference * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadAttributeReference * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadAttributeReference * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadAttributeReference * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadAttributeReference * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadAttributeReference * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadAttributeReference * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadAttributeReference * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadAttributeReference * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadAttributeReference * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadAttributeReference * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadAttributeReference * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadAttributeReference * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FieldLength )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ int *pFieldLength);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FieldLength )( 
            IIcadAttributeReference * This,
            /* [in] */ int FieldLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadAttributeReference * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ ZcHorizontalAlignment *pHorizAlign);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            IIcadAttributeReference * This,
            /* [in] */ ZcHorizontalAlignment HorizAlign);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT *pVarInsertPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varInsertPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constant )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Constant )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Invisible )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Invisible )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preset )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preset )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Verify )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *Mode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Verify )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL Mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IIcadAttributeReference * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadAttributeReference * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadAttributeReference * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ BSTR *pStyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadAttributeReference * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TagString )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ BSTR *pTag);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TagString )( 
            IIcadAttributeReference * This,
            /* [in] */ BSTR Tag);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadAttributeReference * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentPoint )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignmentPoint )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ ZcTextGenerationFlag *pFlags);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IIcadAttributeReference * This,
            /* [in] */ ZcTextGenerationFlag Flags);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ ZcAlignment *pAlignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            IIcadAttributeReference * This,
            /* [in] */ ZcAlignment pAlignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Backward )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bBackward);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Backward )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL bBackward);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpsideDown )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpsideDown )( 
            IIcadAttributeReference * This,
            /* [in] */ VARIANT_BOOL bUpsideDown);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ BSTR *pText);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadAttributeReference * This,
            /* [in] */ BSTR Text);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            IIcadAttributeReference * This,
            /* [retval][out] */ ZcVerticalAlignment *pVertAlign);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            IIcadAttributeReference * This,
            /* [in] */ ZcVerticalAlignment VertAlign);
        
        END_INTERFACE
    } IIcadAttributeReferenceVtbl;

    interface IIcadAttributeReference
    {
        CONST_VTBL struct IIcadAttributeReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadAttributeReference_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadAttributeReference_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadAttributeReference_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadAttributeReference_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadAttributeReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadAttributeReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadAttributeReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadAttributeReference_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadAttributeReference_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadAttributeReference_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadAttributeReference_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadAttributeReference_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadAttributeReference__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadAttributeReference_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadAttributeReference_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadAttributeReference_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadAttributeReference_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadAttributeReference_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadAttributeReference_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadAttributeReference_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadAttributeReference_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadAttributeReference_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadAttributeReference_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadAttributeReference_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadAttributeReference_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadAttributeReference_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadAttributeReference_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadAttributeReference_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadAttributeReference_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadAttributeReference_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadAttributeReference_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadAttributeReference_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadAttributeReference_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadAttributeReference_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadAttributeReference_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadAttributeReference_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadAttributeReference_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadAttributeReference_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadAttributeReference_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadAttributeReference_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadAttributeReference_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadAttributeReference_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadAttributeReference_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadAttributeReference_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadAttributeReference_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadAttributeReference_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadAttributeReference_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadAttributeReference_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadAttributeReference_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadAttributeReference_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadAttributeReference_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadAttributeReference_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadAttributeReference_get_FieldLength(This,pFieldLength)	\
    ( (This)->lpVtbl -> get_FieldLength(This,pFieldLength) ) 

#define IIcadAttributeReference_put_FieldLength(This,FieldLength)	\
    ( (This)->lpVtbl -> put_FieldLength(This,FieldLength) ) 

#define IIcadAttributeReference_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadAttributeReference_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadAttributeReference_get_HorizontalAlignment(This,pHorizAlign)	\
    ( (This)->lpVtbl -> get_HorizontalAlignment(This,pHorizAlign) ) 

#define IIcadAttributeReference_put_HorizontalAlignment(This,HorizAlign)	\
    ( (This)->lpVtbl -> put_HorizontalAlignment(This,HorizAlign) ) 

#define IIcadAttributeReference_get_InsertionPoint(This,pVarInsertPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,pVarInsertPoint) ) 

#define IIcadAttributeReference_put_InsertionPoint(This,varInsertPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,varInsertPoint) ) 

#define IIcadAttributeReference_get_Constant(This,Mode)	\
    ( (This)->lpVtbl -> get_Constant(This,Mode) ) 

#define IIcadAttributeReference_put_Constant(This,Mode)	\
    ( (This)->lpVtbl -> put_Constant(This,Mode) ) 

#define IIcadAttributeReference_get_Invisible(This,Mode)	\
    ( (This)->lpVtbl -> get_Invisible(This,Mode) ) 

#define IIcadAttributeReference_put_Invisible(This,Mode)	\
    ( (This)->lpVtbl -> put_Invisible(This,Mode) ) 

#define IIcadAttributeReference_get_Preset(This,Mode)	\
    ( (This)->lpVtbl -> get_Preset(This,Mode) ) 

#define IIcadAttributeReference_put_Preset(This,Mode)	\
    ( (This)->lpVtbl -> put_Preset(This,Mode) ) 

#define IIcadAttributeReference_get_Verify(This,Mode)	\
    ( (This)->lpVtbl -> get_Verify(This,Mode) ) 

#define IIcadAttributeReference_put_Verify(This,Mode)	\
    ( (This)->lpVtbl -> put_Verify(This,Mode) ) 

#define IIcadAttributeReference_get_ObliqueAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_ObliqueAngle(This,pAngle) ) 

#define IIcadAttributeReference_put_ObliqueAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_ObliqueAngle(This,Angle) ) 

#define IIcadAttributeReference_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadAttributeReference_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadAttributeReference_get_ScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,pScaleFactor) ) 

#define IIcadAttributeReference_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadAttributeReference_get_StyleName(This,pStyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,pStyleName) ) 

#define IIcadAttributeReference_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadAttributeReference_get_TagString(This,pTag)	\
    ( (This)->lpVtbl -> get_TagString(This,pTag) ) 

#define IIcadAttributeReference_put_TagString(This,Tag)	\
    ( (This)->lpVtbl -> put_TagString(This,Tag) ) 

#define IIcadAttributeReference_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadAttributeReference_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadAttributeReference_get_TextAlignmentPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_TextAlignmentPoint(This,pVarPoint) ) 

#define IIcadAttributeReference_put_TextAlignmentPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_TextAlignmentPoint(This,varPoint) ) 

#define IIcadAttributeReference_get_TextGenerationFlag(This,pFlags)	\
    ( (This)->lpVtbl -> get_TextGenerationFlag(This,pFlags) ) 

#define IIcadAttributeReference_put_TextGenerationFlag(This,Flags)	\
    ( (This)->lpVtbl -> put_TextGenerationFlag(This,Flags) ) 

#define IIcadAttributeReference_get_Alignment(This,pAlignment)	\
    ( (This)->lpVtbl -> get_Alignment(This,pAlignment) ) 

#define IIcadAttributeReference_put_Alignment(This,pAlignment)	\
    ( (This)->lpVtbl -> put_Alignment(This,pAlignment) ) 

#define IIcadAttributeReference_get_Backward(This,bBackward)	\
    ( (This)->lpVtbl -> get_Backward(This,bBackward) ) 

#define IIcadAttributeReference_put_Backward(This,bBackward)	\
    ( (This)->lpVtbl -> put_Backward(This,bBackward) ) 

#define IIcadAttributeReference_get_UpsideDown(This,bUpsideDown)	\
    ( (This)->lpVtbl -> get_UpsideDown(This,bUpsideDown) ) 

#define IIcadAttributeReference_put_UpsideDown(This,bUpsideDown)	\
    ( (This)->lpVtbl -> put_UpsideDown(This,bUpsideDown) ) 

#define IIcadAttributeReference_get_TextString(This,pText)	\
    ( (This)->lpVtbl -> get_TextString(This,pText) ) 

#define IIcadAttributeReference_put_TextString(This,Text)	\
    ( (This)->lpVtbl -> put_TextString(This,Text) ) 

#define IIcadAttributeReference_get_VerticalAlignment(This,pVertAlign)	\
    ( (This)->lpVtbl -> get_VerticalAlignment(This,pVertAlign) ) 

#define IIcadAttributeReference_put_VerticalAlignment(This,VertAlign)	\
    ( (This)->lpVtbl -> put_VerticalAlignment(This,VertAlign) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadAttributeReference_INTERFACE_DEFINED__ */


#ifndef __IIcadAttributeReferences_INTERFACE_DEFINED__
#define __IIcadAttributeReferences_INTERFACE_DEFINED__

/* interface IIcadAttributeReferences */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadAttributeReferences;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9084c296-4e98-4fb6-8735-e0c62a04ff1f")
    IIcadAttributeReferences : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppParent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadAttributeReference **ppItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadAttributeReferencesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadAttributeReferences * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadAttributeReferences * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadAttributeReferences * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadAttributeReferences * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadAttributeReferences * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadAttributeReferences * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadAttributeReferences * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadAttributeReferences * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadAttributeReferences * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadAttributeReferences * This,
            /* [retval][out] */ long *pCount);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadAttributeReferences * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadAttributeReferences * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IIcadAttributeReference **ppItem);
        
        END_INTERFACE
    } IIcadAttributeReferencesVtbl;

    interface IIcadAttributeReferences
    {
        CONST_VTBL struct IIcadAttributeReferencesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadAttributeReferences_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadAttributeReferences_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadAttributeReferences_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadAttributeReferences_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadAttributeReferences_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadAttributeReferences_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadAttributeReferences_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadAttributeReferences_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadAttributeReferences_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadAttributeReferences_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadAttributeReferences_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadAttributeReferences_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadAttributeReferences_INTERFACE_DEFINED__ */


#ifndef __IIcadBlockReference_INTERFACE_DEFINED__
#define __IIcadBlockReference_INTERFACE_DEFINED__

/* interface IIcadBlockReference */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadBlockReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29f47918-588b-424a-a121-b59fd30cca6f")
    IIcadBlockReference : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *pVarInsertPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT varInsertPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pBlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR NewBlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasAttributes( 
            /* [retval][out] */ VARIANT_BOOL *pbHasAttributes) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_XScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_XScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_YScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_YScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ZScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ZScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ IIcadSelectionSet **pObjects) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [retval][out] */ VARIANT *pVarAttributes) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetConstantAttributes( 
            /* [retval][out] */ VARIANT *pvarConstantAttrs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadBlockReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadBlockReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadBlockReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadBlockReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadBlockReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadBlockReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadBlockReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadBlockReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadBlockReference * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadBlockReference * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadBlockReference * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadBlockReference * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadBlockReference * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadBlockReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadBlockReference * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadBlockReference * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadBlockReference * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadBlockReference * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadBlockReference * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadBlockReference * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadBlockReference * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadBlockReference * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadBlockReference * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadBlockReference * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadBlockReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadBlockReference * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadBlockReference * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadBlockReference * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadBlockReference * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadBlockReference * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadBlockReference * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadBlockReference * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadBlockReference * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadBlockReference * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadBlockReference * This,
            /* [retval][out] */ VARIANT *pVarInsertPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varInsertPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadBlockReference * This,
            /* [retval][out] */ BSTR *pBlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadBlockReference * This,
            /* [in] */ BSTR NewBlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadBlockReference * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadBlockReference * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasAttributes )( 
            IIcadBlockReference * This,
            /* [retval][out] */ VARIANT_BOOL *pbHasAttributes);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadBlockReference * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadBlockReference * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_XScaleFactor )( 
            IIcadBlockReference * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_XScaleFactor )( 
            IIcadBlockReference * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_YScaleFactor )( 
            IIcadBlockReference * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_YScaleFactor )( 
            IIcadBlockReference * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZScaleFactor )( 
            IIcadBlockReference * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZScaleFactor )( 
            IIcadBlockReference * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IIcadBlockReference * This,
            /* [retval][out] */ IIcadSelectionSet **pObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAttributes )( 
            IIcadBlockReference * This,
            /* [retval][out] */ VARIANT *pVarAttributes);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetConstantAttributes )( 
            IIcadBlockReference * This,
            /* [retval][out] */ VARIANT *pvarConstantAttrs);
        
        END_INTERFACE
    } IIcadBlockReferenceVtbl;

    interface IIcadBlockReference
    {
        CONST_VTBL struct IIcadBlockReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadBlockReference_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadBlockReference_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadBlockReference_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadBlockReference_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadBlockReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadBlockReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadBlockReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadBlockReference_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadBlockReference_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadBlockReference_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadBlockReference_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadBlockReference_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadBlockReference__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadBlockReference_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadBlockReference_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadBlockReference_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadBlockReference_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadBlockReference_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadBlockReference_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadBlockReference_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadBlockReference_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadBlockReference_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadBlockReference_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadBlockReference_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadBlockReference_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadBlockReference_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadBlockReference_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadBlockReference_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadBlockReference_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadBlockReference_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadBlockReference_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadBlockReference_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadBlockReference_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadBlockReference_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadBlockReference_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadBlockReference_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadBlockReference_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadBlockReference_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadBlockReference_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadBlockReference_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadBlockReference_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadBlockReference_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadBlockReference_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadBlockReference_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadBlockReference_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadBlockReference_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadBlockReference_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadBlockReference_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadBlockReference_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadBlockReference_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadBlockReference_get_InsertionPoint(This,pVarInsertPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,pVarInsertPoint) ) 

#define IIcadBlockReference_put_InsertionPoint(This,varInsertPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,varInsertPoint) ) 

#define IIcadBlockReference_get_Name(This,pBlockName)	\
    ( (This)->lpVtbl -> get_Name(This,pBlockName) ) 

#define IIcadBlockReference_put_Name(This,NewBlockName)	\
    ( (This)->lpVtbl -> put_Name(This,NewBlockName) ) 

#define IIcadBlockReference_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadBlockReference_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadBlockReference_get_HasAttributes(This,pbHasAttributes)	\
    ( (This)->lpVtbl -> get_HasAttributes(This,pbHasAttributes) ) 

#define IIcadBlockReference_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadBlockReference_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadBlockReference_get_XScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_XScaleFactor(This,pScaleFactor) ) 

#define IIcadBlockReference_put_XScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_XScaleFactor(This,ScaleFactor) ) 

#define IIcadBlockReference_get_YScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_YScaleFactor(This,pScaleFactor) ) 

#define IIcadBlockReference_put_YScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_YScaleFactor(This,ScaleFactor) ) 

#define IIcadBlockReference_get_ZScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_ZScaleFactor(This,pScaleFactor) ) 

#define IIcadBlockReference_put_ZScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ZScaleFactor(This,ScaleFactor) ) 

#define IIcadBlockReference_Explode(This,pObjects)	\
    ( (This)->lpVtbl -> Explode(This,pObjects) ) 

#define IIcadBlockReference_GetAttributes(This,pVarAttributes)	\
    ( (This)->lpVtbl -> GetAttributes(This,pVarAttributes) ) 

#define IIcadBlockReference_GetConstantAttributes(This,pvarConstantAttrs)	\
    ( (This)->lpVtbl -> GetConstantAttributes(This,pvarConstantAttrs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadBlockReference_INTERFACE_DEFINED__ */


#ifndef __IIcadCircle_INTERFACE_DEFINED__
#define __IIcadCircle_INTERFACE_DEFINED__

/* interface IIcadCircle */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadCircle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6e71d9f3-5ceb-4866-9b19-9d7eca8321e1")
    IIcadCircle : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Circumference( 
            /* [retval][out] */ double *pCircumference) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *pVarCenter) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT varCenter) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Radius( 
            /* [retval][out] */ double *pRadius) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Radius( 
            /* [in] */ double Radius) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Diameter( 
            /* [retval][out] */ double *pDiameter) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Diameter( 
            /* [in] */ double dblDiameter) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadCircleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadCircle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadCircle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadCircle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadCircle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadCircle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadCircle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadCircle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadCircle * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadCircle * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadCircle * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadCircle * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadCircle * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadCircle * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadCircle * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadCircle * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadCircle * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadCircle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadCircle * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadCircle * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadCircle * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadCircle * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadCircle * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadCircle * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadCircle * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadCircle * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadCircle * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadCircle * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadCircle * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadCircle * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadCircle * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadCircle * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadCircle * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadCircle * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadCircle * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadCircle * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadCircle * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadCircle * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadCircle * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadCircle * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadCircle * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadCircle * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadCircle * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadCircle * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadCircle * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Circumference )( 
            IIcadCircle * This,
            /* [retval][out] */ double *pCircumference);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IIcadCircle * This,
            /* [retval][out] */ VARIANT *pVarCenter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varCenter);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadCircle * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadCircle * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Radius )( 
            IIcadCircle * This,
            /* [retval][out] */ double *pRadius);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Radius )( 
            IIcadCircle * This,
            /* [in] */ double Radius);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadCircle * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadCircle * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Diameter )( 
            IIcadCircle * This,
            /* [retval][out] */ double *pDiameter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Diameter )( 
            IIcadCircle * This,
            /* [in] */ double dblDiameter);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadCircle * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        END_INTERFACE
    } IIcadCircleVtbl;

    interface IIcadCircle
    {
        CONST_VTBL struct IIcadCircleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadCircle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadCircle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadCircle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadCircle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadCircle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadCircle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadCircle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadCircle_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadCircle_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadCircle_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadCircle_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadCircle_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadCircle__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadCircle_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadCircle_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadCircle_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadCircle_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadCircle_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadCircle_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadCircle_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadCircle_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadCircle_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadCircle_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadCircle_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadCircle_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadCircle_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadCircle_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadCircle_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadCircle_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadCircle_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadCircle_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadCircle_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadCircle_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadCircle_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadCircle_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadCircle_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadCircle_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadCircle_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadCircle_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadCircle_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadCircle_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadCircle_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadCircle_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadCircle_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadCircle_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadCircle_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadCircle_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadCircle_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadCircle_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadCircle_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadCircle_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadCircle_get_Circumference(This,pCircumference)	\
    ( (This)->lpVtbl -> get_Circumference(This,pCircumference) ) 

#define IIcadCircle_get_Center(This,pVarCenter)	\
    ( (This)->lpVtbl -> get_Center(This,pVarCenter) ) 

#define IIcadCircle_put_Center(This,varCenter)	\
    ( (This)->lpVtbl -> put_Center(This,varCenter) ) 

#define IIcadCircle_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadCircle_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadCircle_get_Radius(This,pRadius)	\
    ( (This)->lpVtbl -> get_Radius(This,pRadius) ) 

#define IIcadCircle_put_Radius(This,Radius)	\
    ( (This)->lpVtbl -> put_Radius(This,Radius) ) 

#define IIcadCircle_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadCircle_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadCircle_get_Diameter(This,pDiameter)	\
    ( (This)->lpVtbl -> get_Diameter(This,pDiameter) ) 

#define IIcadCircle_put_Diameter(This,dblDiameter)	\
    ( (This)->lpVtbl -> put_Diameter(This,dblDiameter) ) 

#define IIcadCircle_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadCircle_INTERFACE_DEFINED__ */


#ifndef __IIcadEllipse_INTERFACE_DEFINED__
#define __IIcadEllipse_INTERFACE_DEFINED__

/* interface IIcadEllipse */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadEllipse;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c7950cd7-04fd-4c1a-bc7f-e57c21c4f79c")
    IIcadEllipse : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *pVarCenter) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT varCenter) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EndAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EndAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EndParameter( 
            /* [retval][out] */ double *pParam) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EndParameter( 
            /* [in] */ double Param) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ VARIANT *pVarEndPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MajorAxis( 
            /* [retval][out] */ VARIANT *pVarMajorAxis) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MajorAxis( 
            /* [in] */ VARIANT varMajorAxis) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MinorAxis( 
            /* [retval][out] */ VARIANT *pVarMinorAxis) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RadiusRatio( 
            /* [retval][out] */ double *pRadius) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RadiusRatio( 
            /* [in] */ double Radius) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StartAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StartParameter( 
            /* [retval][out] */ double *pParam) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartParameter( 
            /* [in] */ double Param) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ VARIANT *pVarStartPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MajorRadius( 
            /* [retval][out] */ double *MajRadius) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MinorRadius( 
            /* [retval][out] */ double *MinRadius) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadEllipseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadEllipse * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadEllipse * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadEllipse * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadEllipse * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadEllipse * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadEllipse * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadEllipse * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadEllipse * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadEllipse * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadEllipse * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadEllipse * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadEllipse * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadEllipse * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadEllipse * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadEllipse * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadEllipse * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadEllipse * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadEllipse * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadEllipse * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadEllipse * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadEllipse * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadEllipse * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadEllipse * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadEllipse * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadEllipse * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadEllipse * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadEllipse * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadEllipse * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadEllipse * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadEllipse * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadEllipse * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadEllipse * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadEllipse * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadEllipse * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadEllipse * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadEllipse * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadEllipse * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT *pVarCenter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varCenter);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndAngle )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndAngle )( 
            IIcadEllipse * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndParameter )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *pParam);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndParameter )( 
            IIcadEllipse * This,
            /* [in] */ double Param);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT *pVarEndPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MajorAxis )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT *pVarMajorAxis);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MajorAxis )( 
            IIcadEllipse * This,
            /* [in] */ VARIANT varMajorAxis);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinorAxis )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT *pVarMinorAxis);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RadiusRatio )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *pRadius);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RadiusRatio )( 
            IIcadEllipse * This,
            /* [in] */ double Radius);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartAngle )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartAngle )( 
            IIcadEllipse * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartParameter )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *pParam);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartParameter )( 
            IIcadEllipse * This,
            /* [in] */ double Param);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            IIcadEllipse * This,
            /* [retval][out] */ VARIANT *pVarStartPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MajorRadius )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *MajRadius);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinorRadius )( 
            IIcadEllipse * This,
            /* [retval][out] */ double *MinRadius);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadEllipse * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        END_INTERFACE
    } IIcadEllipseVtbl;

    interface IIcadEllipse
    {
        CONST_VTBL struct IIcadEllipseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadEllipse_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadEllipse_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadEllipse_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadEllipse_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadEllipse_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadEllipse_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadEllipse_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadEllipse_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadEllipse_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadEllipse_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadEllipse_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadEllipse_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadEllipse__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadEllipse_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadEllipse_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadEllipse_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadEllipse_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadEllipse_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadEllipse_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadEllipse_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadEllipse_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadEllipse_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadEllipse_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadEllipse_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadEllipse_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadEllipse_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadEllipse_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadEllipse_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadEllipse_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadEllipse_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadEllipse_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadEllipse_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadEllipse_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadEllipse_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadEllipse_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadEllipse_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadEllipse_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadEllipse_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadEllipse_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadEllipse_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadEllipse_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadEllipse_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadEllipse_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadEllipse_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadEllipse_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadEllipse_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadEllipse_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadEllipse_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadEllipse_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadEllipse_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadEllipse_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadEllipse_get_Length(This,pLength)	\
    ( (This)->lpVtbl -> get_Length(This,pLength) ) 

#define IIcadEllipse_get_Center(This,pVarCenter)	\
    ( (This)->lpVtbl -> get_Center(This,pVarCenter) ) 

#define IIcadEllipse_put_Center(This,varCenter)	\
    ( (This)->lpVtbl -> put_Center(This,varCenter) ) 

#define IIcadEllipse_get_EndAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_EndAngle(This,pAngle) ) 

#define IIcadEllipse_put_EndAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_EndAngle(This,Angle) ) 

#define IIcadEllipse_get_EndParameter(This,pParam)	\
    ( (This)->lpVtbl -> get_EndParameter(This,pParam) ) 

#define IIcadEllipse_put_EndParameter(This,Param)	\
    ( (This)->lpVtbl -> put_EndParameter(This,Param) ) 

#define IIcadEllipse_get_EndPoint(This,pVarEndPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,pVarEndPoint) ) 

#define IIcadEllipse_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadEllipse_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadEllipse_get_MajorAxis(This,pVarMajorAxis)	\
    ( (This)->lpVtbl -> get_MajorAxis(This,pVarMajorAxis) ) 

#define IIcadEllipse_put_MajorAxis(This,varMajorAxis)	\
    ( (This)->lpVtbl -> put_MajorAxis(This,varMajorAxis) ) 

#define IIcadEllipse_get_MinorAxis(This,pVarMinorAxis)	\
    ( (This)->lpVtbl -> get_MinorAxis(This,pVarMinorAxis) ) 

#define IIcadEllipse_get_RadiusRatio(This,pRadius)	\
    ( (This)->lpVtbl -> get_RadiusRatio(This,pRadius) ) 

#define IIcadEllipse_put_RadiusRatio(This,Radius)	\
    ( (This)->lpVtbl -> put_RadiusRatio(This,Radius) ) 

#define IIcadEllipse_get_StartAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_StartAngle(This,pAngle) ) 

#define IIcadEllipse_put_StartAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_StartAngle(This,Angle) ) 

#define IIcadEllipse_get_StartParameter(This,pParam)	\
    ( (This)->lpVtbl -> get_StartParameter(This,pParam) ) 

#define IIcadEllipse_put_StartParameter(This,Param)	\
    ( (This)->lpVtbl -> put_StartParameter(This,Param) ) 

#define IIcadEllipse_get_StartPoint(This,pVarStartPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,pVarStartPoint) ) 

#define IIcadEllipse_get_MajorRadius(This,MajRadius)	\
    ( (This)->lpVtbl -> get_MajorRadius(This,MajRadius) ) 

#define IIcadEllipse_get_MinorRadius(This,MinRadius)	\
    ( (This)->lpVtbl -> get_MinorRadius(This,MinRadius) ) 

#define IIcadEllipse_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadEllipse_INTERFACE_DEFINED__ */


#ifndef __IIcadHatch_INTERFACE_DEFINED__
#define __IIcadHatch_INTERFACE_DEFINED__

/* interface IIcadHatch */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadHatch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ec8f746d-ad35-44a5-84bd-21013f3b414b")
    IIcadHatch : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AssociativeHatch( 
            /* [retval][out] */ VARIANT_BOOL *Associative) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HatchStyle( 
            /* [retval][out] */ ZcHatchStyle *pHatch) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HatchStyle( 
            /* [in] */ ZcHatchStyle Hatch) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PatternAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PatternAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PatternDouble( 
            /* [retval][out] */ VARIANT_BOOL *pPat) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PatternDouble( 
            /* [in] */ VARIANT_BOOL Pat) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PatternName( 
            /* [retval][out] */ BSTR *pPatternName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PatternName( 
            /* [in] */ BSTR PatternName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PatternScale( 
            /* [retval][out] */ double *pScale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PatternScale( 
            /* [in] */ double Scale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PatternSpace( 
            /* [retval][out] */ double *pSpace) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PatternSpace( 
            /* [in] */ double Space) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PatternType( 
            /* [retval][out] */ ZcHatchType *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PatternType( 
            /* [in] */ ZcHatchType Type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetPattern( 
            /* [in] */ ZcHatchType Type,
            /* [in] */ BSTR PatternName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ApplyHatch( 
            /* [in] */ IIcadSelectionSet *ObjectsToHatch,
            /* [in] */ VARIANT varSeedPoints) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendInnerLoop( 
            /* [in] */ VARIANT ObjectList) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AppendOuterLoop( 
            /* [in] */ VARIANT ObjectList) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadHatchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadHatch * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadHatch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadHatch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadHatch * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadHatch * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadHatch * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadHatch * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadHatch * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadHatch * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadHatch * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadHatch * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadHatch * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadHatch * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadHatch * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadHatch * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadHatch * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadHatch * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadHatch * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadHatch * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadHatch * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadHatch * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadHatch * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadHatch * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadHatch * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadHatch * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadHatch * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadHatch * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadHatch * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadHatch * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadHatch * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadHatch * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadHatch * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadHatch * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadHatch * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadHatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadHatch * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadHatch * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadHatch * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadHatch * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadHatch * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadHatch * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AssociativeHatch )( 
            IIcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *Associative);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadHatch * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadHatch * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HatchStyle )( 
            IIcadHatch * This,
            /* [retval][out] */ ZcHatchStyle *pHatch);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HatchStyle )( 
            IIcadHatch * This,
            /* [in] */ ZcHatchStyle Hatch);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PatternAngle )( 
            IIcadHatch * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PatternAngle )( 
            IIcadHatch * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PatternDouble )( 
            IIcadHatch * This,
            /* [retval][out] */ VARIANT_BOOL *pPat);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PatternDouble )( 
            IIcadHatch * This,
            /* [in] */ VARIANT_BOOL Pat);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PatternName )( 
            IIcadHatch * This,
            /* [retval][out] */ BSTR *pPatternName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PatternName )( 
            IIcadHatch * This,
            /* [in] */ BSTR PatternName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PatternScale )( 
            IIcadHatch * This,
            /* [retval][out] */ double *pScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PatternScale )( 
            IIcadHatch * This,
            /* [in] */ double Scale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PatternSpace )( 
            IIcadHatch * This,
            /* [retval][out] */ double *pSpace);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PatternSpace )( 
            IIcadHatch * This,
            /* [in] */ double Space);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PatternType )( 
            IIcadHatch * This,
            /* [retval][out] */ ZcHatchType *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PatternType )( 
            IIcadHatch * This,
            /* [in] */ ZcHatchType Type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadHatch * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetPattern )( 
            IIcadHatch * This,
            /* [in] */ ZcHatchType Type,
            /* [in] */ BSTR PatternName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ApplyHatch )( 
            IIcadHatch * This,
            /* [in] */ IIcadSelectionSet *ObjectsToHatch,
            /* [in] */ VARIANT varSeedPoints);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendInnerLoop )( 
            IIcadHatch * This,
            /* [in] */ VARIANT ObjectList);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AppendOuterLoop )( 
            IIcadHatch * This,
            /* [in] */ VARIANT ObjectList);
        
        END_INTERFACE
    } IIcadHatchVtbl;

    interface IIcadHatch
    {
        CONST_VTBL struct IIcadHatchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadHatch_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadHatch_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadHatch_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadHatch_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadHatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadHatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadHatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadHatch_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadHatch_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadHatch_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadHatch_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadHatch_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadHatch__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadHatch_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadHatch_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadHatch_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadHatch_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadHatch_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadHatch_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadHatch_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadHatch_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadHatch_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadHatch_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadHatch_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadHatch_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadHatch_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadHatch_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadHatch_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadHatch_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadHatch_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadHatch_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadHatch_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadHatch_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadHatch_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadHatch_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadHatch_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadHatch_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadHatch_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadHatch_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadHatch_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadHatch_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadHatch_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadHatch_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadHatch_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadHatch_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadHatch_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadHatch_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadHatch_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadHatch_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadHatch_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadHatch_get_AssociativeHatch(This,Associative)	\
    ( (This)->lpVtbl -> get_AssociativeHatch(This,Associative) ) 

#define IIcadHatch_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadHatch_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadHatch_get_HatchStyle(This,pHatch)	\
    ( (This)->lpVtbl -> get_HatchStyle(This,pHatch) ) 

#define IIcadHatch_put_HatchStyle(This,Hatch)	\
    ( (This)->lpVtbl -> put_HatchStyle(This,Hatch) ) 

#define IIcadHatch_get_PatternAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_PatternAngle(This,pAngle) ) 

#define IIcadHatch_put_PatternAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_PatternAngle(This,Angle) ) 

#define IIcadHatch_get_PatternDouble(This,pPat)	\
    ( (This)->lpVtbl -> get_PatternDouble(This,pPat) ) 

#define IIcadHatch_put_PatternDouble(This,Pat)	\
    ( (This)->lpVtbl -> put_PatternDouble(This,Pat) ) 

#define IIcadHatch_get_PatternName(This,pPatternName)	\
    ( (This)->lpVtbl -> get_PatternName(This,pPatternName) ) 

#define IIcadHatch_put_PatternName(This,PatternName)	\
    ( (This)->lpVtbl -> put_PatternName(This,PatternName) ) 

#define IIcadHatch_get_PatternScale(This,pScale)	\
    ( (This)->lpVtbl -> get_PatternScale(This,pScale) ) 

#define IIcadHatch_put_PatternScale(This,Scale)	\
    ( (This)->lpVtbl -> put_PatternScale(This,Scale) ) 

#define IIcadHatch_get_PatternSpace(This,pSpace)	\
    ( (This)->lpVtbl -> get_PatternSpace(This,pSpace) ) 

#define IIcadHatch_put_PatternSpace(This,Space)	\
    ( (This)->lpVtbl -> put_PatternSpace(This,Space) ) 

#define IIcadHatch_get_PatternType(This,pType)	\
    ( (This)->lpVtbl -> get_PatternType(This,pType) ) 

#define IIcadHatch_put_PatternType(This,Type)	\
    ( (This)->lpVtbl -> put_PatternType(This,Type) ) 

#define IIcadHatch_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadHatch_SetPattern(This,Type,PatternName)	\
    ( (This)->lpVtbl -> SetPattern(This,Type,PatternName) ) 

#define IIcadHatch_ApplyHatch(This,ObjectsToHatch,varSeedPoints)	\
    ( (This)->lpVtbl -> ApplyHatch(This,ObjectsToHatch,varSeedPoints) ) 

#define IIcadHatch_AppendInnerLoop(This,ObjectList)	\
    ( (This)->lpVtbl -> AppendInnerLoop(This,ObjectList) ) 

#define IIcadHatch_AppendOuterLoop(This,ObjectList)	\
    ( (This)->lpVtbl -> AppendOuterLoop(This,ObjectList) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadHatch_INTERFACE_DEFINED__ */


#ifndef __IIcadLeader_INTERFACE_DEFINED__
#define __IIcadLeader_INTERFACE_DEFINED__

/* interface IIcadLeader */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLeader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e4713c54-79a4-43f0-97de-635b58e8e6f6")
    IIcadLeader : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Annotation( 
            /* [retval][out] */ IIcadEntity **ppAnnot) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Annotation( 
            /* [in] */ IIcadEntity *pAnnot) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *pStyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ ZcLeaderType *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ ZcLeaderType Type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArrowheadBlock( 
            /* [retval][out] */ BSTR *pBlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ArrowheadBlock( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *pArrowheadSize) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double dbArrowheadSize) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArrowheadType( 
            /* [retval][out] */ ZcDimArrowheadType *pArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ArrowheadType( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double dbScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VerticalTextPosition( 
            /* [retval][out] */ ZcDimVerticalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalTextPosition( 
            /* [in] */ ZcDimVerticalJustification Position) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLeaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLeader * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLeader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLeader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLeader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLeader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLeader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLeader * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLeader * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadLeader * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLeader * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadLeader * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadLeader * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadLeader * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadLeader * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadLeader * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadLeader * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadLeader * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadLeader * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadLeader * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadLeader * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadLeader * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadLeader * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadLeader * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadLeader * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadLeader * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadLeader * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadLeader * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadLeader * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadLeader * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadLeader * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadLeader * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadLeader * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadLeader * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadLeader * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadLeader * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadLeader * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadLeader * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadLeader * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadLeader * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadLeader * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadLeader * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadLeader * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadLeader * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Annotation )( 
            IIcadLeader * This,
            /* [retval][out] */ IIcadEntity **ppAnnot);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Annotation )( 
            IIcadLeader * This,
            /* [in] */ IIcadEntity *pAnnot);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadLeader * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadLeader * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcadLeader * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcadLeader * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadLeader * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadLeader * This,
            /* [retval][out] */ BSTR *pStyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadLeader * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IIcadLeader * This,
            /* [retval][out] */ ZcLeaderType *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IIcadLeader * This,
            /* [in] */ ZcLeaderType Type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadBlock )( 
            IIcadLeader * This,
            /* [retval][out] */ BSTR *pBlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadBlock )( 
            IIcadLeader * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadLeader * This,
            /* [retval][out] */ double *pArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadLeader * This,
            /* [in] */ double dbArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadType )( 
            IIcadLeader * This,
            /* [retval][out] */ ZcDimArrowheadType *pArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadType )( 
            IIcadLeader * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadLeader * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadLeader * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadLeader * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadLeader * This,
            /* [in] */ double dbScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadLeader * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadLeader * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        END_INTERFACE
    } IIcadLeaderVtbl;

    interface IIcadLeader
    {
        CONST_VTBL struct IIcadLeaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLeader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLeader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLeader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLeader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLeader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLeader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLeader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLeader_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLeader_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadLeader_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLeader_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadLeader_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadLeader__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadLeader_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadLeader_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadLeader_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadLeader_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadLeader_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadLeader_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadLeader_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadLeader_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadLeader_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadLeader_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadLeader_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadLeader_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadLeader_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadLeader_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadLeader_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadLeader_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadLeader_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadLeader_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadLeader_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadLeader_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadLeader_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadLeader_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadLeader_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadLeader_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadLeader_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadLeader_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadLeader_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadLeader_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadLeader_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadLeader_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadLeader_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadLeader_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadLeader_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadLeader_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadLeader_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadLeader_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadLeader_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadLeader_get_Annotation(This,ppAnnot)	\
    ( (This)->lpVtbl -> get_Annotation(This,ppAnnot) ) 

#define IIcadLeader_put_Annotation(This,pAnnot)	\
    ( (This)->lpVtbl -> put_Annotation(This,pAnnot) ) 

#define IIcadLeader_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcadLeader_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcadLeader_get_Coordinate(This,Index,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,pVarCoord) ) 

#define IIcadLeader_put_Coordinate(This,Index,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,varCoord) ) 

#define IIcadLeader_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadLeader_get_StyleName(This,pStyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,pStyleName) ) 

#define IIcadLeader_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadLeader_get_Type(This,pType)	\
    ( (This)->lpVtbl -> get_Type(This,pType) ) 

#define IIcadLeader_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define IIcadLeader_get_ArrowheadBlock(This,pBlockName)	\
    ( (This)->lpVtbl -> get_ArrowheadBlock(This,pBlockName) ) 

#define IIcadLeader_put_ArrowheadBlock(This,BlockName)	\
    ( (This)->lpVtbl -> put_ArrowheadBlock(This,BlockName) ) 

#define IIcadLeader_get_ArrowheadSize(This,pArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,pArrowheadSize) ) 

#define IIcadLeader_put_ArrowheadSize(This,dbArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,dbArrowheadSize) ) 

#define IIcadLeader_get_ArrowheadType(This,pArrowheadType)	\
    ( (This)->lpVtbl -> get_ArrowheadType(This,pArrowheadType) ) 

#define IIcadLeader_put_ArrowheadType(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_ArrowheadType(This,ArrowheadType) ) 

#define IIcadLeader_get_DimensionLineColor(This,pColor)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,pColor) ) 

#define IIcadLeader_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadLeader_get_ScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,pScaleFactor) ) 

#define IIcadLeader_put_ScaleFactor(This,dbScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,dbScaleFactor) ) 

#define IIcadLeader_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadLeader_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLeader_INTERFACE_DEFINED__ */


#ifndef __IIcadLine_INTERFACE_DEFINED__
#define __IIcadLine_INTERFACE_DEFINED__

/* interface IIcadLine */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bd79b59c-ce1a-4632-8dac-251edf2cb5fb")
    IIcadLine : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EndPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Angle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Delta( 
            /* [retval][out] */ VARIANT *pDelta) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLine * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLine * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLine * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLine * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLine * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLine * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadLine * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLine * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadLine * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadLine * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadLine * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadLine * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadLine * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadLine * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadLine * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadLine * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadLine * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadLine * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadLine * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadLine * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadLine * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadLine * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadLine * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadLine * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadLine * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadLine * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadLine * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadLine * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadLine * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadLine * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadLine * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadLine * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadLine * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadLine * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadLine * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadLine * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadLine * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadLine * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadLine * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadLine * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadLine * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadLine * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadLine * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadLine * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            IIcadLine * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndPoint )( 
            IIcadLine * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadLine * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadLine * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IIcadLine * This,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            IIcadLine * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartPoint )( 
            IIcadLine * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadLine * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadLine * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Angle )( 
            IIcadLine * This,
            /* [retval][out] */ double *pAngle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Delta )( 
            IIcadLine * This,
            /* [retval][out] */ VARIANT *pDelta);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadLine * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        END_INTERFACE
    } IIcadLineVtbl;

    interface IIcadLine
    {
        CONST_VTBL struct IIcadLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLine_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLine_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLine_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLine_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLine_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLine_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadLine_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLine_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadLine_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadLine__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadLine_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadLine_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadLine_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadLine_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadLine_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadLine_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadLine_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadLine_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadLine_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadLine_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadLine_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadLine_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadLine_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadLine_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadLine_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadLine_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadLine_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadLine_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadLine_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadLine_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadLine_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadLine_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadLine_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadLine_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadLine_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadLine_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadLine_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadLine_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadLine_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadLine_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadLine_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadLine_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadLine_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadLine_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadLine_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadLine_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadLine_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadLine_get_EndPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_EndPoint(This,pVarPoint) ) 

#define IIcadLine_put_EndPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_EndPoint(This,varPoint) ) 

#define IIcadLine_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadLine_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadLine_get_Length(This,pLength)	\
    ( (This)->lpVtbl -> get_Length(This,pLength) ) 

#define IIcadLine_get_StartPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_StartPoint(This,pVarPoint) ) 

#define IIcadLine_put_StartPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_StartPoint(This,varPoint) ) 

#define IIcadLine_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadLine_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadLine_get_Angle(This,pAngle)	\
    ( (This)->lpVtbl -> get_Angle(This,pAngle) ) 

#define IIcadLine_get_Delta(This,pDelta)	\
    ( (This)->lpVtbl -> get_Delta(This,pDelta) ) 

#define IIcadLine_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLine_INTERFACE_DEFINED__ */


#ifndef __IIcadLightWeightPolyline_INTERFACE_DEFINED__
#define __IIcadLightWeightPolyline_INTERFACE_DEFINED__

/* interface IIcadLightWeightPolyline */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadLightWeightPolyline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0f5571d1-d1bc-4313-b991-fc30fd0389a1")
    IIcadLightWeightPolyline : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *pClosed) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Closed( 
            /* [in] */ VARIANT_BOOL Closed) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConstantWidth( 
            /* [retval][out] */ double *pConstantWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ConstantWidth( 
            /* [in] */ double dblConstantWidth) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Elevation( 
            /* [retval][out] */ double *pElevation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Elevation( 
            /* [in] */ double dblElevation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinetypeGeneration( 
            /* [retval][out] */ VARIANT_BOOL *pLinetypeGeneration) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinetypeGeneration( 
            /* [in] */ VARIANT_BOOL bLinetypeGeneration) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddVertex( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetBulge( 
            /* [in] */ int Index,
            /* [retval][out] */ double *pBulge) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetWidth( 
            /* [in] */ int Index,
            /* [out][in] */ double *StartWidth,
            /* [out][in] */ double *EndWidth) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetBulge( 
            /* [in] */ int Index,
            /* [in] */ double Bulge) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetWidth( 
            /* [in] */ int SegmentIndex,
            /* [in] */ double StartWidth,
            /* [in] */ double EndWidth) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadLightWeightPolylineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadLightWeightPolyline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadLightWeightPolyline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadLightWeightPolyline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadLightWeightPolyline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadLightWeightPolyline * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadLightWeightPolyline * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadLightWeightPolyline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *pClosed);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Closed )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT_BOOL Closed);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConstantWidth )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ double *pConstantWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConstantWidth )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ double dblConstantWidth);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Elevation )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ double *pElevation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Elevation )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ double dblElevation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeGeneration )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *pLinetypeGeneration);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeGeneration )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ VARIANT_BOOL bLinetypeGeneration);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddVertex )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IIcadLightWeightPolyline * This,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBulge )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ double *pBulge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWidth )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int Index,
            /* [out][in] */ double *StartWidth,
            /* [out][in] */ double *EndWidth);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetBulge )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int Index,
            /* [in] */ double Bulge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetWidth )( 
            IIcadLightWeightPolyline * This,
            /* [in] */ int SegmentIndex,
            /* [in] */ double StartWidth,
            /* [in] */ double EndWidth);
        
        END_INTERFACE
    } IIcadLightWeightPolylineVtbl;

    interface IIcadLightWeightPolyline
    {
        CONST_VTBL struct IIcadLightWeightPolylineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadLightWeightPolyline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadLightWeightPolyline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadLightWeightPolyline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadLightWeightPolyline_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadLightWeightPolyline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadLightWeightPolyline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadLightWeightPolyline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadLightWeightPolyline_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadLightWeightPolyline_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadLightWeightPolyline_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadLightWeightPolyline_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadLightWeightPolyline_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadLightWeightPolyline__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadLightWeightPolyline_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadLightWeightPolyline_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadLightWeightPolyline_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadLightWeightPolyline_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadLightWeightPolyline_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadLightWeightPolyline_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadLightWeightPolyline_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadLightWeightPolyline_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadLightWeightPolyline_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadLightWeightPolyline_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadLightWeightPolyline_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadLightWeightPolyline_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadLightWeightPolyline_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadLightWeightPolyline_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadLightWeightPolyline_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadLightWeightPolyline_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadLightWeightPolyline_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadLightWeightPolyline_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadLightWeightPolyline_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadLightWeightPolyline_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadLightWeightPolyline_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadLightWeightPolyline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadLightWeightPolyline_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadLightWeightPolyline_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadLightWeightPolyline_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadLightWeightPolyline_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadLightWeightPolyline_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadLightWeightPolyline_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadLightWeightPolyline_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadLightWeightPolyline_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadLightWeightPolyline_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadLightWeightPolyline_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadLightWeightPolyline_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadLightWeightPolyline_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadLightWeightPolyline_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadLightWeightPolyline_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadLightWeightPolyline_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadLightWeightPolyline_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadLightWeightPolyline_get_Length(This,pLength)	\
    ( (This)->lpVtbl -> get_Length(This,pLength) ) 

#define IIcadLightWeightPolyline_get_Closed(This,pClosed)	\
    ( (This)->lpVtbl -> get_Closed(This,pClosed) ) 

#define IIcadLightWeightPolyline_put_Closed(This,Closed)	\
    ( (This)->lpVtbl -> put_Closed(This,Closed) ) 

#define IIcadLightWeightPolyline_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcadLightWeightPolyline_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcadLightWeightPolyline_get_Coordinate(This,Index,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,pVarCoord) ) 

#define IIcadLightWeightPolyline_put_Coordinate(This,Index,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,varCoord) ) 

#define IIcadLightWeightPolyline_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadLightWeightPolyline_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadLightWeightPolyline_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadLightWeightPolyline_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadLightWeightPolyline_get_ConstantWidth(This,pConstantWidth)	\
    ( (This)->lpVtbl -> get_ConstantWidth(This,pConstantWidth) ) 

#define IIcadLightWeightPolyline_put_ConstantWidth(This,dblConstantWidth)	\
    ( (This)->lpVtbl -> put_ConstantWidth(This,dblConstantWidth) ) 

#define IIcadLightWeightPolyline_get_Elevation(This,pElevation)	\
    ( (This)->lpVtbl -> get_Elevation(This,pElevation) ) 

#define IIcadLightWeightPolyline_put_Elevation(This,dblElevation)	\
    ( (This)->lpVtbl -> put_Elevation(This,dblElevation) ) 

#define IIcadLightWeightPolyline_get_LinetypeGeneration(This,pLinetypeGeneration)	\
    ( (This)->lpVtbl -> get_LinetypeGeneration(This,pLinetypeGeneration) ) 

#define IIcadLightWeightPolyline_put_LinetypeGeneration(This,bLinetypeGeneration)	\
    ( (This)->lpVtbl -> put_LinetypeGeneration(This,bLinetypeGeneration) ) 

#define IIcadLightWeightPolyline_AddVertex(This,Index,varPoint)	\
    ( (This)->lpVtbl -> AddVertex(This,Index,varPoint) ) 

#define IIcadLightWeightPolyline_Explode(This,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Explode(This,ppArrayOfEntities) ) 

#define IIcadLightWeightPolyline_GetBulge(This,Index,pBulge)	\
    ( (This)->lpVtbl -> GetBulge(This,Index,pBulge) ) 

#define IIcadLightWeightPolyline_GetWidth(This,Index,StartWidth,EndWidth)	\
    ( (This)->lpVtbl -> GetWidth(This,Index,StartWidth,EndWidth) ) 

#define IIcadLightWeightPolyline_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#define IIcadLightWeightPolyline_SetBulge(This,Index,Bulge)	\
    ( (This)->lpVtbl -> SetBulge(This,Index,Bulge) ) 

#define IIcadLightWeightPolyline_SetWidth(This,SegmentIndex,StartWidth,EndWidth)	\
    ( (This)->lpVtbl -> SetWidth(This,SegmentIndex,StartWidth,EndWidth) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadLightWeightPolyline_INTERFACE_DEFINED__ */


#ifndef __IIcadMText_INTERFACE_DEFINED__
#define __IIcadMText_INTERFACE_DEFINED__

/* interface IIcadMText */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadMText;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5815ccdc-31ac-4234-ad52-c1078fe17842")
    IIcadMText : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AttachmentPoint( 
            /* [retval][out] */ ZcAttachmentPoint *pPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AttachmentPoint( 
            /* [in] */ ZcAttachmentPoint Point) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DrawingDirection( 
            /* [retval][out] */ ZcDrawingDirection *pDrawingDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DrawingDirection( 
            /* [in] */ ZcDrawingDirection DrawingDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *pVarInsertPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT varInsertPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *pStyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *pText) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ IIcadSelectionSet **pObjects) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LineSpacingDistance( 
            /* [retval][out] */ double *pLineSpacingDist) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineSpacingDistance( 
            /* [in] */ double pLineSpacingDis) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LineSpacingFactor( 
            /* [retval][out] */ double *pLineSpacingFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineSpacingFactor( 
            /* [in] */ double pLineSpacingFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LineSpacingStyle( 
            /* [retval][out] */ ZcLineSpacingStyle *pLineSpacingStyle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineSpacingStyle( 
            /* [in] */ ZcLineSpacingStyle pLineSpacingStyle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BackgroundFill( 
            /* [retval][out] */ VARIANT_BOOL *pFilled) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BackgroundFill( 
            /* [in] */ VARIANT_BOOL Filled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadMTextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadMText * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadMText * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadMText * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadMText * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadMText * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadMText * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadMText * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadMText * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadMText * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadMText * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadMText * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadMText * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadMText * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadMText * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadMText * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadMText * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadMText * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadMText * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadMText * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadMText * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadMText * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadMText * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadMText * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadMText * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadMText * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadMText * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadMText * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadMText * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadMText * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadMText * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadMText * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadMText * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadMText * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadMText * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadMText * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadMText * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadMText * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadMText * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadMText * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadMText * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadMText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadMText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadMText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadMText * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadMText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadMText * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadMText * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadMText * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadMText * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadMText * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttachmentPoint )( 
            IIcadMText * This,
            /* [retval][out] */ ZcAttachmentPoint *pPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttachmentPoint )( 
            IIcadMText * This,
            /* [in] */ ZcAttachmentPoint Point);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DrawingDirection )( 
            IIcadMText * This,
            /* [retval][out] */ ZcDrawingDirection *pDrawingDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DrawingDirection )( 
            IIcadMText * This,
            /* [in] */ ZcDrawingDirection DrawingDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadMText * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadMText * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadMText * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadMText * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadMText * This,
            /* [retval][out] */ VARIANT *pVarInsertPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadMText * This,
            /* [in] */ VARIANT varInsertPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadMText * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadMText * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadMText * This,
            /* [retval][out] */ BSTR *pStyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadMText * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadMText * This,
            /* [retval][out] */ BSTR *pText);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadMText * This,
            /* [in] */ BSTR Text);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadMText * This,
            /* [retval][out] */ double *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IIcadMText * This,
            /* [in] */ double Width);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IIcadMText * This,
            /* [retval][out] */ IIcadSelectionSet **pObjects);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingDistance )( 
            IIcadMText * This,
            /* [retval][out] */ double *pLineSpacingDist);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingDistance )( 
            IIcadMText * This,
            /* [in] */ double pLineSpacingDis);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingFactor )( 
            IIcadMText * This,
            /* [retval][out] */ double *pLineSpacingFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingFactor )( 
            IIcadMText * This,
            /* [in] */ double pLineSpacingFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineSpacingStyle )( 
            IIcadMText * This,
            /* [retval][out] */ ZcLineSpacingStyle *pLineSpacingStyle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineSpacingStyle )( 
            IIcadMText * This,
            /* [in] */ ZcLineSpacingStyle pLineSpacingStyle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackgroundFill )( 
            IIcadMText * This,
            /* [retval][out] */ VARIANT_BOOL *pFilled);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackgroundFill )( 
            IIcadMText * This,
            /* [in] */ VARIANT_BOOL Filled);
        
        END_INTERFACE
    } IIcadMTextVtbl;

    interface IIcadMText
    {
        CONST_VTBL struct IIcadMTextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadMText_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadMText_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadMText_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadMText_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadMText_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadMText_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadMText_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadMText_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadMText_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadMText_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadMText_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadMText_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadMText__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadMText_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadMText_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadMText_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadMText_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadMText_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadMText_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadMText_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadMText_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadMText_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadMText_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadMText_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadMText_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadMText_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadMText_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadMText_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadMText_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadMText_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadMText_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadMText_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadMText_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadMText_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadMText_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadMText_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadMText_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadMText_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadMText_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadMText_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadMText_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadMText_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadMText_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadMText_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadMText_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadMText_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadMText_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadMText_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadMText_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadMText_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadMText_get_AttachmentPoint(This,pPoint)	\
    ( (This)->lpVtbl -> get_AttachmentPoint(This,pPoint) ) 

#define IIcadMText_put_AttachmentPoint(This,Point)	\
    ( (This)->lpVtbl -> put_AttachmentPoint(This,Point) ) 

#define IIcadMText_get_DrawingDirection(This,pDrawingDirection)	\
    ( (This)->lpVtbl -> get_DrawingDirection(This,pDrawingDirection) ) 

#define IIcadMText_put_DrawingDirection(This,DrawingDirection)	\
    ( (This)->lpVtbl -> put_DrawingDirection(This,DrawingDirection) ) 

#define IIcadMText_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadMText_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadMText_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadMText_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadMText_get_InsertionPoint(This,pVarInsertPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,pVarInsertPoint) ) 

#define IIcadMText_put_InsertionPoint(This,varInsertPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,varInsertPoint) ) 

#define IIcadMText_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadMText_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadMText_get_StyleName(This,pStyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,pStyleName) ) 

#define IIcadMText_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadMText_get_TextString(This,pText)	\
    ( (This)->lpVtbl -> get_TextString(This,pText) ) 

#define IIcadMText_put_TextString(This,Text)	\
    ( (This)->lpVtbl -> put_TextString(This,Text) ) 

#define IIcadMText_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadMText_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define IIcadMText_Explode(This,pObjects)	\
    ( (This)->lpVtbl -> Explode(This,pObjects) ) 

#define IIcadMText_get_LineSpacingDistance(This,pLineSpacingDist)	\
    ( (This)->lpVtbl -> get_LineSpacingDistance(This,pLineSpacingDist) ) 

#define IIcadMText_put_LineSpacingDistance(This,pLineSpacingDis)	\
    ( (This)->lpVtbl -> put_LineSpacingDistance(This,pLineSpacingDis) ) 

#define IIcadMText_get_LineSpacingFactor(This,pLineSpacingFactor)	\
    ( (This)->lpVtbl -> get_LineSpacingFactor(This,pLineSpacingFactor) ) 

#define IIcadMText_put_LineSpacingFactor(This,pLineSpacingFactor)	\
    ( (This)->lpVtbl -> put_LineSpacingFactor(This,pLineSpacingFactor) ) 

#define IIcadMText_get_LineSpacingStyle(This,pLineSpacingStyle)	\
    ( (This)->lpVtbl -> get_LineSpacingStyle(This,pLineSpacingStyle) ) 

#define IIcadMText_put_LineSpacingStyle(This,pLineSpacingStyle)	\
    ( (This)->lpVtbl -> put_LineSpacingStyle(This,pLineSpacingStyle) ) 

#define IIcadMText_get_BackgroundFill(This,pFilled)	\
    ( (This)->lpVtbl -> get_BackgroundFill(This,pFilled) ) 

#define IIcadMText_put_BackgroundFill(This,Filled)	\
    ( (This)->lpVtbl -> put_BackgroundFill(This,Filled) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadMText_INTERFACE_DEFINED__ */


#ifndef __IIcadPointEntity_INTERFACE_DEFINED__
#define __IIcadPointEntity_INTERFACE_DEFINED__

/* interface IIcadPointEntity */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPointEntity;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("022eb9ac-a613-464b-b02d-1f1223c1432a")
    IIcadPointEntity : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPointEntityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPointEntity * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPointEntity * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPointEntity * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPointEntity * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPointEntity * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPointEntity * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPointEntity * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPointEntity * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadPointEntity * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPointEntity * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadPointEntity * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadPointEntity * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadPointEntity * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadPointEntity * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadPointEntity * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadPointEntity * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadPointEntity * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadPointEntity * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadPointEntity * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadPointEntity * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadPointEntity * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadPointEntity * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadPointEntity * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadPointEntity * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadPointEntity * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadPointEntity * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadPointEntity * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadPointEntity * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadPointEntity * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadPointEntity * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadPointEntity * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadPointEntity * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadPointEntity * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadPointEntity * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadPointEntity * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadPointEntity * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadPointEntity * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadPointEntity * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadPointEntity * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadPointEntity * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadPointEntity * This,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadPointEntity * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadPointEntity * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadPointEntity * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadPointEntity * This,
            /* [in] */ double Thick);
        
        END_INTERFACE
    } IIcadPointEntityVtbl;

    interface IIcadPointEntity
    {
        CONST_VTBL struct IIcadPointEntityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPointEntity_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPointEntity_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPointEntity_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPointEntity_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPointEntity_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPointEntity_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPointEntity_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPointEntity_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPointEntity_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadPointEntity_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPointEntity_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadPointEntity_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadPointEntity__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadPointEntity_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadPointEntity_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadPointEntity_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadPointEntity_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadPointEntity_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadPointEntity_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadPointEntity_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadPointEntity_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadPointEntity_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadPointEntity_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadPointEntity_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadPointEntity_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadPointEntity_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadPointEntity_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPointEntity_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPointEntity_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadPointEntity_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadPointEntity_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadPointEntity_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadPointEntity_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadPointEntity_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadPointEntity_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadPointEntity_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadPointEntity_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadPointEntity_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadPointEntity_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadPointEntity_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadPointEntity_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadPointEntity_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadPointEntity_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadPointEntity_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadPointEntity_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadPointEntity_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadPointEntity_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadPointEntity_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadPointEntity_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadPointEntity_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadPointEntity_get_Coordinates(This,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoord) ) 

#define IIcadPointEntity_put_Coordinates(This,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoord) ) 

#define IIcadPointEntity_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadPointEntity_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadPointEntity_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadPointEntity_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPointEntity_INTERFACE_DEFINED__ */


#ifndef __IIcadPolyline_INTERFACE_DEFINED__
#define __IIcadPolyline_INTERFACE_DEFINED__

/* interface IIcadPolyline */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPolyline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("73d288d2-e384-4ee5-be0d-08a8e899076b")
    IIcadPolyline : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *pClosed) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Closed( 
            /* [in] */ VARIANT_BOOL Closed) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConstantWidth( 
            /* [retval][out] */ double *pConstantWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ConstantWidth( 
            /* [in] */ double dblConstantWidth) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Elevation( 
            /* [retval][out] */ double *pElevation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Elevation( 
            /* [in] */ double dblElevation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinetypeGeneration( 
            /* [retval][out] */ VARIANT_BOOL *pLinetypeGeneration) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinetypeGeneration( 
            /* [in] */ VARIANT_BOOL bLinetypeGeneration) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ ZcPolylineType *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ ZcPolylineType Type) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AppendVertex( 
            /* [in] */ VARIANT varVertex) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetBulge( 
            /* [in] */ int Index,
            /* [retval][out] */ double *pBulge) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetWidth( 
            /* [in] */ int Index,
            /* [out][in] */ double *StartWidth,
            /* [out][in] */ double *EndWidth) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetBulge( 
            /* [in] */ int Index,
            /* [in] */ double Bulge) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetWidth( 
            /* [in] */ int SegmentIndex,
            /* [in] */ double StartWidth,
            /* [in] */ double EndWidth) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPolylineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPolyline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPolyline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPolyline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPolyline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPolyline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPolyline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPolyline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPolyline * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadPolyline * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPolyline * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadPolyline * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadPolyline * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadPolyline * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadPolyline * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadPolyline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadPolyline * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadPolyline * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadPolyline * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadPolyline * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadPolyline * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadPolyline * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadPolyline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadPolyline * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadPolyline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadPolyline * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadPolyline * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadPolyline * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadPolyline * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadPolyline * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadPolyline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadPolyline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadPolyline * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadPolyline * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadPolyline * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadPolyline * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadPolyline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadPolyline * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadPolyline * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadPolyline * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IIcadPolyline * This,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IIcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *pClosed);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Closed )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT_BOOL Closed);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadPolyline * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcadPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcadPolyline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConstantWidth )( 
            IIcadPolyline * This,
            /* [retval][out] */ double *pConstantWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConstantWidth )( 
            IIcadPolyline * This,
            /* [in] */ double dblConstantWidth);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Elevation )( 
            IIcadPolyline * This,
            /* [retval][out] */ double *pElevation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Elevation )( 
            IIcadPolyline * This,
            /* [in] */ double dblElevation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeGeneration )( 
            IIcadPolyline * This,
            /* [retval][out] */ VARIANT_BOOL *pLinetypeGeneration);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeGeneration )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT_BOOL bLinetypeGeneration);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadPolyline * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadPolyline * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadPolyline * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IIcadPolyline * This,
            /* [retval][out] */ ZcPolylineType *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IIcadPolyline * This,
            /* [in] */ ZcPolylineType Type);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AppendVertex )( 
            IIcadPolyline * This,
            /* [in] */ VARIANT varVertex);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IIcadPolyline * This,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBulge )( 
            IIcadPolyline * This,
            /* [in] */ int Index,
            /* [retval][out] */ double *pBulge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWidth )( 
            IIcadPolyline * This,
            /* [in] */ int Index,
            /* [out][in] */ double *StartWidth,
            /* [out][in] */ double *EndWidth);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadPolyline * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetBulge )( 
            IIcadPolyline * This,
            /* [in] */ int Index,
            /* [in] */ double Bulge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetWidth )( 
            IIcadPolyline * This,
            /* [in] */ int SegmentIndex,
            /* [in] */ double StartWidth,
            /* [in] */ double EndWidth);
        
        END_INTERFACE
    } IIcadPolylineVtbl;

    interface IIcadPolyline
    {
        CONST_VTBL struct IIcadPolylineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPolyline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPolyline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPolyline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPolyline_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPolyline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPolyline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPolyline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPolyline_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPolyline_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadPolyline_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPolyline_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadPolyline_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadPolyline__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadPolyline_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadPolyline_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadPolyline_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadPolyline_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadPolyline_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadPolyline_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadPolyline_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadPolyline_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadPolyline_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadPolyline_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadPolyline_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadPolyline_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadPolyline_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadPolyline_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPolyline_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPolyline_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadPolyline_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadPolyline_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadPolyline_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadPolyline_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadPolyline_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadPolyline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadPolyline_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadPolyline_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadPolyline_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadPolyline_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadPolyline_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadPolyline_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadPolyline_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadPolyline_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadPolyline_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadPolyline_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadPolyline_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadPolyline_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadPolyline_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadPolyline_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadPolyline_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadPolyline_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadPolyline_get_Length(This,pLength)	\
    ( (This)->lpVtbl -> get_Length(This,pLength) ) 

#define IIcadPolyline_get_Closed(This,pClosed)	\
    ( (This)->lpVtbl -> get_Closed(This,pClosed) ) 

#define IIcadPolyline_put_Closed(This,Closed)	\
    ( (This)->lpVtbl -> put_Closed(This,Closed) ) 

#define IIcadPolyline_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcadPolyline_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcadPolyline_get_Coordinate(This,Index,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,pVarCoord) ) 

#define IIcadPolyline_put_Coordinate(This,Index,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,varCoord) ) 

#define IIcadPolyline_get_ConstantWidth(This,pConstantWidth)	\
    ( (This)->lpVtbl -> get_ConstantWidth(This,pConstantWidth) ) 

#define IIcadPolyline_put_ConstantWidth(This,dblConstantWidth)	\
    ( (This)->lpVtbl -> put_ConstantWidth(This,dblConstantWidth) ) 

#define IIcadPolyline_get_Elevation(This,pElevation)	\
    ( (This)->lpVtbl -> get_Elevation(This,pElevation) ) 

#define IIcadPolyline_put_Elevation(This,dblElevation)	\
    ( (This)->lpVtbl -> put_Elevation(This,dblElevation) ) 

#define IIcadPolyline_get_LinetypeGeneration(This,pLinetypeGeneration)	\
    ( (This)->lpVtbl -> get_LinetypeGeneration(This,pLinetypeGeneration) ) 

#define IIcadPolyline_put_LinetypeGeneration(This,bLinetypeGeneration)	\
    ( (This)->lpVtbl -> put_LinetypeGeneration(This,bLinetypeGeneration) ) 

#define IIcadPolyline_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadPolyline_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadPolyline_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadPolyline_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadPolyline_get_Type(This,pType)	\
    ( (This)->lpVtbl -> get_Type(This,pType) ) 

#define IIcadPolyline_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define IIcadPolyline_AppendVertex(This,varVertex)	\
    ( (This)->lpVtbl -> AppendVertex(This,varVertex) ) 

#define IIcadPolyline_Explode(This,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Explode(This,ppArrayOfEntities) ) 

#define IIcadPolyline_GetBulge(This,Index,pBulge)	\
    ( (This)->lpVtbl -> GetBulge(This,Index,pBulge) ) 

#define IIcadPolyline_GetWidth(This,Index,StartWidth,EndWidth)	\
    ( (This)->lpVtbl -> GetWidth(This,Index,StartWidth,EndWidth) ) 

#define IIcadPolyline_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#define IIcadPolyline_SetBulge(This,Index,Bulge)	\
    ( (This)->lpVtbl -> SetBulge(This,Index,Bulge) ) 

#define IIcadPolyline_SetWidth(This,SegmentIndex,StartWidth,EndWidth)	\
    ( (This)->lpVtbl -> SetWidth(This,SegmentIndex,StartWidth,EndWidth) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPolyline_INTERFACE_DEFINED__ */


#ifndef __IIcadPolygonMesh_INTERFACE_DEFINED__
#define __IIcadPolygonMesh_INTERFACE_DEFINED__

/* interface IIcadPolygonMesh */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPolygonMesh;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2dccffd6-c294-4834-997c-cbc66c0aa702")
    IIcadPolygonMesh : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MClose( 
            /* [retval][out] */ VARIANT_BOOL *pClosed) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MClose( 
            /* [in] */ VARIANT_BOOL Close) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MDensity( 
            /* [retval][out] */ long *pDensity) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MDensity( 
            /* [in] */ long Density) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MVertexCount( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NClose( 
            /* [retval][out] */ VARIANT_BOOL *pClosed) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_NClose( 
            /* [in] */ VARIANT_BOOL Close) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NDensity( 
            /* [retval][out] */ long *pDensity) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_NDensity( 
            /* [in] */ long Density) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NVertexCount( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ ZcPolygonMeshType *pType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ ZcPolygonMeshType Type) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AppendVertex( 
            /* [in] */ VARIANT varVertices) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ IIcadSelectionSet **ppObjects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPolygonMeshVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPolygonMesh * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPolygonMesh * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPolygonMesh * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPolygonMesh * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPolygonMesh * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPolygonMesh * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPolygonMesh * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadPolygonMesh * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadPolygonMesh * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadPolygonMesh * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadPolygonMesh * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadPolygonMesh * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadPolygonMesh * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadPolygonMesh * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadPolygonMesh * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadPolygonMesh * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadPolygonMesh * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadPolygonMesh * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadPolygonMesh * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadPolygonMesh * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadPolygonMesh * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcadPolygonMesh * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcadPolygonMesh * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MClose )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *pClosed);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MClose )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL Close);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MDensity )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ long *pDensity);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MDensity )( 
            IIcadPolygonMesh * This,
            /* [in] */ long Density);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MVertexCount )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NClose )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ VARIANT_BOOL *pClosed);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NClose )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT_BOOL Close);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NDensity )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ long *pDensity);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NDensity )( 
            IIcadPolygonMesh * This,
            /* [in] */ long Density);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NVertexCount )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ ZcPolygonMeshType *pType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IIcadPolygonMesh * This,
            /* [in] */ ZcPolygonMeshType Type);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AppendVertex )( 
            IIcadPolygonMesh * This,
            /* [in] */ VARIANT varVertices);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IIcadPolygonMesh * This,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        END_INTERFACE
    } IIcadPolygonMeshVtbl;

    interface IIcadPolygonMesh
    {
        CONST_VTBL struct IIcadPolygonMeshVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPolygonMesh_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPolygonMesh_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPolygonMesh_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPolygonMesh_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPolygonMesh_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPolygonMesh_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPolygonMesh_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPolygonMesh_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPolygonMesh_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadPolygonMesh_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPolygonMesh_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadPolygonMesh_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadPolygonMesh__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadPolygonMesh_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadPolygonMesh_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadPolygonMesh_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadPolygonMesh_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadPolygonMesh_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadPolygonMesh_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadPolygonMesh_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadPolygonMesh_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadPolygonMesh_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadPolygonMesh_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadPolygonMesh_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadPolygonMesh_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadPolygonMesh_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadPolygonMesh_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPolygonMesh_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPolygonMesh_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadPolygonMesh_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadPolygonMesh_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadPolygonMesh_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadPolygonMesh_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadPolygonMesh_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadPolygonMesh_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadPolygonMesh_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadPolygonMesh_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadPolygonMesh_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadPolygonMesh_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadPolygonMesh_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadPolygonMesh_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadPolygonMesh_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadPolygonMesh_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadPolygonMesh_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadPolygonMesh_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadPolygonMesh_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadPolygonMesh_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadPolygonMesh_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadPolygonMesh_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadPolygonMesh_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadPolygonMesh_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcadPolygonMesh_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcadPolygonMesh_get_Coordinate(This,Index,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,pVarCoord) ) 

#define IIcadPolygonMesh_put_Coordinate(This,Index,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,varCoord) ) 

#define IIcadPolygonMesh_get_MClose(This,pClosed)	\
    ( (This)->lpVtbl -> get_MClose(This,pClosed) ) 

#define IIcadPolygonMesh_put_MClose(This,Close)	\
    ( (This)->lpVtbl -> put_MClose(This,Close) ) 

#define IIcadPolygonMesh_get_MDensity(This,pDensity)	\
    ( (This)->lpVtbl -> get_MDensity(This,pDensity) ) 

#define IIcadPolygonMesh_put_MDensity(This,Density)	\
    ( (This)->lpVtbl -> put_MDensity(This,Density) ) 

#define IIcadPolygonMesh_get_MVertexCount(This,pCount)	\
    ( (This)->lpVtbl -> get_MVertexCount(This,pCount) ) 

#define IIcadPolygonMesh_get_NClose(This,pClosed)	\
    ( (This)->lpVtbl -> get_NClose(This,pClosed) ) 

#define IIcadPolygonMesh_put_NClose(This,Close)	\
    ( (This)->lpVtbl -> put_NClose(This,Close) ) 

#define IIcadPolygonMesh_get_NDensity(This,pDensity)	\
    ( (This)->lpVtbl -> get_NDensity(This,pDensity) ) 

#define IIcadPolygonMesh_put_NDensity(This,Density)	\
    ( (This)->lpVtbl -> put_NDensity(This,Density) ) 

#define IIcadPolygonMesh_get_NVertexCount(This,pCount)	\
    ( (This)->lpVtbl -> get_NVertexCount(This,pCount) ) 

#define IIcadPolygonMesh_get_Type(This,pType)	\
    ( (This)->lpVtbl -> get_Type(This,pType) ) 

#define IIcadPolygonMesh_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define IIcadPolygonMesh_AppendVertex(This,varVertices)	\
    ( (This)->lpVtbl -> AppendVertex(This,varVertices) ) 

#define IIcadPolygonMesh_Explode(This,ppObjects)	\
    ( (This)->lpVtbl -> Explode(This,ppObjects) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPolygonMesh_INTERFACE_DEFINED__ */


#ifndef __IIcadPolyfaceMesh_INTERFACE_DEFINED__
#define __IIcadPolyfaceMesh_INTERFACE_DEFINED__

/* interface IIcadPolyfaceMesh */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPolyfaceMesh;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4fce1d7f-a9ee-405d-991a-9795b77a093d")
    IIcadPolyfaceMesh : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NumberOfVertices( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NumberOfFaces( 
            /* [retval][out] */ long *pCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPolyfaceMeshVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPolyfaceMesh * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPolyfaceMesh * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPolyfaceMesh * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadPolyfaceMesh * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadPolyfaceMesh * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadPolyfaceMesh * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadPolyfaceMesh * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pVarCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcadPolyfaceMesh * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT varCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfVertices )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfFaces )( 
            IIcadPolyfaceMesh * This,
            /* [retval][out] */ long *pCount);
        
        END_INTERFACE
    } IIcadPolyfaceMeshVtbl;

    interface IIcadPolyfaceMesh
    {
        CONST_VTBL struct IIcadPolyfaceMeshVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPolyfaceMesh_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPolyfaceMesh_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPolyfaceMesh_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPolyfaceMesh_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPolyfaceMesh_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPolyfaceMesh_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPolyfaceMesh_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPolyfaceMesh_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPolyfaceMesh_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadPolyfaceMesh_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPolyfaceMesh_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadPolyfaceMesh_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadPolyfaceMesh__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadPolyfaceMesh_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadPolyfaceMesh_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadPolyfaceMesh_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadPolyfaceMesh_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadPolyfaceMesh_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadPolyfaceMesh_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadPolyfaceMesh_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadPolyfaceMesh_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadPolyfaceMesh_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadPolyfaceMesh_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadPolyfaceMesh_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadPolyfaceMesh_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadPolyfaceMesh_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadPolyfaceMesh_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPolyfaceMesh_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPolyfaceMesh_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadPolyfaceMesh_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadPolyfaceMesh_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadPolyfaceMesh_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadPolyfaceMesh_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadPolyfaceMesh_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadPolyfaceMesh_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadPolyfaceMesh_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadPolyfaceMesh_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadPolyfaceMesh_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadPolyfaceMesh_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadPolyfaceMesh_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadPolyfaceMesh_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadPolyfaceMesh_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadPolyfaceMesh_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadPolyfaceMesh_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadPolyfaceMesh_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadPolyfaceMesh_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadPolyfaceMesh_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadPolyfaceMesh_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadPolyfaceMesh_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadPolyfaceMesh_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadPolyfaceMesh_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcadPolyfaceMesh_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcadPolyfaceMesh_get_Coordinate(This,Index,pVarCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,pVarCoord) ) 

#define IIcadPolyfaceMesh_put_Coordinate(This,Index,varCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,varCoord) ) 

#define IIcadPolyfaceMesh_get_NumberOfVertices(This,pCount)	\
    ( (This)->lpVtbl -> get_NumberOfVertices(This,pCount) ) 

#define IIcadPolyfaceMesh_get_NumberOfFaces(This,pCount)	\
    ( (This)->lpVtbl -> get_NumberOfFaces(This,pCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPolyfaceMesh_INTERFACE_DEFINED__ */


#ifndef __IIcadPViewport_INTERFACE_DEFINED__
#define __IIcadPViewport_INTERFACE_DEFINED__

/* interface IIcadPViewport */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPViewport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c4885e73-7c9b-41fb-8e46-da560c9934e3")
    IIcadPViewport : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Center( 
            /* [retval][out] */ VARIANT *vppCenter) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Center( 
            /* [in] */ VARIANT vCenter) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Direction( 
            /* [retval][out] */ VARIANT *pVarNormal) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Direction( 
            /* [in] */ VARIANT varNormal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GridOn( 
            /* [retval][out] */ VARIANT_BOOL *pGridOn) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GridOn( 
            /* [in] */ VARIANT_BOOL GridOn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LensLength( 
            /* [retval][out] */ double *pLensLength) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LensLength( 
            /* [in] */ double LensLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RemoveHiddenLines( 
            /* [retval][out] */ VARIANT_BOOL *pRemoveHiddenLines) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RemoveHiddenLines( 
            /* [in] */ VARIANT_BOOL RemoveHiddenLines) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SnapBasePoint( 
            /* [retval][out] */ VARIANT *vppSnapBasePoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SnapBasePoint( 
            /* [in] */ VARIANT vSnapBasePoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SnapOn( 
            /* [retval][out] */ VARIANT_BOOL *pSnapOn) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SnapOn( 
            /* [in] */ VARIANT_BOOL SnapOn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SnapRotationAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SnapRotationAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *vppTarget) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Target( 
            /* [in] */ VARIANT vTarget) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TwistAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TwistAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UCSIconAtOrigin( 
            /* [retval][out] */ VARIANT_BOOL *pIcon) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UCSIconAtOrigin( 
            /* [in] */ VARIANT_BOOL Icon) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UCSIconOn( 
            /* [retval][out] */ VARIANT_BOOL *pIcon) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UCSIconOn( 
            /* [in] */ VARIANT_BOOL Icon) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get__ViewportID( 
            /* [retval][out] */ int *pID) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [in] */ VARIANT_BOOL Status) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetGridSpacing( 
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSnapSpacing( 
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetGridSpacing( 
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetSnapSpacing( 
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CustomScale( 
            /* [retval][out] */ DOUBLE *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_CustomScale( 
            /* [in] */ DOUBLE newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPViewportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPViewport * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPViewport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPViewport * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPViewport * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPViewport * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPViewport * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPViewport * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPViewport * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadPViewport * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPViewport * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadPViewport * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadPViewport * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadPViewport * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadPViewport * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadPViewport * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadPViewport * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadPViewport * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadPViewport * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadPViewport * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadPViewport * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadPViewport * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadPViewport * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadPViewport * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadPViewport * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadPViewport * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadPViewport * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadPViewport * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadPViewport * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadPViewport * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadPViewport * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadPViewport * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadPViewport * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadPViewport * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadPViewport * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadPViewport * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadPViewport * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadPViewport * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadPViewport * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT *vppCenter);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT vCenter);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT *pVarNormal);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT varNormal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GridOn )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pGridOn);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GridOn )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL GridOn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadPViewport * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadPViewport * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LensLength )( 
            IIcadPViewport * This,
            /* [retval][out] */ double *pLensLength);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LensLength )( 
            IIcadPViewport * This,
            /* [in] */ double LensLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RemoveHiddenLines )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pRemoveHiddenLines);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RemoveHiddenLines )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL RemoveHiddenLines);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapBasePoint )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT *vppSnapBasePoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SnapBasePoint )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT vSnapBasePoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapOn )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pSnapOn);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SnapOn )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL SnapOn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapRotationAngle )( 
            IIcadPViewport * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SnapRotationAngle )( 
            IIcadPViewport * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT *vppTarget);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT vTarget);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TwistAngle )( 
            IIcadPViewport * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TwistAngle )( 
            IIcadPViewport * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconAtOrigin )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pIcon);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconAtOrigin )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL Icon);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UCSIconOn )( 
            IIcadPViewport * This,
            /* [retval][out] */ VARIANT_BOOL *pIcon);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UCSIconOn )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL Icon);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get__ViewportID )( 
            IIcadPViewport * This,
            /* [retval][out] */ int *pID);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadPViewport * This,
            /* [retval][out] */ double *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IIcadPViewport * This,
            /* [in] */ double Width);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            IIcadPViewport * This,
            /* [in] */ VARIANT_BOOL Status);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetGridSpacing )( 
            IIcadPViewport * This,
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSnapSpacing )( 
            IIcadPViewport * This,
            /* [out][in] */ double *Xspacing,
            /* [out][in] */ double *Yspacing);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetGridSpacing )( 
            IIcadPViewport * This,
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetSnapSpacing )( 
            IIcadPViewport * This,
            /* [in] */ double Xspacing,
            /* [in] */ double Yspacing);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CustomScale )( 
            IIcadPViewport * This,
            /* [retval][out] */ DOUBLE *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CustomScale )( 
            IIcadPViewport * This,
            /* [in] */ DOUBLE newVal);
        
        END_INTERFACE
    } IIcadPViewportVtbl;

    interface IIcadPViewport
    {
        CONST_VTBL struct IIcadPViewportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPViewport_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPViewport_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPViewport_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPViewport_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPViewport_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPViewport_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPViewport_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPViewport_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPViewport_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadPViewport_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPViewport_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadPViewport_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadPViewport__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadPViewport_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadPViewport_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadPViewport_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadPViewport_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadPViewport_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadPViewport_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadPViewport_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadPViewport_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadPViewport_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadPViewport_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadPViewport_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadPViewport_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadPViewport_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadPViewport_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPViewport_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadPViewport_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadPViewport_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadPViewport_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadPViewport_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadPViewport_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadPViewport_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadPViewport_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadPViewport_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadPViewport_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadPViewport_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadPViewport_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadPViewport_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadPViewport_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadPViewport_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadPViewport_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadPViewport_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadPViewport_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadPViewport_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadPViewport_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadPViewport_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadPViewport_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadPViewport_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadPViewport_get_Center(This,vppCenter)	\
    ( (This)->lpVtbl -> get_Center(This,vppCenter) ) 

#define IIcadPViewport_put_Center(This,vCenter)	\
    ( (This)->lpVtbl -> put_Center(This,vCenter) ) 

#define IIcadPViewport_get_Direction(This,pVarNormal)	\
    ( (This)->lpVtbl -> get_Direction(This,pVarNormal) ) 

#define IIcadPViewport_put_Direction(This,varNormal)	\
    ( (This)->lpVtbl -> put_Direction(This,varNormal) ) 

#define IIcadPViewport_get_GridOn(This,pGridOn)	\
    ( (This)->lpVtbl -> get_GridOn(This,pGridOn) ) 

#define IIcadPViewport_put_GridOn(This,GridOn)	\
    ( (This)->lpVtbl -> put_GridOn(This,GridOn) ) 

#define IIcadPViewport_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadPViewport_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadPViewport_get_LensLength(This,pLensLength)	\
    ( (This)->lpVtbl -> get_LensLength(This,pLensLength) ) 

#define IIcadPViewport_put_LensLength(This,LensLength)	\
    ( (This)->lpVtbl -> put_LensLength(This,LensLength) ) 

#define IIcadPViewport_get_RemoveHiddenLines(This,pRemoveHiddenLines)	\
    ( (This)->lpVtbl -> get_RemoveHiddenLines(This,pRemoveHiddenLines) ) 

#define IIcadPViewport_put_RemoveHiddenLines(This,RemoveHiddenLines)	\
    ( (This)->lpVtbl -> put_RemoveHiddenLines(This,RemoveHiddenLines) ) 

#define IIcadPViewport_get_SnapBasePoint(This,vppSnapBasePoint)	\
    ( (This)->lpVtbl -> get_SnapBasePoint(This,vppSnapBasePoint) ) 

#define IIcadPViewport_put_SnapBasePoint(This,vSnapBasePoint)	\
    ( (This)->lpVtbl -> put_SnapBasePoint(This,vSnapBasePoint) ) 

#define IIcadPViewport_get_SnapOn(This,pSnapOn)	\
    ( (This)->lpVtbl -> get_SnapOn(This,pSnapOn) ) 

#define IIcadPViewport_put_SnapOn(This,SnapOn)	\
    ( (This)->lpVtbl -> put_SnapOn(This,SnapOn) ) 

#define IIcadPViewport_get_SnapRotationAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_SnapRotationAngle(This,pAngle) ) 

#define IIcadPViewport_put_SnapRotationAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_SnapRotationAngle(This,Angle) ) 

#define IIcadPViewport_get_Target(This,vppTarget)	\
    ( (This)->lpVtbl -> get_Target(This,vppTarget) ) 

#define IIcadPViewport_put_Target(This,vTarget)	\
    ( (This)->lpVtbl -> put_Target(This,vTarget) ) 

#define IIcadPViewport_get_TwistAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_TwistAngle(This,pAngle) ) 

#define IIcadPViewport_put_TwistAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_TwistAngle(This,Angle) ) 

#define IIcadPViewport_get_UCSIconAtOrigin(This,pIcon)	\
    ( (This)->lpVtbl -> get_UCSIconAtOrigin(This,pIcon) ) 

#define IIcadPViewport_put_UCSIconAtOrigin(This,Icon)	\
    ( (This)->lpVtbl -> put_UCSIconAtOrigin(This,Icon) ) 

#define IIcadPViewport_get_UCSIconOn(This,pIcon)	\
    ( (This)->lpVtbl -> get_UCSIconOn(This,pIcon) ) 

#define IIcadPViewport_put_UCSIconOn(This,Icon)	\
    ( (This)->lpVtbl -> put_UCSIconOn(This,Icon) ) 

#define IIcadPViewport_get__ViewportID(This,pID)	\
    ( (This)->lpVtbl -> get__ViewportID(This,pID) ) 

#define IIcadPViewport_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadPViewport_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define IIcadPViewport_Display(This,Status)	\
    ( (This)->lpVtbl -> Display(This,Status) ) 

#define IIcadPViewport_GetGridSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> GetGridSpacing(This,Xspacing,Yspacing) ) 

#define IIcadPViewport_GetSnapSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> GetSnapSpacing(This,Xspacing,Yspacing) ) 

#define IIcadPViewport_SetGridSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> SetGridSpacing(This,Xspacing,Yspacing) ) 

#define IIcadPViewport_SetSnapSpacing(This,Xspacing,Yspacing)	\
    ( (This)->lpVtbl -> SetSnapSpacing(This,Xspacing,Yspacing) ) 

#define IIcadPViewport_get_CustomScale(This,pVal)	\
    ( (This)->lpVtbl -> get_CustomScale(This,pVal) ) 

#define IIcadPViewport_put_CustomScale(This,newVal)	\
    ( (This)->lpVtbl -> put_CustomScale(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPViewport_INTERFACE_DEFINED__ */


#ifndef __IIcadRasterImage_INTERFACE_DEFINED__
#define __IIcadRasterImage_INTERFACE_DEFINED__

/* interface IIcadRasterImage */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadRasterImage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cd2280f5-4070-4a38-8386-7525e7649898")
    IIcadRasterImage : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ImageFile( 
            /* [retval][out] */ BSTR *pImageFileName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ImageFile( 
            /* [in] */ BSTR ImageFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ImageVisibility( 
            /* [retval][out] */ VARIANT_BOOL *pVisible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ImageVisibility( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Origin( 
            /* [retval][out] */ VARIANT *pVarOrigin) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Origin( 
            /* [in] */ VARIANT varOrigin) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ImageHeight( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ImageHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ImageWidth( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ImageWidth( 
            /* [in] */ double Width) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ClipBoundary( 
            /* [in] */ VARIANT varBoundary) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Brightness( 
            /* [retval][out] */ long *plValue) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Brightness( 
            /* [in] */ long lValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ClippingEnabled( 
            /* [retval][out] */ VARIANT_BOOL *pbValue) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClippingEnabled( 
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Contrast( 
            /* [retval][out] */ long *plValue) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Contrast( 
            /* [in] */ long lValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Fade( 
            /* [retval][out] */ long *plValue) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Fade( 
            /* [in] */ long lValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *pdValue) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double dValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ShowRotation( 
            /* [retval][out] */ VARIANT_BOOL *pbValue) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ShowRotation( 
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Transparency( 
            /* [retval][out] */ VARIANT_BOOL *pbValue) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Transparency( 
            /* [in] */ VARIANT_BOOL bValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadRasterImageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadRasterImage * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadRasterImage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadRasterImage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadRasterImage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadRasterImage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadRasterImage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadRasterImage * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadRasterImage * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadRasterImage * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadRasterImage * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadRasterImage * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadRasterImage * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadRasterImage * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadRasterImage * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadRasterImage * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadRasterImage * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadRasterImage * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadRasterImage * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadRasterImage * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadRasterImage * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadRasterImage * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadRasterImage * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadRasterImage * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadRasterImage * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadRasterImage * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadRasterImage * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadRasterImage * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadRasterImage * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadRasterImage * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadRasterImage * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadRasterImage * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadRasterImage * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadRasterImage * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadRasterImage * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadRasterImage * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadRasterImage * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadRasterImage * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadRasterImage * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ImageFile )( 
            IIcadRasterImage * This,
            /* [retval][out] */ BSTR *pImageFileName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ImageFile )( 
            IIcadRasterImage * This,
            /* [in] */ BSTR ImageFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ImageVisibility )( 
            IIcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ImageVisibility )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Origin )( 
            IIcadRasterImage * This,
            /* [retval][out] */ VARIANT *pVarOrigin);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Origin )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varOrigin);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ImageHeight )( 
            IIcadRasterImage * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ImageHeight )( 
            IIcadRasterImage * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ImageWidth )( 
            IIcadRasterImage * This,
            /* [retval][out] */ double *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ImageWidth )( 
            IIcadRasterImage * This,
            /* [in] */ double Width);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadRasterImage * This,
            /* [retval][out] */ double *pHeight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadRasterImage * This,
            /* [retval][out] */ double *pWidth);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadRasterImage * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadRasterImage * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClipBoundary )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT varBoundary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Brightness )( 
            IIcadRasterImage * This,
            /* [retval][out] */ long *plValue);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Brightness )( 
            IIcadRasterImage * This,
            /* [in] */ long lValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClippingEnabled )( 
            IIcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *pbValue);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClippingEnabled )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Contrast )( 
            IIcadRasterImage * This,
            /* [retval][out] */ long *plValue);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Contrast )( 
            IIcadRasterImage * This,
            /* [in] */ long lValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Fade )( 
            IIcadRasterImage * This,
            /* [retval][out] */ long *plValue);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Fade )( 
            IIcadRasterImage * This,
            /* [in] */ long lValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadRasterImage * This,
            /* [retval][out] */ double *pdValue);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadRasterImage * This,
            /* [in] */ double dValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowRotation )( 
            IIcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *pbValue);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowRotation )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT_BOOL bValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Transparency )( 
            IIcadRasterImage * This,
            /* [retval][out] */ VARIANT_BOOL *pbValue);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Transparency )( 
            IIcadRasterImage * This,
            /* [in] */ VARIANT_BOOL bValue);
        
        END_INTERFACE
    } IIcadRasterImageVtbl;

    interface IIcadRasterImage
    {
        CONST_VTBL struct IIcadRasterImageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadRasterImage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadRasterImage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadRasterImage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadRasterImage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadRasterImage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadRasterImage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadRasterImage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadRasterImage_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadRasterImage_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadRasterImage_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadRasterImage_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadRasterImage_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadRasterImage__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadRasterImage_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadRasterImage_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadRasterImage_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadRasterImage_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadRasterImage_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadRasterImage_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadRasterImage_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadRasterImage_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadRasterImage_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadRasterImage_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadRasterImage_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadRasterImage_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadRasterImage_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadRasterImage_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadRasterImage_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadRasterImage_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadRasterImage_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadRasterImage_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadRasterImage_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadRasterImage_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadRasterImage_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadRasterImage_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadRasterImage_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadRasterImage_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadRasterImage_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadRasterImage_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadRasterImage_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadRasterImage_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadRasterImage_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadRasterImage_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadRasterImage_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadRasterImage_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadRasterImage_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadRasterImage_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadRasterImage_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadRasterImage_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadRasterImage_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadRasterImage_get_ImageFile(This,pImageFileName)	\
    ( (This)->lpVtbl -> get_ImageFile(This,pImageFileName) ) 

#define IIcadRasterImage_put_ImageFile(This,ImageFileName)	\
    ( (This)->lpVtbl -> put_ImageFile(This,ImageFileName) ) 

#define IIcadRasterImage_get_ImageVisibility(This,pVisible)	\
    ( (This)->lpVtbl -> get_ImageVisibility(This,pVisible) ) 

#define IIcadRasterImage_put_ImageVisibility(This,Visible)	\
    ( (This)->lpVtbl -> put_ImageVisibility(This,Visible) ) 

#define IIcadRasterImage_get_Origin(This,pVarOrigin)	\
    ( (This)->lpVtbl -> get_Origin(This,pVarOrigin) ) 

#define IIcadRasterImage_put_Origin(This,varOrigin)	\
    ( (This)->lpVtbl -> put_Origin(This,varOrigin) ) 

#define IIcadRasterImage_get_ImageHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_ImageHeight(This,pHeight) ) 

#define IIcadRasterImage_put_ImageHeight(This,Height)	\
    ( (This)->lpVtbl -> put_ImageHeight(This,Height) ) 

#define IIcadRasterImage_get_ImageWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_ImageWidth(This,pWidth) ) 

#define IIcadRasterImage_put_ImageWidth(This,Width)	\
    ( (This)->lpVtbl -> put_ImageWidth(This,Width) ) 

#define IIcadRasterImage_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadRasterImage_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadRasterImage_get_Name(This,bstrName)	\
    ( (This)->lpVtbl -> get_Name(This,bstrName) ) 

#define IIcadRasterImage_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IIcadRasterImage_ClipBoundary(This,varBoundary)	\
    ( (This)->lpVtbl -> ClipBoundary(This,varBoundary) ) 

#define IIcadRasterImage_get_Brightness(This,plValue)	\
    ( (This)->lpVtbl -> get_Brightness(This,plValue) ) 

#define IIcadRasterImage_put_Brightness(This,lValue)	\
    ( (This)->lpVtbl -> put_Brightness(This,lValue) ) 

#define IIcadRasterImage_get_ClippingEnabled(This,pbValue)	\
    ( (This)->lpVtbl -> get_ClippingEnabled(This,pbValue) ) 

#define IIcadRasterImage_put_ClippingEnabled(This,bValue)	\
    ( (This)->lpVtbl -> put_ClippingEnabled(This,bValue) ) 

#define IIcadRasterImage_get_Contrast(This,plValue)	\
    ( (This)->lpVtbl -> get_Contrast(This,plValue) ) 

#define IIcadRasterImage_put_Contrast(This,lValue)	\
    ( (This)->lpVtbl -> put_Contrast(This,lValue) ) 

#define IIcadRasterImage_get_Fade(This,plValue)	\
    ( (This)->lpVtbl -> get_Fade(This,plValue) ) 

#define IIcadRasterImage_put_Fade(This,lValue)	\
    ( (This)->lpVtbl -> put_Fade(This,lValue) ) 

#define IIcadRasterImage_get_ScaleFactor(This,pdValue)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,pdValue) ) 

#define IIcadRasterImage_put_ScaleFactor(This,dValue)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,dValue) ) 

#define IIcadRasterImage_get_ShowRotation(This,pbValue)	\
    ( (This)->lpVtbl -> get_ShowRotation(This,pbValue) ) 

#define IIcadRasterImage_put_ShowRotation(This,bValue)	\
    ( (This)->lpVtbl -> put_ShowRotation(This,bValue) ) 

#define IIcadRasterImage_get_Transparency(This,pbValue)	\
    ( (This)->lpVtbl -> get_Transparency(This,pbValue) ) 

#define IIcadRasterImage_put_Transparency(This,bValue)	\
    ( (This)->lpVtbl -> put_Transparency(This,bValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadRasterImage_INTERFACE_DEFINED__ */


#ifndef __IIcadRay_INTERFACE_DEFINED__
#define __IIcadRay_INTERFACE_DEFINED__

/* interface IIcadRay */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadRay;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("45e08568-b158-45e4-9081-aaf1ebd4c629")
    IIcadRay : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BasePoint( 
            /* [retval][out] */ VARIANT *vppSnapBasePoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BasePoint( 
            /* [in] */ VARIANT vSnapBasePoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DirectionVector( 
            /* [retval][out] */ VARIANT *vppDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DirectionVector( 
            /* [in] */ VARIANT vDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SecondPoint( 
            /* [retval][out] */ VARIANT *vppSecondPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SecondPoint( 
            /* [in] */ VARIANT vpSecondPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadRayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadRay * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadRay * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadRay * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadRay * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadRay * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadRay * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadRay * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadRay * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadRay * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadRay * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadRay * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadRay * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadRay * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadRay * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadRay * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadRay * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadRay * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadRay * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadRay * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadRay * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadRay * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadRay * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadRay * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadRay * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadRay * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadRay * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadRay * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadRay * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadRay * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadRay * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadRay * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadRay * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadRay * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadRay * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadRay * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadRay * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadRay * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadRay * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadRay * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadRay * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadRay * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadRay * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadRay * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadRay * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadRay * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadRay * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadRay * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadRay * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadRay * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadRay * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BasePoint )( 
            IIcadRay * This,
            /* [retval][out] */ VARIANT *vppSnapBasePoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BasePoint )( 
            IIcadRay * This,
            /* [in] */ VARIANT vSnapBasePoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DirectionVector )( 
            IIcadRay * This,
            /* [retval][out] */ VARIANT *vppDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DirectionVector )( 
            IIcadRay * This,
            /* [in] */ VARIANT vDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SecondPoint )( 
            IIcadRay * This,
            /* [retval][out] */ VARIANT *vppSecondPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SecondPoint )( 
            IIcadRay * This,
            /* [in] */ VARIANT vpSecondPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadRay * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        END_INTERFACE
    } IIcadRayVtbl;

    interface IIcadRay
    {
        CONST_VTBL struct IIcadRayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadRay_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadRay_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadRay_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadRay_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadRay_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadRay_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadRay_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadRay_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadRay_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadRay_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadRay_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadRay_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadRay__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadRay_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadRay_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadRay_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadRay_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadRay_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadRay_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadRay_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadRay_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadRay_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadRay_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadRay_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadRay_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadRay_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadRay_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadRay_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadRay_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadRay_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadRay_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadRay_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadRay_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadRay_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadRay_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadRay_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadRay_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadRay_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadRay_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadRay_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadRay_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadRay_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadRay_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadRay_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadRay_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadRay_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadRay_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadRay_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadRay_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadRay_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadRay_get_BasePoint(This,vppSnapBasePoint)	\
    ( (This)->lpVtbl -> get_BasePoint(This,vppSnapBasePoint) ) 

#define IIcadRay_put_BasePoint(This,vSnapBasePoint)	\
    ( (This)->lpVtbl -> put_BasePoint(This,vSnapBasePoint) ) 

#define IIcadRay_get_DirectionVector(This,vppDirection)	\
    ( (This)->lpVtbl -> get_DirectionVector(This,vppDirection) ) 

#define IIcadRay_put_DirectionVector(This,vDirection)	\
    ( (This)->lpVtbl -> put_DirectionVector(This,vDirection) ) 

#define IIcadRay_get_SecondPoint(This,vppSecondPoint)	\
    ( (This)->lpVtbl -> get_SecondPoint(This,vppSecondPoint) ) 

#define IIcadRay_put_SecondPoint(This,vpSecondPoint)	\
    ( (This)->lpVtbl -> put_SecondPoint(This,vpSecondPoint) ) 

#define IIcadRay_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadRay_INTERFACE_DEFINED__ */


#ifndef __IIcadShape_INTERFACE_DEFINED__
#define __IIcadShape_INTERFACE_DEFINED__

/* interface IIcadShape */
/* [object][unique][hidden][dual][oleautomation][uuid] */ 


EXTERN_C const IID IID_IIcadShape;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e0987fb4-4617-4c9d-b663-6296769d6ff6")
    IIcadShape : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *vpInsPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT vInsPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pBlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR NewBlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *vppExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT vExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadShapeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadShape * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadShape * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadShape * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadShape * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadShape * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadShape * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadShape * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadShape * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadShape * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadShape * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadShape * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadShape * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadShape * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadShape * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadShape * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadShape * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadShape * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadShape * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadShape * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadShape * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadShape * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadShape * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadShape * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadShape * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadShape * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadShape * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadShape * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadShape * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadShape * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadShape * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadShape * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadShape * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadShape * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadShape * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadShape * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadShape * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadShape * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadShape * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadShape * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadShape * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadShape * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadShape * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadShape * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadShape * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadShape * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadShape * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadShape * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadShape * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadShape * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadShape * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadShape * This,
            /* [retval][out] */ VARIANT *vpInsPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadShape * This,
            /* [in] */ VARIANT vInsPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadShape * This,
            /* [retval][out] */ BSTR *pBlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadShape * This,
            /* [in] */ BSTR NewBlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadShape * This,
            /* [retval][out] */ VARIANT *vppExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadShape * This,
            /* [in] */ VARIANT vExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadShape * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadShape * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadShape * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadShape * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadShape * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadShape * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IIcadShape * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IIcadShape * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadShape * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadShape * This,
            /* [in] */ double Thick);
        
        END_INTERFACE
    } IIcadShapeVtbl;

    interface IIcadShape
    {
        CONST_VTBL struct IIcadShapeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadShape_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadShape_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadShape_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadShape_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadShape_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadShape_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadShape_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadShape_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadShape_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadShape_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadShape_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadShape_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadShape__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadShape_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadShape_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadShape_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadShape_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadShape_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadShape_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadShape_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadShape_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadShape_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadShape_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadShape_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadShape_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadShape_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadShape_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadShape_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadShape_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadShape_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadShape_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadShape_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadShape_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadShape_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadShape_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadShape_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadShape_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadShape_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadShape_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadShape_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadShape_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadShape_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadShape_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadShape_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadShape_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadShape_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadShape_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadShape_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadShape_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadShape_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadShape_get_InsertionPoint(This,vpInsPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,vpInsPoint) ) 

#define IIcadShape_put_InsertionPoint(This,vInsPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,vInsPoint) ) 

#define IIcadShape_get_Name(This,pBlockName)	\
    ( (This)->lpVtbl -> get_Name(This,pBlockName) ) 

#define IIcadShape_put_Name(This,NewBlockName)	\
    ( (This)->lpVtbl -> put_Name(This,NewBlockName) ) 

#define IIcadShape_get_Normal(This,vppExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,vppExtrusionDirection) ) 

#define IIcadShape_put_Normal(This,vExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,vExtrusionDirection) ) 

#define IIcadShape_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadShape_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadShape_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadShape_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadShape_get_ScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,pScaleFactor) ) 

#define IIcadShape_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadShape_get_ObliqueAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_ObliqueAngle(This,pAngle) ) 

#define IIcadShape_put_ObliqueAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_ObliqueAngle(This,Angle) ) 

#define IIcadShape_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadShape_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadShape_INTERFACE_DEFINED__ */


#ifndef __IIcadSolid_INTERFACE_DEFINED__
#define __IIcadSolid_INTERFACE_DEFINED__

/* interface IIcadSolid */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadSolid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("93e7c50c-8182-477e-a66c-1df9c0132ec9")
    IIcadSolid : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *vpCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT vCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT vCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *vppExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT vExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadSolidVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadSolid * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadSolid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadSolid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadSolid * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadSolid * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadSolid * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadSolid * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadSolid * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadSolid * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadSolid * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadSolid * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadSolid * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadSolid * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadSolid * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadSolid * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadSolid * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadSolid * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadSolid * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadSolid * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadSolid * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadSolid * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadSolid * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadSolid * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadSolid * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadSolid * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadSolid * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadSolid * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadSolid * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadSolid * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadSolid * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadSolid * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadSolid * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadSolid * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadSolid * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadSolid * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadSolid * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadSolid * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadSolid * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadSolid * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadSolid * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadSolid * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadSolid * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadSolid * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadSolid * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadSolid * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadSolid * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadSolid * This,
            /* [retval][out] */ VARIANT *vpCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadSolid * This,
            /* [in] */ VARIANT vCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcadSolid * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcadSolid * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT vCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadSolid * This,
            /* [retval][out] */ VARIANT *vppExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadSolid * This,
            /* [in] */ VARIANT vExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadSolid * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadSolid * This,
            /* [in] */ double Thick);
        
        END_INTERFACE
    } IIcadSolidVtbl;

    interface IIcadSolid
    {
        CONST_VTBL struct IIcadSolidVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadSolid_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadSolid_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadSolid_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadSolid_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadSolid_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadSolid_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadSolid_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadSolid_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadSolid_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadSolid_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadSolid_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadSolid_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadSolid__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadSolid_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadSolid_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadSolid_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadSolid_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadSolid_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadSolid_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadSolid_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadSolid_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadSolid_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadSolid_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadSolid_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadSolid_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadSolid_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadSolid_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadSolid_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadSolid_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadSolid_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadSolid_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadSolid_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadSolid_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadSolid_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadSolid_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadSolid_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadSolid_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadSolid_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadSolid_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadSolid_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadSolid_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadSolid_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadSolid_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadSolid_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadSolid_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadSolid_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadSolid_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadSolid_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadSolid_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadSolid_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadSolid_get_Coordinates(This,vpCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,vpCoords) ) 

#define IIcadSolid_put_Coordinates(This,vCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,vCoords) ) 

#define IIcadSolid_get_Coordinate(This,Index,vpCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,vpCoord) ) 

#define IIcadSolid_put_Coordinate(This,Index,vCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,vCoord) ) 

#define IIcadSolid_get_Normal(This,vppExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,vppExtrusionDirection) ) 

#define IIcadSolid_put_Normal(This,vExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,vExtrusionDirection) ) 

#define IIcadSolid_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadSolid_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadSolid_INTERFACE_DEFINED__ */


#ifndef __IIcadSpline_INTERFACE_DEFINED__
#define __IIcadSpline_INTERFACE_DEFINED__

/* interface IIcadSpline */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadSpline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3904e471-fc66-4da6-96c2-0a42ad09fee7")
    IIcadSpline : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ double *pLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Closed( 
            /* [retval][out] */ VARIANT_BOOL *bClosed) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Degree( 
            /* [retval][out] */ int *pDegree) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EndTangent( 
            /* [retval][out] */ VARIANT *vppTangent) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EndTangent( 
            /* [in] */ VARIANT vpTangent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FitTolerance( 
            /* [retval][out] */ double *Tolerance) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FitTolerance( 
            /* [in] */ double Tolerance) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsRational( 
            /* [retval][out] */ VARIANT_BOOL *pRational) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StartTangent( 
            /* [retval][out] */ VARIANT *vppTangent) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartTangent( 
            /* [in] */ VARIANT vpTangent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NumberOfControlPoints( 
            /* [retval][out] */ int *pNumControlPoints) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NumberOfFitPoints( 
            /* [retval][out] */ int *pNumFitPoints) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ControlPoints( 
            /* [retval][out] */ VARIANT *vpCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ControlPoints( 
            /* [in] */ VARIANT vCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FitPoints( 
            /* [retval][out] */ VARIANT *vpCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FitPoints( 
            /* [in] */ VARIANT vCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsPeriodic( 
            /* [retval][out] */ VARIANT_BOOL *pIsPeriodic) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsPlanar( 
            /* [retval][out] */ VARIANT_BOOL *pIsPlanar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Knots( 
            /* [retval][out] */ VARIANT *pVarKnots) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Knots( 
            /* [in] */ VARIANT varKnots) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Weights( 
            /* [retval][out] */ VARIANT *pWeights) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Weights( 
            /* [in] */ VARIANT varWeights) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddFitPoint( 
            /* [in] */ int Index,
            /* [in] */ VARIANT vFitPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteFitPoint( 
            /* [in] */ int Index) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ElevateOrder( 
            /* [in] */ long Order) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetControlPoint( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpControlPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFitPoint( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpFitPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetWeight( 
            /* [in] */ int Index,
            /* [retval][out] */ double *pWeight) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PurgeFitData( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Reverse( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetControlPoint( 
            /* [in] */ int Index,
            /* [in] */ VARIANT vControlPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetFitPoint( 
            /* [in] */ int Index,
            /* [in] */ VARIANT vFitPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetWeight( 
            /* [in] */ int Index,
            /* [in] */ double Weight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadSplineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadSpline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadSpline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadSpline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadSpline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadSpline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadSpline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadSpline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadSpline * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadSpline * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadSpline * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadSpline * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadSpline * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadSpline * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadSpline * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadSpline * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadSpline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadSpline * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadSpline * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadSpline * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadSpline * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadSpline * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadSpline * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadSpline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadSpline * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadSpline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadSpline * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadSpline * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadSpline * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadSpline * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadSpline * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadSpline * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadSpline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadSpline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadSpline * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadSpline * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadSpline * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadSpline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadSpline * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadSpline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadSpline * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadSpline * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadSpline * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IIcadSpline * This,
            /* [retval][out] */ double *pLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Closed )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *bClosed);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Degree )( 
            IIcadSpline * This,
            /* [retval][out] */ int *pDegree);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndTangent )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT *vppTangent);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndTangent )( 
            IIcadSpline * This,
            /* [in] */ VARIANT vpTangent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FitTolerance )( 
            IIcadSpline * This,
            /* [retval][out] */ double *Tolerance);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FitTolerance )( 
            IIcadSpline * This,
            /* [in] */ double Tolerance);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRational )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *pRational);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartTangent )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT *vppTangent);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartTangent )( 
            IIcadSpline * This,
            /* [in] */ VARIANT vpTangent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfControlPoints )( 
            IIcadSpline * This,
            /* [retval][out] */ int *pNumControlPoints);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfFitPoints )( 
            IIcadSpline * This,
            /* [retval][out] */ int *pNumFitPoints);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ControlPoints )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT *vpCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ControlPoints )( 
            IIcadSpline * This,
            /* [in] */ VARIANT vCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FitPoints )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT *vpCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FitPoints )( 
            IIcadSpline * This,
            /* [in] */ VARIANT vCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPeriodic )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *pIsPeriodic);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPlanar )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT_BOOL *pIsPlanar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Knots )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT *pVarKnots);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Knots )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varKnots);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Weights )( 
            IIcadSpline * This,
            /* [retval][out] */ VARIANT *pWeights);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Weights )( 
            IIcadSpline * This,
            /* [in] */ VARIANT varWeights);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddFitPoint )( 
            IIcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT vFitPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteFitPoint )( 
            IIcadSpline * This,
            /* [in] */ int Index);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ElevateOrder )( 
            IIcadSpline * This,
            /* [in] */ long Order);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetControlPoint )( 
            IIcadSpline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpControlPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFitPoint )( 
            IIcadSpline * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpFitPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWeight )( 
            IIcadSpline * This,
            /* [in] */ int Index,
            /* [retval][out] */ double *pWeight);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadSpline * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PurgeFitData )( 
            IIcadSpline * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Reverse )( 
            IIcadSpline * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetControlPoint )( 
            IIcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT vControlPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFitPoint )( 
            IIcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT vFitPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetWeight )( 
            IIcadSpline * This,
            /* [in] */ int Index,
            /* [in] */ double Weight);
        
        END_INTERFACE
    } IIcadSplineVtbl;

    interface IIcadSpline
    {
        CONST_VTBL struct IIcadSplineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadSpline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadSpline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadSpline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadSpline_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadSpline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadSpline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadSpline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadSpline_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadSpline_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadSpline_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadSpline_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadSpline_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadSpline__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadSpline_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadSpline_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadSpline_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadSpline_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadSpline_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadSpline_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadSpline_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadSpline_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadSpline_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadSpline_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadSpline_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadSpline_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadSpline_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadSpline_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadSpline_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadSpline_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadSpline_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadSpline_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadSpline_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadSpline_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadSpline_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadSpline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadSpline_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadSpline_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadSpline_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadSpline_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadSpline_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadSpline_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadSpline_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadSpline_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadSpline_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadSpline_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadSpline_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadSpline_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadSpline_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadSpline_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadSpline_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadSpline_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadSpline_get_Length(This,pLength)	\
    ( (This)->lpVtbl -> get_Length(This,pLength) ) 

#define IIcadSpline_get_Closed(This,bClosed)	\
    ( (This)->lpVtbl -> get_Closed(This,bClosed) ) 

#define IIcadSpline_get_Degree(This,pDegree)	\
    ( (This)->lpVtbl -> get_Degree(This,pDegree) ) 

#define IIcadSpline_get_EndTangent(This,vppTangent)	\
    ( (This)->lpVtbl -> get_EndTangent(This,vppTangent) ) 

#define IIcadSpline_put_EndTangent(This,vpTangent)	\
    ( (This)->lpVtbl -> put_EndTangent(This,vpTangent) ) 

#define IIcadSpline_get_FitTolerance(This,Tolerance)	\
    ( (This)->lpVtbl -> get_FitTolerance(This,Tolerance) ) 

#define IIcadSpline_put_FitTolerance(This,Tolerance)	\
    ( (This)->lpVtbl -> put_FitTolerance(This,Tolerance) ) 

#define IIcadSpline_get_IsRational(This,pRational)	\
    ( (This)->lpVtbl -> get_IsRational(This,pRational) ) 

#define IIcadSpline_get_StartTangent(This,vppTangent)	\
    ( (This)->lpVtbl -> get_StartTangent(This,vppTangent) ) 

#define IIcadSpline_put_StartTangent(This,vpTangent)	\
    ( (This)->lpVtbl -> put_StartTangent(This,vpTangent) ) 

#define IIcadSpline_get_NumberOfControlPoints(This,pNumControlPoints)	\
    ( (This)->lpVtbl -> get_NumberOfControlPoints(This,pNumControlPoints) ) 

#define IIcadSpline_get_NumberOfFitPoints(This,pNumFitPoints)	\
    ( (This)->lpVtbl -> get_NumberOfFitPoints(This,pNumFitPoints) ) 

#define IIcadSpline_get_ControlPoints(This,vpCoords)	\
    ( (This)->lpVtbl -> get_ControlPoints(This,vpCoords) ) 

#define IIcadSpline_put_ControlPoints(This,vCoords)	\
    ( (This)->lpVtbl -> put_ControlPoints(This,vCoords) ) 

#define IIcadSpline_get_FitPoints(This,vpCoords)	\
    ( (This)->lpVtbl -> get_FitPoints(This,vpCoords) ) 

#define IIcadSpline_put_FitPoints(This,vCoords)	\
    ( (This)->lpVtbl -> put_FitPoints(This,vCoords) ) 

#define IIcadSpline_get_IsPeriodic(This,pIsPeriodic)	\
    ( (This)->lpVtbl -> get_IsPeriodic(This,pIsPeriodic) ) 

#define IIcadSpline_get_IsPlanar(This,pIsPlanar)	\
    ( (This)->lpVtbl -> get_IsPlanar(This,pIsPlanar) ) 

#define IIcadSpline_get_Knots(This,pVarKnots)	\
    ( (This)->lpVtbl -> get_Knots(This,pVarKnots) ) 

#define IIcadSpline_put_Knots(This,varKnots)	\
    ( (This)->lpVtbl -> put_Knots(This,varKnots) ) 

#define IIcadSpline_get_Weights(This,pWeights)	\
    ( (This)->lpVtbl -> get_Weights(This,pWeights) ) 

#define IIcadSpline_put_Weights(This,varWeights)	\
    ( (This)->lpVtbl -> put_Weights(This,varWeights) ) 

#define IIcadSpline_AddFitPoint(This,Index,vFitPoint)	\
    ( (This)->lpVtbl -> AddFitPoint(This,Index,vFitPoint) ) 

#define IIcadSpline_DeleteFitPoint(This,Index)	\
    ( (This)->lpVtbl -> DeleteFitPoint(This,Index) ) 

#define IIcadSpline_ElevateOrder(This,Order)	\
    ( (This)->lpVtbl -> ElevateOrder(This,Order) ) 

#define IIcadSpline_GetControlPoint(This,Index,vpControlPoint)	\
    ( (This)->lpVtbl -> GetControlPoint(This,Index,vpControlPoint) ) 

#define IIcadSpline_GetFitPoint(This,Index,vpFitPoint)	\
    ( (This)->lpVtbl -> GetFitPoint(This,Index,vpFitPoint) ) 

#define IIcadSpline_GetWeight(This,Index,pWeight)	\
    ( (This)->lpVtbl -> GetWeight(This,Index,pWeight) ) 

#define IIcadSpline_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#define IIcadSpline_PurgeFitData(This)	\
    ( (This)->lpVtbl -> PurgeFitData(This) ) 

#define IIcadSpline_Reverse(This)	\
    ( (This)->lpVtbl -> Reverse(This) ) 

#define IIcadSpline_SetControlPoint(This,Index,vControlPoint)	\
    ( (This)->lpVtbl -> SetControlPoint(This,Index,vControlPoint) ) 

#define IIcadSpline_SetFitPoint(This,Index,vFitPoint)	\
    ( (This)->lpVtbl -> SetFitPoint(This,Index,vFitPoint) ) 

#define IIcadSpline_SetWeight(This,Index,Weight)	\
    ( (This)->lpVtbl -> SetWeight(This,Index,Weight) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadSpline_INTERFACE_DEFINED__ */


#ifndef __IIcadText_INTERFACE_DEFINED__
#define __IIcadText_INTERFACE_DEFINED__

/* interface IIcadText */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadText;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3c0659ad-8ecf-4713-8dc7-005e48182d6a")
    IIcadText : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentPoint( 
            /* [retval][out] */ VARIANT *vpPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextAlignmentPoint( 
            /* [in] */ VARIANT vPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *vppExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT vExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextGenerationFlag( 
            /* [retval][out] */ ZcTextGenerationFlag *pFlags) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextGenerationFlag( 
            /* [in] */ ZcTextGenerationFlag Flags) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignment( 
            /* [retval][out] */ ZcHorizontalAlignment *pHorizAlign) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalAlignment( 
            /* [in] */ ZcHorizontalAlignment HorizAlign) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *vpInsPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT vInsPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObliqueAngle( 
            /* [retval][out] */ double *pAngle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ObliqueAngle( 
            /* [in] */ double Angle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *pScale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double Scale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *pStyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *pText) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignment( 
            /* [retval][out] */ ZcVerticalAlignment *pVertAlign) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalAlignment( 
            /* [in] */ ZcVerticalAlignment VertiAlign) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ ZcAlignment *pAlignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ ZcAlignment pAlignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Backward( 
            /* [retval][out] */ VARIANT_BOOL *bBackward) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Backward( 
            /* [in] */ VARIANT_BOOL bBackward) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UpsideDown( 
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UpsideDown( 
            /* [in] */ VARIANT_BOOL bUpsideDown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadTextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadText * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadText * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadText * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadText * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadText * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadText * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadText * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadText * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadText * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadText * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadText * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadText * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadText * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadText * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadText * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadText * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadText * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadText * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadText * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadText * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadText * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadText * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadText * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadText * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadText * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadText * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadText * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadText * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadText * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadText * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadText * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadText * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadText * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadText * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadText * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadText * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadText * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadText * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadText * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadText * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadText * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadText * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadText * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadText * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadText * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadText * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadText * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentPoint )( 
            IIcadText * This,
            /* [retval][out] */ VARIANT *vpPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignmentPoint )( 
            IIcadText * This,
            /* [in] */ VARIANT vPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadText * This,
            /* [retval][out] */ VARIANT *vppExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadText * This,
            /* [in] */ VARIANT vExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGenerationFlag )( 
            IIcadText * This,
            /* [retval][out] */ ZcTextGenerationFlag *pFlags);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGenerationFlag )( 
            IIcadText * This,
            /* [in] */ ZcTextGenerationFlag Flags);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadText * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadText * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            IIcadText * This,
            /* [retval][out] */ ZcHorizontalAlignment *pHorizAlign);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            IIcadText * This,
            /* [in] */ ZcHorizontalAlignment HorizAlign);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadText * This,
            /* [retval][out] */ VARIANT *vpInsPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadText * This,
            /* [in] */ VARIANT vInsPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObliqueAngle )( 
            IIcadText * This,
            /* [retval][out] */ double *pAngle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObliqueAngle )( 
            IIcadText * This,
            /* [in] */ double Angle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadText * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadText * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadText * This,
            /* [retval][out] */ double *pScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadText * This,
            /* [in] */ double Scale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadText * This,
            /* [retval][out] */ BSTR *pStyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadText * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadText * This,
            /* [retval][out] */ BSTR *pText);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadText * This,
            /* [in] */ BSTR Text);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadText * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadText * This,
            /* [in] */ double Thick);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            IIcadText * This,
            /* [retval][out] */ ZcVerticalAlignment *pVertAlign);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            IIcadText * This,
            /* [in] */ ZcVerticalAlignment VertiAlign);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            IIcadText * This,
            /* [retval][out] */ ZcAlignment *pAlignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            IIcadText * This,
            /* [in] */ ZcAlignment pAlignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Backward )( 
            IIcadText * This,
            /* [retval][out] */ VARIANT_BOOL *bBackward);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Backward )( 
            IIcadText * This,
            /* [in] */ VARIANT_BOOL bBackward);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpsideDown )( 
            IIcadText * This,
            /* [retval][out] */ VARIANT_BOOL *bUpsideDown);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpsideDown )( 
            IIcadText * This,
            /* [in] */ VARIANT_BOOL bUpsideDown);
        
        END_INTERFACE
    } IIcadTextVtbl;

    interface IIcadText
    {
        CONST_VTBL struct IIcadTextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadText_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadText_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadText_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadText_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadText_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadText_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadText_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadText_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadText_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadText_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadText_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadText_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadText__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadText_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadText_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadText_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadText_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadText_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadText_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadText_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadText_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadText_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadText_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadText_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadText_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadText_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadText_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadText_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadText_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadText_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadText_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadText_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadText_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadText_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadText_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadText_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadText_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadText_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadText_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadText_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadText_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadText_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadText_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadText_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadText_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadText_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadText_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadText_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadText_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadText_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadText_get_TextAlignmentPoint(This,vpPoint)	\
    ( (This)->lpVtbl -> get_TextAlignmentPoint(This,vpPoint) ) 

#define IIcadText_put_TextAlignmentPoint(This,vPoint)	\
    ( (This)->lpVtbl -> put_TextAlignmentPoint(This,vPoint) ) 

#define IIcadText_get_Normal(This,vppExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,vppExtrusionDirection) ) 

#define IIcadText_put_Normal(This,vExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,vExtrusionDirection) ) 

#define IIcadText_get_TextGenerationFlag(This,pFlags)	\
    ( (This)->lpVtbl -> get_TextGenerationFlag(This,pFlags) ) 

#define IIcadText_put_TextGenerationFlag(This,Flags)	\
    ( (This)->lpVtbl -> put_TextGenerationFlag(This,Flags) ) 

#define IIcadText_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadText_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define IIcadText_get_HorizontalAlignment(This,pHorizAlign)	\
    ( (This)->lpVtbl -> get_HorizontalAlignment(This,pHorizAlign) ) 

#define IIcadText_put_HorizontalAlignment(This,HorizAlign)	\
    ( (This)->lpVtbl -> put_HorizontalAlignment(This,HorizAlign) ) 

#define IIcadText_get_InsertionPoint(This,vpInsPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,vpInsPoint) ) 

#define IIcadText_put_InsertionPoint(This,vInsPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,vInsPoint) ) 

#define IIcadText_get_ObliqueAngle(This,pAngle)	\
    ( (This)->lpVtbl -> get_ObliqueAngle(This,pAngle) ) 

#define IIcadText_put_ObliqueAngle(This,Angle)	\
    ( (This)->lpVtbl -> put_ObliqueAngle(This,Angle) ) 

#define IIcadText_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadText_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadText_get_ScaleFactor(This,pScale)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,pScale) ) 

#define IIcadText_put_ScaleFactor(This,Scale)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,Scale) ) 

#define IIcadText_get_StyleName(This,pStyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,pStyleName) ) 

#define IIcadText_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadText_get_TextString(This,pText)	\
    ( (This)->lpVtbl -> get_TextString(This,pText) ) 

#define IIcadText_put_TextString(This,Text)	\
    ( (This)->lpVtbl -> put_TextString(This,Text) ) 

#define IIcadText_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadText_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#define IIcadText_get_VerticalAlignment(This,pVertAlign)	\
    ( (This)->lpVtbl -> get_VerticalAlignment(This,pVertAlign) ) 

#define IIcadText_put_VerticalAlignment(This,VertiAlign)	\
    ( (This)->lpVtbl -> put_VerticalAlignment(This,VertiAlign) ) 

#define IIcadText_get_Alignment(This,pAlignment)	\
    ( (This)->lpVtbl -> get_Alignment(This,pAlignment) ) 

#define IIcadText_put_Alignment(This,pAlignment)	\
    ( (This)->lpVtbl -> put_Alignment(This,pAlignment) ) 

#define IIcadText_get_Backward(This,bBackward)	\
    ( (This)->lpVtbl -> get_Backward(This,bBackward) ) 

#define IIcadText_put_Backward(This,bBackward)	\
    ( (This)->lpVtbl -> put_Backward(This,bBackward) ) 

#define IIcadText_get_UpsideDown(This,bUpsideDown)	\
    ( (This)->lpVtbl -> get_UpsideDown(This,bUpsideDown) ) 

#define IIcadText_put_UpsideDown(This,bUpsideDown)	\
    ( (This)->lpVtbl -> put_UpsideDown(This,bUpsideDown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadText_INTERFACE_DEFINED__ */


#ifndef __IIcadTolerance_INTERFACE_DEFINED__
#define __IIcadTolerance_INTERFACE_DEFINED__

/* interface IIcadTolerance */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadTolerance;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("41c7a5db-aa73-4ab6-8cc6-65ed35bb946b")
    IIcadTolerance : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DirectionVector( 
            /* [retval][out] */ VARIANT *vppDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DirectionVector( 
            /* [in] */ VARIANT vDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *vppExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT vExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextHeight( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *vpInsertPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT vpInsertPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *pStyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *pText) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextColor( 
            /* [retval][out] */ ZcColors *pColor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextStyle( 
            /* [retval][out] */ BSTR *pStyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextStyle( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double dbScaleFactor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadToleranceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadTolerance * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadTolerance * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadTolerance * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadTolerance * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadTolerance * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadTolerance * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadTolerance * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadTolerance * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadTolerance * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadTolerance * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadTolerance * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadTolerance * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadTolerance * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadTolerance * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadTolerance * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadTolerance * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadTolerance * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadTolerance * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadTolerance * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadTolerance * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadTolerance * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadTolerance * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadTolerance * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadTolerance * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadTolerance * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadTolerance * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadTolerance * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadTolerance * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadTolerance * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadTolerance * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadTolerance * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadTolerance * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadTolerance * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadTolerance * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadTolerance * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadTolerance * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadTolerance * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadTolerance * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadTolerance * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadTolerance * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DirectionVector )( 
            IIcadTolerance * This,
            /* [retval][out] */ VARIANT *vppDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DirectionVector )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT vDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadTolerance * This,
            /* [retval][out] */ VARIANT *vppExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT vExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadTolerance * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadTolerance * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadTolerance * This,
            /* [retval][out] */ VARIANT *vpInsertPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadTolerance * This,
            /* [in] */ VARIANT vpInsertPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadTolerance * This,
            /* [retval][out] */ BSTR *pStyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadTolerance * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadTolerance * This,
            /* [retval][out] */ BSTR *pText);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadTolerance * This,
            /* [in] */ BSTR Text);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadTolerance * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadTolerance * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadTolerance * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadTolerance * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadTolerance * This,
            /* [retval][out] */ BSTR *pStyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadTolerance * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadTolerance * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadTolerance * This,
            /* [in] */ double dbScaleFactor);
        
        END_INTERFACE
    } IIcadToleranceVtbl;

    interface IIcadTolerance
    {
        CONST_VTBL struct IIcadToleranceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadTolerance_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadTolerance_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadTolerance_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadTolerance_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadTolerance_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadTolerance_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadTolerance_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadTolerance_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadTolerance_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadTolerance_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadTolerance_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadTolerance_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadTolerance__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadTolerance_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadTolerance_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadTolerance_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadTolerance_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadTolerance_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadTolerance_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadTolerance_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadTolerance_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadTolerance_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadTolerance_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadTolerance_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadTolerance_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadTolerance_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadTolerance_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadTolerance_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadTolerance_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadTolerance_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadTolerance_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadTolerance_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadTolerance_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadTolerance_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadTolerance_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadTolerance_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadTolerance_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadTolerance_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadTolerance_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadTolerance_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadTolerance_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadTolerance_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadTolerance_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadTolerance_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadTolerance_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadTolerance_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadTolerance_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadTolerance_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadTolerance_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadTolerance_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadTolerance_get_DirectionVector(This,vppDirection)	\
    ( (This)->lpVtbl -> get_DirectionVector(This,vppDirection) ) 

#define IIcadTolerance_put_DirectionVector(This,vDirection)	\
    ( (This)->lpVtbl -> put_DirectionVector(This,vDirection) ) 

#define IIcadTolerance_get_Normal(This,vppExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,vppExtrusionDirection) ) 

#define IIcadTolerance_put_Normal(This,vExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,vExtrusionDirection) ) 

#define IIcadTolerance_get_TextHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_TextHeight(This,pHeight) ) 

#define IIcadTolerance_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadTolerance_get_InsertionPoint(This,vpInsertPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,vpInsertPoint) ) 

#define IIcadTolerance_put_InsertionPoint(This,vpInsertPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,vpInsertPoint) ) 

#define IIcadTolerance_get_StyleName(This,pStyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,pStyleName) ) 

#define IIcadTolerance_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadTolerance_get_TextString(This,pText)	\
    ( (This)->lpVtbl -> get_TextString(This,pText) ) 

#define IIcadTolerance_put_TextString(This,Text)	\
    ( (This)->lpVtbl -> put_TextString(This,Text) ) 

#define IIcadTolerance_get_DimensionLineColor(This,pColor)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,pColor) ) 

#define IIcadTolerance_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadTolerance_get_TextColor(This,pColor)	\
    ( (This)->lpVtbl -> get_TextColor(This,pColor) ) 

#define IIcadTolerance_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadTolerance_get_TextStyle(This,pStyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,pStyleName) ) 

#define IIcadTolerance_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadTolerance_get_ScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,pScaleFactor) ) 

#define IIcadTolerance_put_ScaleFactor(This,dbScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,dbScaleFactor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadTolerance_INTERFACE_DEFINED__ */


#ifndef __IIcadTrace_INTERFACE_DEFINED__
#define __IIcadTrace_INTERFACE_DEFINED__

/* interface IIcadTrace */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadTrace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d2329813-7214-446b-908a-04575b655e98")
    IIcadTrace : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *vpCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT vpCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinate( 
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpCoord) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinate( 
            /* [in] */ int Index,
            /* [in] */ VARIANT vpCoord) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *vppExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT vExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Thickness( 
            /* [retval][out] */ double *pThick) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thickness( 
            /* [in] */ double Thick) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadTraceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadTrace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadTrace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadTrace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadTrace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadTrace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadTrace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadTrace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadTrace * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadTrace * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadTrace * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadTrace * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadTrace * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadTrace * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadTrace * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadTrace * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadTrace * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadTrace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadTrace * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadTrace * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadTrace * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadTrace * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadTrace * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadTrace * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadTrace * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadTrace * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadTrace * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadTrace * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadTrace * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadTrace * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadTrace * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadTrace * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadTrace * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadTrace * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadTrace * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadTrace * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadTrace * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadTrace * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadTrace * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadTrace * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadTrace * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadTrace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadTrace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadTrace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadTrace * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadTrace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadTrace * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadTrace * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadTrace * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadTrace * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadTrace * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadTrace * This,
            /* [retval][out] */ VARIANT *vpCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadTrace * This,
            /* [in] */ VARIANT vpCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinate )( 
            IIcadTrace * This,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *vpCoord);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinate )( 
            IIcadTrace * This,
            /* [in] */ int Index,
            /* [in] */ VARIANT vpCoord);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadTrace * This,
            /* [retval][out] */ VARIANT *vppExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadTrace * This,
            /* [in] */ VARIANT vExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thickness )( 
            IIcadTrace * This,
            /* [retval][out] */ double *pThick);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thickness )( 
            IIcadTrace * This,
            /* [in] */ double Thick);
        
        END_INTERFACE
    } IIcadTraceVtbl;

    interface IIcadTrace
    {
        CONST_VTBL struct IIcadTraceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadTrace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadTrace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadTrace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadTrace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadTrace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadTrace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadTrace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadTrace_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadTrace_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadTrace_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadTrace_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadTrace_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadTrace__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadTrace_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadTrace_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadTrace_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadTrace_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadTrace_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadTrace_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadTrace_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadTrace_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadTrace_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadTrace_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadTrace_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadTrace_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadTrace_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadTrace_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadTrace_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadTrace_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadTrace_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadTrace_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadTrace_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadTrace_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadTrace_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadTrace_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadTrace_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadTrace_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadTrace_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadTrace_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadTrace_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadTrace_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadTrace_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadTrace_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadTrace_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadTrace_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadTrace_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadTrace_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadTrace_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadTrace_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadTrace_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadTrace_get_Coordinates(This,vpCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,vpCoords) ) 

#define IIcadTrace_put_Coordinates(This,vpCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,vpCoords) ) 

#define IIcadTrace_get_Coordinate(This,Index,vpCoord)	\
    ( (This)->lpVtbl -> get_Coordinate(This,Index,vpCoord) ) 

#define IIcadTrace_put_Coordinate(This,Index,vpCoord)	\
    ( (This)->lpVtbl -> put_Coordinate(This,Index,vpCoord) ) 

#define IIcadTrace_get_Normal(This,vppExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,vppExtrusionDirection) ) 

#define IIcadTrace_put_Normal(This,vExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,vExtrusionDirection) ) 

#define IIcadTrace_get_Thickness(This,pThick)	\
    ( (This)->lpVtbl -> get_Thickness(This,pThick) ) 

#define IIcadTrace_put_Thickness(This,Thick)	\
    ( (This)->lpVtbl -> put_Thickness(This,Thick) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadTrace_INTERFACE_DEFINED__ */


#ifndef __IIcadXline_INTERFACE_DEFINED__
#define __IIcadXline_INTERFACE_DEFINED__

/* interface IIcadXline */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadXline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8ba929cb-3fda-4745-a651-f01621a04daa")
    IIcadXline : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BasePoint( 
            /* [retval][out] */ VARIANT *pVarSnapBasePoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BasePoint( 
            /* [in] */ VARIANT varSnapBasePoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DirectionVector( 
            /* [retval][out] */ VARIANT *pVarDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DirectionVector( 
            /* [in] */ VARIANT varDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SecondPoint( 
            /* [retval][out] */ VARIANT *pVarSecondPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SecondPoint( 
            /* [in] */ VARIANT varSecondPoint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Offset( 
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadXlineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadXline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadXline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadXline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadXline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadXline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadXline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadXline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadXline * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadXline * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadXline * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadXline * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadXline * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadXline * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadXline * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadXline * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadXline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadXline * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadXline * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadXline * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadXline * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadXline * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadXline * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadXline * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadXline * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadXline * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadXline * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadXline * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadXline * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadXline * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadXline * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadXline * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadXline * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadXline * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadXline * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadXline * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadXline * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadXline * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadXline * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadXline * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadXline * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadXline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadXline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadXline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadXline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadXline * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadXline * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadXline * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadXline * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadXline * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadXline * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BasePoint )( 
            IIcadXline * This,
            /* [retval][out] */ VARIANT *pVarSnapBasePoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BasePoint )( 
            IIcadXline * This,
            /* [in] */ VARIANT varSnapBasePoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DirectionVector )( 
            IIcadXline * This,
            /* [retval][out] */ VARIANT *pVarDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DirectionVector )( 
            IIcadXline * This,
            /* [in] */ VARIANT varDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SecondPoint )( 
            IIcadXline * This,
            /* [retval][out] */ VARIANT *pVarSecondPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SecondPoint )( 
            IIcadXline * This,
            /* [in] */ VARIANT varSecondPoint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Offset )( 
            IIcadXline * This,
            /* [in] */ double Offset,
            /* [retval][out] */ IIcadSelectionSet **ppArrayOfEntities);
        
        END_INTERFACE
    } IIcadXlineVtbl;

    interface IIcadXline
    {
        CONST_VTBL struct IIcadXlineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadXline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadXline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadXline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadXline_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadXline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadXline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadXline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadXline_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadXline_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadXline_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadXline_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadXline_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadXline__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadXline_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadXline_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadXline_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadXline_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadXline_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadXline_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadXline_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadXline_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadXline_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadXline_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadXline_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadXline_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadXline_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadXline_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadXline_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadXline_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadXline_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadXline_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadXline_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadXline_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadXline_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadXline_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadXline_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadXline_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadXline_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadXline_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadXline_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadXline_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadXline_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadXline_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadXline_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadXline_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadXline_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadXline_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadXline_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadXline_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadXline_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadXline_get_BasePoint(This,pVarSnapBasePoint)	\
    ( (This)->lpVtbl -> get_BasePoint(This,pVarSnapBasePoint) ) 

#define IIcadXline_put_BasePoint(This,varSnapBasePoint)	\
    ( (This)->lpVtbl -> put_BasePoint(This,varSnapBasePoint) ) 

#define IIcadXline_get_DirectionVector(This,pVarDirection)	\
    ( (This)->lpVtbl -> get_DirectionVector(This,pVarDirection) ) 

#define IIcadXline_put_DirectionVector(This,varDirection)	\
    ( (This)->lpVtbl -> put_DirectionVector(This,varDirection) ) 

#define IIcadXline_get_SecondPoint(This,pVarSecondPoint)	\
    ( (This)->lpVtbl -> get_SecondPoint(This,pVarSecondPoint) ) 

#define IIcadXline_put_SecondPoint(This,varSecondPoint)	\
    ( (This)->lpVtbl -> put_SecondPoint(This,varSecondPoint) ) 

#define IIcadXline_Offset(This,Offset,ppArrayOfEntities)	\
    ( (This)->lpVtbl -> Offset(This,Offset,ppArrayOfEntities) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadXline_INTERFACE_DEFINED__ */


#ifndef __IIcadExternalReference_INTERFACE_DEFINED__
#define __IIcadExternalReference_INTERFACE_DEFINED__

/* interface IIcadExternalReference */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadExternalReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("881a2b5b-cffb-4afd-b9e4-ea6d7bd4742b")
    IIcadExternalReference : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *var) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *vppExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT vExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasAttributes( 
            /* [retval][out] */ VARIANT_BOOL *pbHasAttributes) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *Path) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Path( 
            /* [in] */ BSTR Path) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_XScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_XScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_YScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_YScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ZScaleFactor( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ZScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [retval][out] */ VARIANT *pVarAttributes) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetConstantAttributes( 
            /* [retval][out] */ VARIANT *pvarConstantAttrs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadExternalReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadExternalReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadExternalReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadExternalReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadExternalReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadExternalReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadExternalReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadExternalReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadExternalReference * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadExternalReference * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadExternalReference * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadExternalReference * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadExternalReference * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadExternalReference * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadExternalReference * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadExternalReference * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadExternalReference * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadExternalReference * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadExternalReference * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadExternalReference * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadExternalReference * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadExternalReference * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadExternalReference * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadExternalReference * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadExternalReference * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadExternalReference * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadExternalReference * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadExternalReference * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadExternalReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadExternalReference * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadExternalReference * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadExternalReference * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadExternalReference * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadExternalReference * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadExternalReference * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadExternalReference * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadExternalReference * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadExternalReference * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadExternalReference * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadExternalReference * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadExternalReference * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadExternalReference * This,
            /* [retval][out] */ VARIANT *var);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadExternalReference * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IIcadExternalReference * This,
            /* [in] */ BSTR Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadExternalReference * This,
            /* [retval][out] */ VARIANT *vppExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadExternalReference * This,
            /* [in] */ VARIANT vExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasAttributes )( 
            IIcadExternalReference * This,
            /* [retval][out] */ VARIANT_BOOL *pbHasAttributes);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IIcadExternalReference * This,
            /* [retval][out] */ BSTR *Path);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            IIcadExternalReference * This,
            /* [in] */ BSTR Path);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadExternalReference * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadExternalReference * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_XScaleFactor )( 
            IIcadExternalReference * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_XScaleFactor )( 
            IIcadExternalReference * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_YScaleFactor )( 
            IIcadExternalReference * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_YScaleFactor )( 
            IIcadExternalReference * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZScaleFactor )( 
            IIcadExternalReference * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZScaleFactor )( 
            IIcadExternalReference * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAttributes )( 
            IIcadExternalReference * This,
            /* [retval][out] */ VARIANT *pVarAttributes);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetConstantAttributes )( 
            IIcadExternalReference * This,
            /* [retval][out] */ VARIANT *pvarConstantAttrs);
        
        END_INTERFACE
    } IIcadExternalReferenceVtbl;

    interface IIcadExternalReference
    {
        CONST_VTBL struct IIcadExternalReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadExternalReference_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadExternalReference_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadExternalReference_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadExternalReference_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadExternalReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadExternalReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadExternalReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadExternalReference_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadExternalReference_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadExternalReference_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadExternalReference_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadExternalReference_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadExternalReference__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadExternalReference_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadExternalReference_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadExternalReference_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadExternalReference_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadExternalReference_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadExternalReference_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadExternalReference_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadExternalReference_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadExternalReference_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadExternalReference_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadExternalReference_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadExternalReference_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadExternalReference_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadExternalReference_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadExternalReference_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadExternalReference_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadExternalReference_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadExternalReference_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadExternalReference_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadExternalReference_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadExternalReference_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadExternalReference_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadExternalReference_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadExternalReference_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadExternalReference_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadExternalReference_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadExternalReference_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadExternalReference_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadExternalReference_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadExternalReference_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadExternalReference_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadExternalReference_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadExternalReference_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadExternalReference_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadExternalReference_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadExternalReference_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadExternalReference_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadExternalReference_get_InsertionPoint(This,var)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,var) ) 

#define IIcadExternalReference_put_InsertionPoint(This,var)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,var) ) 

#define IIcadExternalReference_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define IIcadExternalReference_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define IIcadExternalReference_get_Normal(This,vppExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,vppExtrusionDirection) ) 

#define IIcadExternalReference_put_Normal(This,vExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,vExtrusionDirection) ) 

#define IIcadExternalReference_get_HasAttributes(This,pbHasAttributes)	\
    ( (This)->lpVtbl -> get_HasAttributes(This,pbHasAttributes) ) 

#define IIcadExternalReference_get_Path(This,Path)	\
    ( (This)->lpVtbl -> get_Path(This,Path) ) 

#define IIcadExternalReference_put_Path(This,Path)	\
    ( (This)->lpVtbl -> put_Path(This,Path) ) 

#define IIcadExternalReference_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadExternalReference_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadExternalReference_get_XScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_XScaleFactor(This,pScaleFactor) ) 

#define IIcadExternalReference_put_XScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_XScaleFactor(This,ScaleFactor) ) 

#define IIcadExternalReference_get_YScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_YScaleFactor(This,pScaleFactor) ) 

#define IIcadExternalReference_put_YScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_YScaleFactor(This,ScaleFactor) ) 

#define IIcadExternalReference_get_ZScaleFactor(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_ZScaleFactor(This,pScaleFactor) ) 

#define IIcadExternalReference_put_ZScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ZScaleFactor(This,ScaleFactor) ) 

#define IIcadExternalReference_GetAttributes(This,pVarAttributes)	\
    ( (This)->lpVtbl -> GetAttributes(This,pVarAttributes) ) 

#define IIcadExternalReference_GetConstantAttributes(This,pvarConstantAttrs)	\
    ( (This)->lpVtbl -> GetConstantAttributes(This,pvarConstantAttrs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadExternalReference_INTERFACE_DEFINED__ */


#ifndef __IIcadRegion_INTERFACE_DEFINED__
#define __IIcadRegion_INTERFACE_DEFINED__

/* interface IIcadRegion */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadRegion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19f8829c-3da1-4507-b7a7-ae4ce06ed159")
    IIcadRegion : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Area( 
            /* [retval][out] */ double *pArea) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Centroid( 
            /* [retval][out] */ VARIANT *vppCentroid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MomentOfInertia( 
            /* [retval][out] */ VARIANT *vppMomentInertia) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *vppNormal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Perimeter( 
            /* [retval][out] */ double *pPerimeter) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrincipalDirections( 
            /* [retval][out] */ VARIANT *vppPrinDir) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrincipalMoments( 
            /* [retval][out] */ VARIANT *vppPrinMoments) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ProductOfInertia( 
            /* [retval][out] */ double *pProdInertia) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RadiiOfGyration( 
            /* [retval][out] */ VARIANT *vppRadiiGyration) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Boolean( 
            /* [in] */ ZcBooleanType Operation,
            /* [in] */ IIcadRegion *pObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explode( 
            /* [retval][out] */ VARIANT *pArrayObjs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadRegionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadRegion * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadRegion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadRegion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadRegion * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadRegion * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadRegion * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadRegion * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadRegion * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadRegion * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadRegion * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadRegion * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadRegion * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadRegion * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadRegion * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadRegion * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadRegion * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadRegion * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadRegion * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadRegion * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadRegion * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadRegion * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadRegion * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadRegion * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadRegion * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadRegion * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadRegion * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadRegion * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadRegion * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadRegion * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadRegion * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadRegion * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadRegion * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadRegion * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadRegion * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadRegion * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadRegion * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadRegion * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadRegion * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadRegion * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadRegion * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadRegion * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadRegion * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadRegion * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadRegion * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadRegion * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadRegion * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadRegion * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadRegion * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Area )( 
            IIcadRegion * This,
            /* [retval][out] */ double *pArea);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Centroid )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT *vppCentroid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MomentOfInertia )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT *vppMomentInertia);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT *vppNormal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Perimeter )( 
            IIcadRegion * This,
            /* [retval][out] */ double *pPerimeter);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalDirections )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT *vppPrinDir);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalMoments )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT *vppPrinMoments);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProductOfInertia )( 
            IIcadRegion * This,
            /* [retval][out] */ double *pProdInertia);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RadiiOfGyration )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT *vppRadiiGyration);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Boolean )( 
            IIcadRegion * This,
            /* [in] */ ZcBooleanType Operation,
            /* [in] */ IIcadRegion *pObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explode )( 
            IIcadRegion * This,
            /* [retval][out] */ VARIANT *pArrayObjs);
        
        END_INTERFACE
    } IIcadRegionVtbl;

    interface IIcadRegion
    {
        CONST_VTBL struct IIcadRegionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadRegion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadRegion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadRegion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadRegion_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadRegion_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadRegion_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadRegion_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadRegion_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadRegion_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadRegion_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadRegion_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadRegion_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadRegion__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadRegion_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadRegion_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadRegion_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadRegion_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadRegion_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadRegion_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadRegion_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadRegion_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadRegion_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadRegion_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadRegion_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadRegion_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadRegion_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadRegion_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadRegion_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadRegion_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadRegion_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadRegion_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadRegion_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadRegion_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadRegion_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadRegion_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadRegion_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadRegion_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadRegion_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadRegion_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadRegion_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadRegion_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadRegion_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadRegion_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadRegion_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadRegion_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadRegion_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadRegion_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadRegion_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadRegion_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadRegion_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadRegion_get_Area(This,pArea)	\
    ( (This)->lpVtbl -> get_Area(This,pArea) ) 

#define IIcadRegion_get_Centroid(This,vppCentroid)	\
    ( (This)->lpVtbl -> get_Centroid(This,vppCentroid) ) 

#define IIcadRegion_get_MomentOfInertia(This,vppMomentInertia)	\
    ( (This)->lpVtbl -> get_MomentOfInertia(This,vppMomentInertia) ) 

#define IIcadRegion_get_Normal(This,vppNormal)	\
    ( (This)->lpVtbl -> get_Normal(This,vppNormal) ) 

#define IIcadRegion_get_Perimeter(This,pPerimeter)	\
    ( (This)->lpVtbl -> get_Perimeter(This,pPerimeter) ) 

#define IIcadRegion_get_PrincipalDirections(This,vppPrinDir)	\
    ( (This)->lpVtbl -> get_PrincipalDirections(This,vppPrinDir) ) 

#define IIcadRegion_get_PrincipalMoments(This,vppPrinMoments)	\
    ( (This)->lpVtbl -> get_PrincipalMoments(This,vppPrinMoments) ) 

#define IIcadRegion_get_ProductOfInertia(This,pProdInertia)	\
    ( (This)->lpVtbl -> get_ProductOfInertia(This,pProdInertia) ) 

#define IIcadRegion_get_RadiiOfGyration(This,vppRadiiGyration)	\
    ( (This)->lpVtbl -> get_RadiiOfGyration(This,vppRadiiGyration) ) 

#define IIcadRegion_Boolean(This,Operation,pObject)	\
    ( (This)->lpVtbl -> Boolean(This,Operation,pObject) ) 

#define IIcadRegion_Explode(This,pArrayObjs)	\
    ( (This)->lpVtbl -> Explode(This,pArrayObjs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadRegion_INTERFACE_DEFINED__ */


#ifndef __IIcadMLine_INTERFACE_DEFINED__
#define __IIcadMLine_INTERFACE_DEFINED__

/* interface IIcadMLine */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadMLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FF1E8810-A417-4d9a-80D4-8DB5FBADCEBE")
    IIcadMLine : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Coordinates( 
            /* [retval][out] */ VARIANT *pVarCoords) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Coordinates( 
            /* [in] */ VARIANT varCoords) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Justification( 
            /* [retval][out] */ ZcMLineJustification *pMLineJustioncation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Justification( 
            /* [in] */ ZcMLineJustification MLineJustioncation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Material( 
            /* [retval][out] */ BSTR *pMaterial) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Material( 
            /* [in] */ BSTR Material) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MLineScale( 
            /* [retval][out] */ double *pMLineScale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MLineScale( 
            /* [in] */ double dbMLineScale) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadMLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadMLine * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadMLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadMLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadMLine * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadMLine * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadMLine * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadMLine * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadMLine * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadMLine * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadMLine * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadMLine * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadMLine * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadMLine * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadMLine * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadMLine * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadMLine * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadMLine * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadMLine * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadMLine * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadMLine * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadMLine * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadMLine * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadMLine * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadMLine * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadMLine * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadMLine * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadMLine * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadMLine * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadMLine * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadMLine * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadMLine * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadMLine * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadMLine * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadMLine * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadMLine * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadMLine * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadMLine * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadMLine * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadMLine * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadMLine * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadMLine * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadMLine * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadMLine * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadMLine * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Coordinates )( 
            IIcadMLine * This,
            /* [retval][out] */ VARIANT *pVarCoords);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Coordinates )( 
            IIcadMLine * This,
            /* [in] */ VARIANT varCoords);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Justification )( 
            IIcadMLine * This,
            /* [retval][out] */ ZcMLineJustification *pMLineJustioncation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Justification )( 
            IIcadMLine * This,
            /* [in] */ ZcMLineJustification MLineJustioncation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Material )( 
            IIcadMLine * This,
            /* [retval][out] */ BSTR *pMaterial);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Material )( 
            IIcadMLine * This,
            /* [in] */ BSTR Material);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MLineScale )( 
            IIcadMLine * This,
            /* [retval][out] */ double *pMLineScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MLineScale )( 
            IIcadMLine * This,
            /* [in] */ double dbMLineScale);
        
        END_INTERFACE
    } IIcadMLineVtbl;

    interface IIcadMLine
    {
        CONST_VTBL struct IIcadMLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadMLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadMLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadMLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadMLine_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadMLine_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadMLine_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadMLine_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadMLine_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadMLine_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadMLine_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadMLine_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadMLine_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadMLine__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadMLine_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadMLine_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadMLine_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadMLine_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadMLine_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadMLine_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadMLine_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadMLine_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadMLine_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadMLine_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadMLine_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadMLine_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadMLine_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadMLine_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadMLine_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadMLine_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadMLine_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadMLine_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadMLine_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadMLine_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadMLine_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadMLine_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadMLine_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadMLine_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadMLine_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadMLine_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadMLine_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadMLine_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadMLine_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadMLine_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadMLine_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadMLine_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadMLine_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadMLine_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadMLine_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadMLine_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadMLine_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadMLine_get_StyleName(This,Name)	\
    ( (This)->lpVtbl -> get_StyleName(This,Name) ) 

#define IIcadMLine_get_Coordinates(This,pVarCoords)	\
    ( (This)->lpVtbl -> get_Coordinates(This,pVarCoords) ) 

#define IIcadMLine_put_Coordinates(This,varCoords)	\
    ( (This)->lpVtbl -> put_Coordinates(This,varCoords) ) 

#define IIcadMLine_get_Justification(This,pMLineJustioncation)	\
    ( (This)->lpVtbl -> get_Justification(This,pMLineJustioncation) ) 

#define IIcadMLine_put_Justification(This,MLineJustioncation)	\
    ( (This)->lpVtbl -> put_Justification(This,MLineJustioncation) ) 

#define IIcadMLine_get_Material(This,pMaterial)	\
    ( (This)->lpVtbl -> get_Material(This,pMaterial) ) 

#define IIcadMLine_put_Material(This,Material)	\
    ( (This)->lpVtbl -> put_Material(This,Material) ) 

#define IIcadMLine_get_MLineScale(This,pMLineScale)	\
    ( (This)->lpVtbl -> get_MLineScale(This,pMLineScale) ) 

#define IIcadMLine_put_MLineScale(This,dbMLineScale)	\
    ( (This)->lpVtbl -> put_MLineScale(This,dbMLineScale) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadMLine_INTERFACE_DEFINED__ */


#ifndef __IIcadOle_INTERFACE_DEFINED__
#define __IIcadOle_INTERFACE_DEFINED__

/* interface IIcadOle */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadOle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("467EF999-CDE6-4093-8253-44E0E2A7355B")
    IIcadOle : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LockAspectRatio( 
            /* [retval][out] */ VARIANT_BOOL *pLock) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LockAspectRatio( 
            /* [in] */ VARIANT_BOOL bLock) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OleItemType( 
            /* [retval][out] */ ZcOleType *pOleType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OleItemType( 
            /* [in] */ ZcOleType enumOleType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OlePlotQuality( 
            /* [retval][out] */ ZcOlePlotQuality *pPlotQuality) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OlePlotQuality( 
            /* [in] */ ZcOlePlotQuality enumPlotQuality) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OleSourceApp( 
            /* [retval][out] */ BSTR *pbstrApp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OleSourceApp( 
            /* [in] */ BSTR bstrApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *pRotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double dblRotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleWidth( 
            /* [retval][out] */ double *pScaleWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleWidth( 
            /* [in] */ double dblScaleWidth) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleHeight( 
            /* [retval][out] */ double *pScaleHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleHeight( 
            /* [in] */ double dblScaleHeight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ double *pWidth) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ double dblWidth) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ double *pHeight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ double dblHeight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InsertionPoint( 
            /* [retval][out] */ VARIANT *pVarInsertPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InsertionPoint( 
            /* [in] */ VARIANT varInsertPoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadOleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadOle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadOle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadOle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadOle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadOle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadOle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadOle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadOle * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadOle * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadOle * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadOle * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadOle * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadOle * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadOle * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadOle * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadOle * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadOle * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadOle * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadOle * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadOle * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadOle * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadOle * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadOle * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadOle * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadOle * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadOle * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadOle * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadOle * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadOle * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadOle * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadOle * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadOle * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadOle * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadOle * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadOle * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadOle * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadOle * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadOle * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadOle * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadOle * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadOle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadOle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadOle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadOle * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadOle * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadOle * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadOle * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadOle * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadOle * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadOle * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LockAspectRatio )( 
            IIcadOle * This,
            /* [retval][out] */ VARIANT_BOOL *pLock);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LockAspectRatio )( 
            IIcadOle * This,
            /* [in] */ VARIANT_BOOL bLock);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OleItemType )( 
            IIcadOle * This,
            /* [retval][out] */ ZcOleType *pOleType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OleItemType )( 
            IIcadOle * This,
            /* [in] */ ZcOleType enumOleType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OlePlotQuality )( 
            IIcadOle * This,
            /* [retval][out] */ ZcOlePlotQuality *pPlotQuality);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OlePlotQuality )( 
            IIcadOle * This,
            /* [in] */ ZcOlePlotQuality enumPlotQuality);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OleSourceApp )( 
            IIcadOle * This,
            /* [retval][out] */ BSTR *pbstrApp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OleSourceApp )( 
            IIcadOle * This,
            /* [in] */ BSTR bstrApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadOle * This,
            /* [retval][out] */ double *pRotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadOle * This,
            /* [in] */ double dblRotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IIcadOle * This,
            /* [retval][out] */ double *pScaleWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IIcadOle * This,
            /* [in] */ double dblScaleWidth);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IIcadOle * This,
            /* [retval][out] */ double *pScaleHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IIcadOle * This,
            /* [in] */ double dblScaleHeight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IIcadOle * This,
            /* [retval][out] */ double *pWidth);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            IIcadOle * This,
            /* [in] */ double dblWidth);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IIcadOle * This,
            /* [retval][out] */ double *pHeight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            IIcadOle * This,
            /* [in] */ double dblHeight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InsertionPoint )( 
            IIcadOle * This,
            /* [retval][out] */ VARIANT *pVarInsertPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InsertionPoint )( 
            IIcadOle * This,
            /* [in] */ VARIANT varInsertPoint);
        
        END_INTERFACE
    } IIcadOleVtbl;

    interface IIcadOle
    {
        CONST_VTBL struct IIcadOleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadOle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadOle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadOle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadOle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadOle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadOle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadOle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadOle_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadOle_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadOle_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadOle_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadOle_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadOle__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadOle_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadOle_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadOle_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadOle_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadOle_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadOle_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadOle_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadOle_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadOle_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadOle_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadOle_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadOle_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadOle_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadOle_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadOle_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadOle_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadOle_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadOle_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadOle_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadOle_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadOle_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadOle_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadOle_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadOle_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadOle_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadOle_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadOle_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadOle_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadOle_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadOle_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadOle_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadOle_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadOle_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadOle_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadOle_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadOle_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadOle_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadOle_get_LockAspectRatio(This,pLock)	\
    ( (This)->lpVtbl -> get_LockAspectRatio(This,pLock) ) 

#define IIcadOle_put_LockAspectRatio(This,bLock)	\
    ( (This)->lpVtbl -> put_LockAspectRatio(This,bLock) ) 

#define IIcadOle_get_OleItemType(This,pOleType)	\
    ( (This)->lpVtbl -> get_OleItemType(This,pOleType) ) 

#define IIcadOle_put_OleItemType(This,enumOleType)	\
    ( (This)->lpVtbl -> put_OleItemType(This,enumOleType) ) 

#define IIcadOle_get_OlePlotQuality(This,pPlotQuality)	\
    ( (This)->lpVtbl -> get_OlePlotQuality(This,pPlotQuality) ) 

#define IIcadOle_put_OlePlotQuality(This,enumPlotQuality)	\
    ( (This)->lpVtbl -> put_OlePlotQuality(This,enumPlotQuality) ) 

#define IIcadOle_get_OleSourceApp(This,pbstrApp)	\
    ( (This)->lpVtbl -> get_OleSourceApp(This,pbstrApp) ) 

#define IIcadOle_put_OleSourceApp(This,bstrApp)	\
    ( (This)->lpVtbl -> put_OleSourceApp(This,bstrApp) ) 

#define IIcadOle_get_Rotation(This,pRotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,pRotation) ) 

#define IIcadOle_put_Rotation(This,dblRotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,dblRotation) ) 

#define IIcadOle_get_ScaleWidth(This,pScaleWidth)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pScaleWidth) ) 

#define IIcadOle_put_ScaleWidth(This,dblScaleWidth)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,dblScaleWidth) ) 

#define IIcadOle_get_ScaleHeight(This,pScaleHeight)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pScaleHeight) ) 

#define IIcadOle_put_ScaleHeight(This,dblScaleHeight)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,dblScaleHeight) ) 

#define IIcadOle_get_Width(This,pWidth)	\
    ( (This)->lpVtbl -> get_Width(This,pWidth) ) 

#define IIcadOle_put_Width(This,dblWidth)	\
    ( (This)->lpVtbl -> put_Width(This,dblWidth) ) 

#define IIcadOle_get_Height(This,pHeight)	\
    ( (This)->lpVtbl -> get_Height(This,pHeight) ) 

#define IIcadOle_put_Height(This,dblHeight)	\
    ( (This)->lpVtbl -> put_Height(This,dblHeight) ) 

#define IIcadOle_get_InsertionPoint(This,pVarInsertPoint)	\
    ( (This)->lpVtbl -> get_InsertionPoint(This,pVarInsertPoint) ) 

#define IIcadOle_put_InsertionPoint(This,varInsertPoint)	\
    ( (This)->lpVtbl -> put_InsertionPoint(This,varInsertPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadOle_INTERFACE_DEFINED__ */


#ifndef __IIcad3DSolid_INTERFACE_DEFINED__
#define __IIcad3DSolid_INTERFACE_DEFINED__

/* interface IIcad3DSolid */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcad3DSolid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A8DB3DDA-4EC6-4d94-8AFD-B7F377E671E5")
    IIcad3DSolid : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Centroid( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_History( 
            /* [retval][out] */ VARIANT_BOOL *pHistory) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_History( 
            /* [in] */ VARIANT_BOOL bHistory) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MomentOfInertia( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrincipalDirections( 
            /* [retval][out] */ VARIANT *pVarPrinDir) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrincipalMoments( 
            /* [retval][out] */ VARIANT *pVarPrinMoments) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ProductOfInertia( 
            /* [retval][out] */ VARIANT *pVarProdInertia) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RadiiOfGyration( 
            /* [retval][out] */ VARIANT *pVarRadiiGyration) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ShowHistory( 
            /* [retval][out] */ VARIANT_BOOL *pShow) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ShowHistory( 
            /* [in] */ VARIANT_BOOL bShow) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SolidType( 
            /* [retval][out] */ BSTR *pType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Volume( 
            /* [retval][out] */ double *pVolume) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Boolean( 
            /* [in] */ ZcBooleanType Operation,
            /* [in] */ IIcad3DSolid *pSolidObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckInterference( 
            /* [in] */ IIcad3DSolid *p3DSolid,
            /* [in] */ VARIANT_BOOL CreateInterferenceSolid,
            /* [retval][out] */ IIcad3DSolid **pp3DSolid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SectionSolid( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [retval][out] */ IIcadRegion **ppRegion) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SliceSolid( 
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [in] */ VARIANT_BOOL bNegative,
            /* [retval][out] */ IIcad3DSolid **pp3DSolid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcad3DSolidVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcad3DSolid * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcad3DSolid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcad3DSolid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcad3DSolid * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcad3DSolid * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcad3DSolid * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcad3DSolid * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcad3DSolid * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcad3DSolid * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcad3DSolid * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcad3DSolid * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcad3DSolid * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcad3DSolid * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcad3DSolid * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcad3DSolid * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcad3DSolid * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcad3DSolid * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcad3DSolid * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcad3DSolid * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcad3DSolid * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcad3DSolid * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcad3DSolid * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcad3DSolid * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcad3DSolid * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcad3DSolid * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcad3DSolid * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcad3DSolid * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcad3DSolid * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcad3DSolid * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcad3DSolid * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcad3DSolid * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcad3DSolid * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcad3DSolid * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcad3DSolid * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcad3DSolid * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcad3DSolid * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcad3DSolid * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcad3DSolid * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Centroid )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_History )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT_BOOL *pHistory);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_History )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT_BOOL bHistory);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MomentOfInertia )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalDirections )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT *pVarPrinDir);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrincipalMoments )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT *pVarPrinMoments);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProductOfInertia )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT *pVarProdInertia);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RadiiOfGyration )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT *pVarRadiiGyration);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowHistory )( 
            IIcad3DSolid * This,
            /* [retval][out] */ VARIANT_BOOL *pShow);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowHistory )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT_BOOL bShow);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SolidType )( 
            IIcad3DSolid * This,
            /* [retval][out] */ BSTR *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IIcad3DSolid * This,
            /* [retval][out] */ double *pVolume);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Boolean )( 
            IIcad3DSolid * This,
            /* [in] */ ZcBooleanType Operation,
            /* [in] */ IIcad3DSolid *pSolidObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckInterference )( 
            IIcad3DSolid * This,
            /* [in] */ IIcad3DSolid *p3DSolid,
            /* [in] */ VARIANT_BOOL CreateInterferenceSolid,
            /* [retval][out] */ IIcad3DSolid **pp3DSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SectionSolid )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [retval][out] */ IIcadRegion **ppRegion);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SliceSolid )( 
            IIcad3DSolid * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [in] */ VARIANT_BOOL bNegative,
            /* [retval][out] */ IIcad3DSolid **pp3DSolid);
        
        END_INTERFACE
    } IIcad3DSolidVtbl;

    interface IIcad3DSolid
    {
        CONST_VTBL struct IIcad3DSolidVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcad3DSolid_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcad3DSolid_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcad3DSolid_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcad3DSolid_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcad3DSolid_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcad3DSolid_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcad3DSolid_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcad3DSolid_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcad3DSolid_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcad3DSolid_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcad3DSolid_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcad3DSolid_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcad3DSolid__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcad3DSolid_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcad3DSolid_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcad3DSolid_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcad3DSolid_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcad3DSolid_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcad3DSolid_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcad3DSolid_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcad3DSolid_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcad3DSolid_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcad3DSolid_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcad3DSolid_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcad3DSolid_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcad3DSolid_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcad3DSolid_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcad3DSolid_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcad3DSolid_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcad3DSolid_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcad3DSolid_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcad3DSolid_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcad3DSolid_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcad3DSolid_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcad3DSolid_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcad3DSolid_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcad3DSolid_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcad3DSolid_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcad3DSolid_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcad3DSolid_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcad3DSolid_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcad3DSolid_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcad3DSolid_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcad3DSolid_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcad3DSolid_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcad3DSolid_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcad3DSolid_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcad3DSolid_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcad3DSolid_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcad3DSolid_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcad3DSolid_get_Centroid(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_Centroid(This,pVarPoint) ) 

#define IIcad3DSolid_get_History(This,pHistory)	\
    ( (This)->lpVtbl -> get_History(This,pHistory) ) 

#define IIcad3DSolid_put_History(This,bHistory)	\
    ( (This)->lpVtbl -> put_History(This,bHistory) ) 

#define IIcad3DSolid_get_MomentOfInertia(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_MomentOfInertia(This,pVarPoint) ) 

#define IIcad3DSolid_get_Position(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_Position(This,pVarPoint) ) 

#define IIcad3DSolid_put_Position(This,varPoint)	\
    ( (This)->lpVtbl -> put_Position(This,varPoint) ) 

#define IIcad3DSolid_get_PrincipalDirections(This,pVarPrinDir)	\
    ( (This)->lpVtbl -> get_PrincipalDirections(This,pVarPrinDir) ) 

#define IIcad3DSolid_get_PrincipalMoments(This,pVarPrinMoments)	\
    ( (This)->lpVtbl -> get_PrincipalMoments(This,pVarPrinMoments) ) 

#define IIcad3DSolid_get_ProductOfInertia(This,pVarProdInertia)	\
    ( (This)->lpVtbl -> get_ProductOfInertia(This,pVarProdInertia) ) 

#define IIcad3DSolid_get_RadiiOfGyration(This,pVarRadiiGyration)	\
    ( (This)->lpVtbl -> get_RadiiOfGyration(This,pVarRadiiGyration) ) 

#define IIcad3DSolid_get_ShowHistory(This,pShow)	\
    ( (This)->lpVtbl -> get_ShowHistory(This,pShow) ) 

#define IIcad3DSolid_put_ShowHistory(This,bShow)	\
    ( (This)->lpVtbl -> put_ShowHistory(This,bShow) ) 

#define IIcad3DSolid_get_SolidType(This,pType)	\
    ( (This)->lpVtbl -> get_SolidType(This,pType) ) 

#define IIcad3DSolid_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IIcad3DSolid_Boolean(This,Operation,pSolidObject)	\
    ( (This)->lpVtbl -> Boolean(This,Operation,pSolidObject) ) 

#define IIcad3DSolid_CheckInterference(This,p3DSolid,CreateInterferenceSolid,pp3DSolid)	\
    ( (This)->lpVtbl -> CheckInterference(This,p3DSolid,CreateInterferenceSolid,pp3DSolid) ) 

#define IIcad3DSolid_SectionSolid(This,varPoint1,varPoint2,varPoint3,ppRegion)	\
    ( (This)->lpVtbl -> SectionSolid(This,varPoint1,varPoint2,varPoint3,ppRegion) ) 

#define IIcad3DSolid_SliceSolid(This,varPoint1,varPoint2,varPoint3,bNegative,pp3DSolid)	\
    ( (This)->lpVtbl -> SliceSolid(This,varPoint1,varPoint2,varPoint3,bNegative,pp3DSolid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcad3DSolid_INTERFACE_DEFINED__ */


#ifndef __IIcadDimension_INTERFACE_DEFINED__
#define __IIcadDimension_INTERFACE_DEFINED__

/* interface IIcadDimension */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fe830d6d-e8d9-4f44-9243-07ba3783b5f4")
    IIcadDimension : public IIcadEntity
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArrowheadSize( 
            /* [retval][out] */ double *ArrowheadSize) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ArrowheadSize( 
            /* [in] */ double ArrowheadSize) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DecimalSeparator( 
            /* [retval][out] */ BSTR *DecimalSeparator) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DecimalSeparator( 
            /* [in] */ BSTR DecimalSeparator) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineOffset( 
            /* [retval][out] */ double *Offset) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineOffset( 
            /* [in] */ double Offset) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Measurement( 
            /* [retval][out] */ double *Value) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Measurement( 
            /* [in] */ double Value) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Normal( 
            /* [retval][out] */ VARIANT *pVarExtrusionDirection) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Normal( 
            /* [in] */ VARIANT varExtrusionDirection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ double *Rotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleFactor( 
            /* [retval][out] */ double *ScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StyleName( 
            /* [retval][out] */ BSTR *StyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StyleName( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextGap( 
            /* [retval][out] */ double *Gap) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextGap( 
            /* [in] */ double Gap) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextHeight( 
            /* [retval][out] */ double *Height) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextHeight( 
            /* [in] */ double Height) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextMovement( 
            /* [retval][out] */ ZcDimTextMovement *Movement) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextMovement( 
            /* [in] */ ZcDimTextMovement Movement) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPosition( 
            /* [retval][out] */ VARIANT *pVarPosition) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPosition( 
            /* [in] */ VARIANT varPosition) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextOverride( 
            /* [retval][out] */ BSTR *String) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextOverride( 
            /* [in] */ BSTR String) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPrefix( 
            /* [retval][out] */ BSTR *PrefixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPrefix( 
            /* [in] */ BSTR PrefixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextString( 
            /* [retval][out] */ BSTR *String) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextString( 
            /* [in] */ BSTR String) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextRotation( 
            /* [retval][out] */ double *Rotation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextRotation( 
            /* [in] */ double Rotation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextStyle( 
            /* [retval][out] */ BSTR *StyleName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextStyle( 
            /* [in] */ BSTR StyleName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextSuffix( 
            /* [retval][out] */ BSTR *SuffixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextSuffix( 
            /* [in] */ BSTR SuffixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceDisplay( 
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceDisplay( 
            /* [in] */ ZcDimToleranceMethod TolDisplay) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceHeightScale( 
            /* [retval][out] */ double *HeightScale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceHeightScale( 
            /* [in] */ double HeightScale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceJustification( 
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceJustification( 
            /* [in] */ ZcDimToleranceJustify TolJustify) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceLowerLimit( 
            /* [retval][out] */ double *Limit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceLowerLimit( 
            /* [in] */ double Limit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ToleranceUpperLimit( 
            /* [retval][out] */ double *Limit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToleranceUpperLimit( 
            /* [in] */ double Limit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TolerancePrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TolerancePrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UnitsFormat( 
            /* [retval][out] */ ZcDimLUnits *Units) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UnitsFormat( 
            /* [in] */ ZcDimLUnits Units) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_VerticalTextPosition( 
            /* [retval][out] */ ZcDimVerticalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalTextPosition( 
            /* [in] */ ZcDimVerticalJustification Position) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimension * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimension * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimension * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimension * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimension * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimension * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimension * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimension * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimension * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimension * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimension * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimension * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimension * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimension * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimension * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDimension * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDimension * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDimension * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDimension * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDimension * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDimension * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDimension * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDimension * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDimension * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDimension * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDimension * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDimension * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDimension * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDimension * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDimension * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDimension * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDimension * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDimension * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDimension * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDimension * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDimension * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDimension * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDimension * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDimension * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDimension * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDimension * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDimension * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDimension * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDimension * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDimension * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDimension * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDimension * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDimension * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDimension * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDimension * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDimension * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDimension * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDimension * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDimension * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDimension * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDimension * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDimension * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDimension * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDimension * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDimension * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDimension * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDimension * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDimension * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDimension * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDimension * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        END_INTERFACE
    } IIcadDimensionVtbl;

    interface IIcadDimension
    {
        CONST_VTBL struct IIcadDimensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimension_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimension_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimension_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimension_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimension_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimension_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimension_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimension_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimension_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimension_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimension_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimension_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimension__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimension_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimension_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimension_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimension_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimension_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimension_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDimension_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDimension_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDimension_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDimension_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDimension_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDimension_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDimension_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDimension_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimension_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimension_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDimension_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDimension_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDimension_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDimension_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDimension_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDimension_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDimension_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDimension_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDimension_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDimension_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDimension_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDimension_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDimension_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDimension_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDimension_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDimension_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDimension_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDimension_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDimension_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDimension_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDimension_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDimension_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimension_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimension_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimension_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimension_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimension_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimension_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDimension_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDimension_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDimension_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDimension_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDimension_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDimension_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimension_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimension_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDimension_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDimension_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDimension_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimension_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimension_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimension_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDimension_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDimension_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDimension_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDimension_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDimension_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDimension_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDimension_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDimension_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDimension_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDimension_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDimension_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDimension_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDimension_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDimension_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDimension_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDimension_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDimension_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDimension_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDimension_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDimension_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDimension_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDimension_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimension_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimension_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimension_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimension_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimension_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimension_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimension_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimension_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimension_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimension_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimension_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimension_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimension_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimension_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimension_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimension_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimension_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimension_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDimension_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDimension_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDimension_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDimension_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDimension_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDimension_INTERFACE_DEFINED__ */


#ifndef __IIcadDimAngular_INTERFACE_DEFINED__
#define __IIcadDimAngular_INTERFACE_DEFINED__

/* interface IIcadDimAngular */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimAngular;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29c1d8eb-4f48-4f96-8a27-507dbc40b8d6")
    IIcadDimAngular : public IIcadDimension
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AngleFormat( 
            /* [retval][out] */ ZcAngleUnits *Movement) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AngleFormat( 
            /* [in] */ ZcAngleUnits Movement) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *Extension) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double Extension) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1StartPoint( 
            /* [retval][out] */ VARIANT *vPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1StartPoint( 
            /* [in] */ VARIANT vPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1EndPoint( 
            /* [retval][out] */ VARIANT *vPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1EndPoint( 
            /* [in] */ VARIANT vPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2EndPoint( 
            /* [retval][out] */ VARIANT *vPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2EndPoint( 
            /* [in] */ VARIANT vPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2StartPoint( 
            /* [retval][out] */ VARIANT *vPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2StartPoint( 
            /* [in] */ VARIANT vPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ ZcDimFit *Fit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ ZcDimFit Fit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ ZcDimHorizontalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ ZcDimHorizontalJustification Position) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimAngularVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimAngular * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimAngular * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimAngular * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimAngular * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimAngular * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimAngular * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimAngular * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimAngular * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimAngular * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimAngular * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimAngular * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimAngular * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimAngular * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimAngular * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDimAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDimAngular * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDimAngular * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDimAngular * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDimAngular * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDimAngular * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDimAngular * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDimAngular * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDimAngular * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDimAngular * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDimAngular * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDimAngular * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDimAngular * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDimAngular * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDimAngular * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDimAngular * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDimAngular * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDimAngular * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDimAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDimAngular * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDimAngular * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDimAngular * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDimAngular * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDimAngular * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDimAngular * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleFormat )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcAngleUnits *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AngleFormat )( 
            IIcadDimAngular * This,
            /* [in] */ ZcAngleUnits Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IIcadDimAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IIcadDimAngular * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadDimAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IIcadDimAngular * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IIcadDimAngular * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IIcadDimAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IIcadDimAngular * This,
            /* [retval][out] */ double *Extension);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IIcadDimAngular * This,
            /* [in] */ double Extension);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1StartPoint )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT *vPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1StartPoint )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT vPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1EndPoint )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT *vPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1EndPoint )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT vPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2EndPoint )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT *vPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2EndPoint )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT vPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2StartPoint )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT *vPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2StartPoint )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT vPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimFit *Fit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimFit Fit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimHorizontalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimHorizontalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IIcadDimAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IIcadDimAngular * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IIcadDimAngular * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IIcadDimAngular * This,
            /* [in] */ ZcDimPrecision Precision);
        
        END_INTERFACE
    } IIcadDimAngularVtbl;

    interface IIcadDimAngular
    {
        CONST_VTBL struct IIcadDimAngularVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimAngular_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimAngular_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimAngular_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimAngular_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimAngular_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimAngular_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimAngular_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimAngular_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimAngular_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimAngular_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimAngular_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimAngular_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimAngular__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimAngular_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimAngular_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimAngular_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimAngular_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimAngular_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimAngular_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDimAngular_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDimAngular_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDimAngular_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDimAngular_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDimAngular_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDimAngular_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDimAngular_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDimAngular_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimAngular_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimAngular_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDimAngular_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDimAngular_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDimAngular_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDimAngular_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDimAngular_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDimAngular_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDimAngular_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDimAngular_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDimAngular_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDimAngular_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDimAngular_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDimAngular_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDimAngular_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDimAngular_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDimAngular_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDimAngular_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDimAngular_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDimAngular_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDimAngular_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDimAngular_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDimAngular_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDimAngular_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimAngular_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimAngular_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimAngular_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimAngular_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimAngular_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimAngular_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDimAngular_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDimAngular_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDimAngular_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDimAngular_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDimAngular_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDimAngular_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimAngular_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimAngular_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDimAngular_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDimAngular_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAngular_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimAngular_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAngular_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAngular_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDimAngular_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDimAngular_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDimAngular_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDimAngular_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDimAngular_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDimAngular_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDimAngular_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDimAngular_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDimAngular_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDimAngular_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDimAngular_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDimAngular_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDimAngular_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDimAngular_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDimAngular_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDimAngular_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDimAngular_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDimAngular_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDimAngular_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDimAngular_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDimAngular_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDimAngular_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimAngular_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimAngular_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimAngular_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimAngular_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimAngular_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimAngular_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimAngular_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimAngular_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAngular_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAngular_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAngular_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAngular_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimAngular_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimAngular_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAngular_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAngular_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimAngular_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimAngular_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDimAngular_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDimAngular_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDimAngular_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDimAngular_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDimAngular_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 


#define IIcadDimAngular_get_AngleFormat(This,Movement)	\
    ( (This)->lpVtbl -> get_AngleFormat(This,Movement) ) 

#define IIcadDimAngular_put_AngleFormat(This,Movement)	\
    ( (This)->lpVtbl -> put_AngleFormat(This,Movement) ) 

#define IIcadDimAngular_get_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimAngular_put_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimAngular_get_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimAngular_put_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimAngular_get_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimAngular_put_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimAngular_get_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimAngular_put_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimAngular_get_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,Color) ) 

#define IIcadDimAngular_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadDimAngular_get_DimensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_DimensionLineWeight(This,pLineweight) ) 

#define IIcadDimAngular_put_DimensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_DimensionLineWeight(This,Lineweight) ) 

#define IIcadDimAngular_get_ExtensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_ExtensionLineWeight(This,pLineweight) ) 

#define IIcadDimAngular_put_ExtensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_ExtensionLineWeight(This,Lineweight) ) 

#define IIcadDimAngular_get_DimLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine1Suppress(This,Supress) ) 

#define IIcadDimAngular_put_DimLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine1Suppress(This,Suppress) ) 

#define IIcadDimAngular_get_DimLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine2Suppress(This,Supress) ) 

#define IIcadDimAngular_put_DimLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine2Suppress(This,Suppress) ) 

#define IIcadDimAngular_get_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_DimLineInside(This,Inside) ) 

#define IIcadDimAngular_put_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_DimLineInside(This,Inside) ) 

#define IIcadDimAngular_get_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_ExtensionLineColor(This,Color) ) 

#define IIcadDimAngular_put_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_ExtensionLineColor(This,Color) ) 

#define IIcadDimAngular_get_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> get_ExtensionLineExtend(This,Extension) ) 

#define IIcadDimAngular_put_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> put_ExtensionLineExtend(This,Extension) ) 

#define IIcadDimAngular_get_ExtLine1StartPoint(This,vPoint)	\
    ( (This)->lpVtbl -> get_ExtLine1StartPoint(This,vPoint) ) 

#define IIcadDimAngular_put_ExtLine1StartPoint(This,vPoint)	\
    ( (This)->lpVtbl -> put_ExtLine1StartPoint(This,vPoint) ) 

#define IIcadDimAngular_get_ExtLine1EndPoint(This,vPoint)	\
    ( (This)->lpVtbl -> get_ExtLine1EndPoint(This,vPoint) ) 

#define IIcadDimAngular_put_ExtLine1EndPoint(This,vPoint)	\
    ( (This)->lpVtbl -> put_ExtLine1EndPoint(This,vPoint) ) 

#define IIcadDimAngular_get_ExtLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine1Suppress(This,Supress) ) 

#define IIcadDimAngular_put_ExtLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine1Suppress(This,Suppress) ) 

#define IIcadDimAngular_get_ExtLine2EndPoint(This,vPoint)	\
    ( (This)->lpVtbl -> get_ExtLine2EndPoint(This,vPoint) ) 

#define IIcadDimAngular_put_ExtLine2EndPoint(This,vPoint)	\
    ( (This)->lpVtbl -> put_ExtLine2EndPoint(This,vPoint) ) 

#define IIcadDimAngular_get_ExtLine2StartPoint(This,vPoint)	\
    ( (This)->lpVtbl -> get_ExtLine2StartPoint(This,vPoint) ) 

#define IIcadDimAngular_put_ExtLine2StartPoint(This,vPoint)	\
    ( (This)->lpVtbl -> put_ExtLine2StartPoint(This,vPoint) ) 

#define IIcadDimAngular_get_ExtLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine2Suppress(This,Supress) ) 

#define IIcadDimAngular_put_ExtLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine2Suppress(This,Suppress) ) 

#define IIcadDimAngular_get_Fit(This,Fit)	\
    ( (This)->lpVtbl -> get_Fit(This,Fit) ) 

#define IIcadDimAngular_put_Fit(This,Fit)	\
    ( (This)->lpVtbl -> put_Fit(This,Fit) ) 

#define IIcadDimAngular_get_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_ForceLineInside(This,Inside) ) 

#define IIcadDimAngular_put_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_ForceLineInside(This,Inside) ) 

#define IIcadDimAngular_get_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_HorizontalTextPosition(This,Position) ) 

#define IIcadDimAngular_put_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_HorizontalTextPosition(This,Position) ) 

#define IIcadDimAngular_get_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> get_TextInside(This,Inside) ) 

#define IIcadDimAngular_put_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> put_TextInside(This,Inside) ) 

#define IIcadDimAngular_get_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextInsideAlign(This,Alignment) ) 

#define IIcadDimAngular_put_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextInsideAlign(This,Alignment) ) 

#define IIcadDimAngular_get_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimAngular_put_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimAngular_get_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TextPrecision(This,Precision) ) 

#define IIcadDimAngular_put_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TextPrecision(This,Precision) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_DimensionLineWeight_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimAngular_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_DimensionLineWeight_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimAngular_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtensionLineWeight_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimAngular_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtensionLineWeight_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimAngular_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_DimLine1Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAngular_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_DimLine1Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAngular_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_DimLine2Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAngular_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_DimLine2Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAngular_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_DimLineInside_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimAngular_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_DimLineInside_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimAngular_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtensionLineColor_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimAngular_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtensionLineColor_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimAngular_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtensionLineExtend_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ double *Extension);


void __RPC_STUB IIcadDimAngular_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtensionLineExtend_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ double Extension);


void __RPC_STUB IIcadDimAngular_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtLine1StartPoint_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT *vPoint);


void __RPC_STUB IIcadDimAngular_get_ExtLine1StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtLine1StartPoint_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT vPoint);


void __RPC_STUB IIcadDimAngular_put_ExtLine1StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtLine1EndPoint_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT *vPoint);


void __RPC_STUB IIcadDimAngular_get_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtLine1EndPoint_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT vPoint);


void __RPC_STUB IIcadDimAngular_put_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtLine1Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAngular_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtLine1Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAngular_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtLine2EndPoint_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT *vPoint);


void __RPC_STUB IIcadDimAngular_get_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtLine2EndPoint_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT vPoint);


void __RPC_STUB IIcadDimAngular_put_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtLine2StartPoint_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT *vPoint);


void __RPC_STUB IIcadDimAngular_get_ExtLine2StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtLine2StartPoint_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT vPoint);


void __RPC_STUB IIcadDimAngular_put_ExtLine2StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ExtLine2Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAngular_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ExtLine2Suppress_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAngular_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_Fit_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ ZcDimFit *Fit);


void __RPC_STUB IIcadDimAngular_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_Fit_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ ZcDimFit Fit);


void __RPC_STUB IIcadDimAngular_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_ForceLineInside_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimAngular_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_ForceLineInside_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimAngular_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_HorizontalTextPosition_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ ZcDimHorizontalJustification *Position);


void __RPC_STUB IIcadDimAngular_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_HorizontalTextPosition_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ ZcDimHorizontalJustification Position);


void __RPC_STUB IIcadDimAngular_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_TextInside_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimAngular_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_TextInside_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimAngular_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_TextInsideAlign_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimAngular_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_TextInsideAlign_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimAngular_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_TextOutsideAlign_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimAngular_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_TextOutsideAlign_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimAngular_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_get_TextPrecision_Proxy( 
    IIcadDimAngular * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimAngular_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAngular_put_TextPrecision_Proxy( 
    IIcadDimAngular * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimAngular_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDimAngular_INTERFACE_DEFINED__ */


#ifndef __IIcadDimAligned_INTERFACE_DEFINED__
#define __IIcadDimAligned_INTERFACE_DEFINED__

/* interface IIcadDimAligned */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimAligned;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d6371220-1974-44ad-8c42-7d336a96e15d")
    IIcadDimAligned : public IIcadDimension
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *PrefixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR PrefixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *SuffixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR SuffixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *Enable) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ ZcDimUnits *Units) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ ZcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ double *Scale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ double Scale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineExtend( 
            /* [retval][out] */ double *pScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineExtend( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *Extension) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double Extension) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Point( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Point( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Point( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Point( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ ZcDimFit *Fit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ ZcDimFit Fit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ ZcDimHorizontalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ ZcDimHorizontalJustification Position) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ ZcDimFractionType *Format) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ ZcDimFractionType Format) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ double *ScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimAlignedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimAligned * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimAligned * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimAligned * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimAligned * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimAligned * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimAligned * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimAligned * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimAligned * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimAligned * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimAligned * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimAligned * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimAligned * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimAligned * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimAligned * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDimAligned * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDimAligned * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDimAligned * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDimAligned * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDimAligned * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDimAligned * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDimAligned * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDimAligned * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDimAligned * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDimAligned * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDimAligned * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDimAligned * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDimAligned * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDimAligned * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDimAligned * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDimAligned * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDimAligned * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDimAligned * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDimAligned * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDimAligned * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDimAligned * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDimAligned * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDimAligned * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDimAligned * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDimAligned * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IIcadDimAligned * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Enable);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Scale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IIcadDimAligned * This,
            /* [in] */ double Scale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IIcadDimAligned * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IIcadDimAligned * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadDimAligned * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IIcadDimAligned * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IIcadDimAligned * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineExtend )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *pScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineExtend )( 
            IIcadDimAligned * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IIcadDimAligned * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Extension);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IIcadDimAligned * This,
            /* [in] */ double Extension);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Point )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Point )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Point )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Point )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimFit *Fit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimFit Fit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimHorizontalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimHorizontalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimFractionType *Format);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimFractionType Format);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IIcadDimAligned * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IIcadDimAligned * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IIcadDimAligned * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IIcadDimAligned * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IIcadDimAligned * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IIcadDimAligned * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IIcadDimAligned * This,
            /* [in] */ ZcDimPrecision Precision);
        
        END_INTERFACE
    } IIcadDimAlignedVtbl;

    interface IIcadDimAligned
    {
        CONST_VTBL struct IIcadDimAlignedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimAligned_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimAligned_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimAligned_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimAligned_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimAligned_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimAligned_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimAligned_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimAligned_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimAligned_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimAligned_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimAligned_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimAligned_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimAligned__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimAligned_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimAligned_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimAligned_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimAligned_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimAligned_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimAligned_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDimAligned_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDimAligned_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDimAligned_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDimAligned_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDimAligned_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDimAligned_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDimAligned_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDimAligned_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimAligned_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimAligned_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDimAligned_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDimAligned_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDimAligned_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDimAligned_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDimAligned_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDimAligned_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDimAligned_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDimAligned_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDimAligned_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDimAligned_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDimAligned_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDimAligned_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDimAligned_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDimAligned_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDimAligned_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDimAligned_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDimAligned_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDimAligned_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDimAligned_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDimAligned_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDimAligned_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDimAligned_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimAligned_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimAligned_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimAligned_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimAligned_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimAligned_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimAligned_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDimAligned_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDimAligned_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDimAligned_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDimAligned_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDimAligned_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDimAligned_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimAligned_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimAligned_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDimAligned_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDimAligned_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAligned_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimAligned_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDimAligned_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDimAligned_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDimAligned_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDimAligned_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDimAligned_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDimAligned_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDimAligned_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDimAligned_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDimAligned_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDimAligned_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDimAligned_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDimAligned_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDimAligned_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDimAligned_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDimAligned_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDimAligned_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDimAligned_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDimAligned_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDimAligned_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDimAligned_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDimAligned_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDimAligned_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimAligned_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimAligned_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimAligned_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimAligned_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimAligned_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimAligned_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimAligned_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimAligned_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAligned_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAligned_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimAligned_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimAligned_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDimAligned_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDimAligned_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDimAligned_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDimAligned_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDimAligned_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 


#define IIcadDimAligned_get_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_AltRoundDistance(This,Round) ) 

#define IIcadDimAligned_put_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_AltRoundDistance(This,Round) ) 

#define IIcadDimAligned_get_AltSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAligned_put_AltSuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimAligned_get_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_put_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_get_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_put_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_get_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_put_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_get_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimAligned_put_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimAligned_get_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimAligned_put_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimAligned_get_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimAligned_put_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimAligned_get_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAligned_put_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimAligned_get_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_put_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimAligned_get_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_put_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_get_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_put_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_get_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> get_AltUnits(This,Enable) ) 

#define IIcadDimAligned_put_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> put_AltUnits(This,Enable) ) 

#define IIcadDimAligned_get_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_AltUnitsFormat(This,Units) ) 

#define IIcadDimAligned_put_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_AltUnitsFormat(This,Units) ) 

#define IIcadDimAligned_get_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimAligned_put_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimAligned_get_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> get_AltUnitsScale(This,Scale) ) 

#define IIcadDimAligned_put_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> put_AltUnitsScale(This,Scale) ) 

#define IIcadDimAligned_get_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimAligned_put_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimAligned_get_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimAligned_put_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimAligned_get_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimAligned_put_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimAligned_get_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimAligned_put_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimAligned_get_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,Color) ) 

#define IIcadDimAligned_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadDimAligned_get_DimensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_DimensionLineWeight(This,pLineweight) ) 

#define IIcadDimAligned_put_DimensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_DimensionLineWeight(This,Lineweight) ) 

#define IIcadDimAligned_get_ExtensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_ExtensionLineWeight(This,pLineweight) ) 

#define IIcadDimAligned_put_ExtensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_ExtensionLineWeight(This,Lineweight) ) 

#define IIcadDimAligned_get_DimensionLineExtend(This,pScaleFactor)	\
    ( (This)->lpVtbl -> get_DimensionLineExtend(This,pScaleFactor) ) 

#define IIcadDimAligned_put_DimensionLineExtend(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_DimensionLineExtend(This,ScaleFactor) ) 

#define IIcadDimAligned_get_DimLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine1Suppress(This,Supress) ) 

#define IIcadDimAligned_put_DimLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine1Suppress(This,Suppress) ) 

#define IIcadDimAligned_get_DimLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine2Suppress(This,Supress) ) 

#define IIcadDimAligned_put_DimLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine2Suppress(This,Suppress) ) 

#define IIcadDimAligned_get_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_DimLineInside(This,Inside) ) 

#define IIcadDimAligned_put_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_DimLineInside(This,Inside) ) 

#define IIcadDimAligned_get_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_ExtensionLineColor(This,Color) ) 

#define IIcadDimAligned_put_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_ExtensionLineColor(This,Color) ) 

#define IIcadDimAligned_get_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> get_ExtensionLineExtend(This,Extension) ) 

#define IIcadDimAligned_put_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> put_ExtensionLineExtend(This,Extension) ) 

#define IIcadDimAligned_get_ExtLine1Point(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_ExtLine1Point(This,pVarPoint) ) 

#define IIcadDimAligned_put_ExtLine1Point(This,varPoint)	\
    ( (This)->lpVtbl -> put_ExtLine1Point(This,varPoint) ) 

#define IIcadDimAligned_get_ExtLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine1Suppress(This,Supress) ) 

#define IIcadDimAligned_put_ExtLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine1Suppress(This,Suppress) ) 

#define IIcadDimAligned_get_ExtLine2Point(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_ExtLine2Point(This,pVarPoint) ) 

#define IIcadDimAligned_put_ExtLine2Point(This,varPoint)	\
    ( (This)->lpVtbl -> put_ExtLine2Point(This,varPoint) ) 

#define IIcadDimAligned_get_ExtLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine2Suppress(This,Supress) ) 

#define IIcadDimAligned_put_ExtLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine2Suppress(This,Suppress) ) 

#define IIcadDimAligned_get_Fit(This,Fit)	\
    ( (This)->lpVtbl -> get_Fit(This,Fit) ) 

#define IIcadDimAligned_put_Fit(This,Fit)	\
    ( (This)->lpVtbl -> put_Fit(This,Fit) ) 

#define IIcadDimAligned_get_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_ForceLineInside(This,Inside) ) 

#define IIcadDimAligned_put_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_ForceLineInside(This,Inside) ) 

#define IIcadDimAligned_get_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_HorizontalTextPosition(This,Position) ) 

#define IIcadDimAligned_put_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_HorizontalTextPosition(This,Position) ) 

#define IIcadDimAligned_get_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> get_FractionFormat(This,Format) ) 

#define IIcadDimAligned_put_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> put_FractionFormat(This,Format) ) 

#define IIcadDimAligned_get_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimAligned_put_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimAligned_get_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimAligned_put_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimAligned_get_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_RoundDistance(This,Round) ) 

#define IIcadDimAligned_put_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_RoundDistance(This,Round) ) 

#define IIcadDimAligned_get_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_put_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroInches(This,Supress) ) 

#define IIcadDimAligned_get_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_put_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimAligned_get_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> get_TextInside(This,Inside) ) 

#define IIcadDimAligned_put_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> put_TextInside(This,Inside) ) 

#define IIcadDimAligned_get_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextInsideAlign(This,Alignment) ) 

#define IIcadDimAligned_put_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextInsideAlign(This,Alignment) ) 

#define IIcadDimAligned_get_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimAligned_put_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimAligned_get_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TextPrecision(This,Precision) ) 

#define IIcadDimAligned_put_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TextPrecision(This,Precision) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltTextSuffix_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ BSTR *SuffixString);


void __RPC_STUB IIcadDimAligned_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltTextSuffix_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ BSTR SuffixString);


void __RPC_STUB IIcadDimAligned_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltTolerancePrecision_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimAligned_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltTolerancePrecision_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimAligned_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimAligned_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimAligned_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimAligned_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimAligned_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltUnits_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Enable);


void __RPC_STUB IIcadDimAligned_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltUnits_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IIcadDimAligned_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltUnitsFormat_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimUnits *Units);


void __RPC_STUB IIcadDimAligned_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltUnitsFormat_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimUnits Units);


void __RPC_STUB IIcadDimAligned_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltUnitsPrecision_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimAligned_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltUnitsPrecision_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimAligned_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_AltUnitsScale_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ double *Scale);


void __RPC_STUB IIcadDimAligned_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_AltUnitsScale_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ double Scale);


void __RPC_STUB IIcadDimAligned_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_Arrowhead1Block_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IIcadDimAligned_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_Arrowhead1Block_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IIcadDimAligned_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_Arrowhead1Type_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);


void __RPC_STUB IIcadDimAligned_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_Arrowhead1Type_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimArrowheadType ArrowheadType);


void __RPC_STUB IIcadDimAligned_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_Arrowhead2Block_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IIcadDimAligned_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_Arrowhead2Block_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IIcadDimAligned_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_Arrowhead2Type_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);


void __RPC_STUB IIcadDimAligned_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_Arrowhead2Type_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimArrowheadType ArrowheadType);


void __RPC_STUB IIcadDimAligned_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_DimensionLineColor_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimAligned_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_DimensionLineColor_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimAligned_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_DimensionLineWeight_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimAligned_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_DimensionLineWeight_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimAligned_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ExtensionLineWeight_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimAligned_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ExtensionLineWeight_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimAligned_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_DimensionLineExtend_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ double *pScaleFactor);


void __RPC_STUB IIcadDimAligned_get_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_DimensionLineExtend_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ double ScaleFactor);


void __RPC_STUB IIcadDimAligned_put_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_DimLine1Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_DimLine1Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAligned_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_DimLine2Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_DimLine2Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAligned_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_DimLineInside_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimAligned_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_DimLineInside_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimAligned_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ExtensionLineColor_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimAligned_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ExtensionLineColor_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimAligned_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ExtensionLineExtend_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ double *Extension);


void __RPC_STUB IIcadDimAligned_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ExtensionLineExtend_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ double Extension);


void __RPC_STUB IIcadDimAligned_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ExtLine1Point_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT *pVarPoint);


void __RPC_STUB IIcadDimAligned_get_ExtLine1Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ExtLine1Point_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT varPoint);


void __RPC_STUB IIcadDimAligned_put_ExtLine1Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ExtLine1Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ExtLine1Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAligned_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ExtLine2Point_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT *pVarPoint);


void __RPC_STUB IIcadDimAligned_get_ExtLine2Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ExtLine2Point_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT varPoint);


void __RPC_STUB IIcadDimAligned_put_ExtLine2Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ExtLine2Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ExtLine2Suppress_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimAligned_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_Fit_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimFit *Fit);


void __RPC_STUB IIcadDimAligned_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_Fit_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimFit Fit);


void __RPC_STUB IIcadDimAligned_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_ForceLineInside_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimAligned_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_ForceLineInside_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimAligned_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_HorizontalTextPosition_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimHorizontalJustification *Position);


void __RPC_STUB IIcadDimAligned_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_HorizontalTextPosition_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimHorizontalJustification Position);


void __RPC_STUB IIcadDimAligned_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_FractionFormat_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimFractionType *Format);


void __RPC_STUB IIcadDimAligned_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_FractionFormat_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimFractionType Format);


void __RPC_STUB IIcadDimAligned_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_LinearScaleFactor_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ double *ScaleFactor);


void __RPC_STUB IIcadDimAligned_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_LinearScaleFactor_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ double ScaleFactor);


void __RPC_STUB IIcadDimAligned_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_PrimaryUnitsPrecision_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimAligned_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_PrimaryUnitsPrecision_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimAligned_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_RoundDistance_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ double *Round);


void __RPC_STUB IIcadDimAligned_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_RoundDistance_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ double Round);


void __RPC_STUB IIcadDimAligned_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_SuppressZeroInches_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_SuppressZeroInches_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimAligned_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_SuppressZeroFeet_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimAligned_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_SuppressZeroFeet_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimAligned_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_TextInside_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimAligned_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_TextInside_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimAligned_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_TextInsideAlign_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimAligned_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_TextInsideAlign_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimAligned_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_TextOutsideAlign_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimAligned_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_TextOutsideAlign_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimAligned_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_get_TextPrecision_Proxy( 
    IIcadDimAligned * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimAligned_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimAligned_put_TextPrecision_Proxy( 
    IIcadDimAligned * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimAligned_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDimAligned_INTERFACE_DEFINED__ */


#ifndef __IIcadDimDiametric_INTERFACE_DEFINED__
#define __IIcadDimDiametric_INTERFACE_DEFINED__

/* interface IIcadDimDiametric */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimDiametric;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bdc072f6-a356-4759-8c83-700f21242a8d")
    IIcadDimDiametric : public IIcadDimension
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *PrefixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR PrefixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *SuffixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR SuffixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *Enable) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ ZcDimUnits *Units) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ ZcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ double *Scale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ double Scale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CenterMarkSize( 
            /* [retval][out] */ double *Size) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterMarkSize( 
            /* [in] */ double Size) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CenterType( 
            /* [retval][out] */ ZcDimCenterType *Type) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterType( 
            /* [in] */ ZcDimCenterType Type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ ZcDimFit *Fit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ ZcDimFit Fit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ ZcDimFractionType *Format) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ ZcDimFractionType Format) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ ZcDimHorizontalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ ZcDimHorizontalJustification Position) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LeaderLength( 
            /* [retval][out] */ double *LeaderLength) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LeaderLength( 
            /* [in] */ double LeaderLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ double *ScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimDiametricVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimDiametric * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimDiametric * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimDiametric * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimDiametric * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimDiametric * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimDiametric * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimDiametric * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimDiametric * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDimDiametric * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDimDiametric * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDimDiametric * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDimDiametric * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDimDiametric * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDimDiametric * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDimDiametric * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDimDiametric * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDimDiametric * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDimDiametric * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDimDiametric * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDimDiametric * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDimDiametric * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDimDiametric * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDimDiametric * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDimDiametric * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDimDiametric * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDimDiametric * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDimDiametric * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IIcadDimDiametric * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Enable);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Scale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IIcadDimDiametric * This,
            /* [in] */ double Scale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IIcadDimDiametric * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterMarkSize )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Size);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterMarkSize )( 
            IIcadDimDiametric * This,
            /* [in] */ double Size);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterType )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimCenterType *Type);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterType )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimCenterType Type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimFit *Fit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimFit Fit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimFractionType *Format);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimFractionType Format);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimHorizontalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimHorizontalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LeaderLength )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *LeaderLength);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LeaderLength )( 
            IIcadDimDiametric * This,
            /* [in] */ double LeaderLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IIcadDimDiametric * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IIcadDimDiametric * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IIcadDimDiametric * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IIcadDimDiametric * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IIcadDimDiametric * This,
            /* [in] */ ZcDimPrecision Precision);
        
        END_INTERFACE
    } IIcadDimDiametricVtbl;

    interface IIcadDimDiametric
    {
        CONST_VTBL struct IIcadDimDiametricVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimDiametric_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimDiametric_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimDiametric_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimDiametric_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimDiametric_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimDiametric_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimDiametric_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimDiametric_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimDiametric_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimDiametric_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimDiametric_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimDiametric_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimDiametric__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimDiametric_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimDiametric_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimDiametric_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimDiametric_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimDiametric_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimDiametric_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDimDiametric_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDimDiametric_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDimDiametric_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDimDiametric_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDimDiametric_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDimDiametric_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDimDiametric_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDimDiametric_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimDiametric_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimDiametric_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDimDiametric_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDimDiametric_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDimDiametric_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDimDiametric_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDimDiametric_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDimDiametric_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDimDiametric_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDimDiametric_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDimDiametric_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDimDiametric_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDimDiametric_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDimDiametric_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDimDiametric_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDimDiametric_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDimDiametric_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDimDiametric_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDimDiametric_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDimDiametric_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDimDiametric_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDimDiametric_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDimDiametric_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDimDiametric_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimDiametric_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimDiametric_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimDiametric_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimDiametric_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimDiametric_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimDiametric_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDimDiametric_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDimDiametric_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDimDiametric_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDimDiametric_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDimDiametric_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDimDiametric_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimDiametric_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimDiametric_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDimDiametric_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDimDiametric_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimDiametric_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDimDiametric_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDimDiametric_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDimDiametric_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDimDiametric_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDimDiametric_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDimDiametric_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDimDiametric_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDimDiametric_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDimDiametric_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDimDiametric_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDimDiametric_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDimDiametric_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDimDiametric_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDimDiametric_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDimDiametric_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDimDiametric_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDimDiametric_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDimDiametric_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDimDiametric_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDimDiametric_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDimDiametric_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDimDiametric_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimDiametric_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimDiametric_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimDiametric_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimDiametric_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimDiametric_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimDiametric_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimDiametric_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimDiametric_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimDiametric_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimDiametric_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimDiametric_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDimDiametric_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDimDiametric_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDimDiametric_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDimDiametric_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDimDiametric_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 


#define IIcadDimDiametric_get_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_AltRoundDistance(This,Round) ) 

#define IIcadDimDiametric_put_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_AltRoundDistance(This,Round) ) 

#define IIcadDimDiametric_get_AltSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_AltSuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimDiametric_get_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_get_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_put_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_get_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_put_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_get_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimDiametric_put_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimDiametric_get_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimDiametric_put_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimDiametric_get_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimDiametric_put_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimDiametric_get_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimDiametric_get_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_put_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimDiametric_get_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_put_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_get_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_put_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_get_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> get_AltUnits(This,Enable) ) 

#define IIcadDimDiametric_put_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> put_AltUnits(This,Enable) ) 

#define IIcadDimDiametric_get_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_AltUnitsFormat(This,Units) ) 

#define IIcadDimDiametric_put_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_AltUnitsFormat(This,Units) ) 

#define IIcadDimDiametric_get_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimDiametric_put_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimDiametric_get_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> get_AltUnitsScale(This,Scale) ) 

#define IIcadDimDiametric_put_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> put_AltUnitsScale(This,Scale) ) 

#define IIcadDimDiametric_get_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimDiametric_put_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimDiametric_get_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimDiametric_put_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimDiametric_get_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimDiametric_put_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimDiametric_get_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimDiametric_put_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimDiametric_get_CenterMarkSize(This,Size)	\
    ( (This)->lpVtbl -> get_CenterMarkSize(This,Size) ) 

#define IIcadDimDiametric_put_CenterMarkSize(This,Size)	\
    ( (This)->lpVtbl -> put_CenterMarkSize(This,Size) ) 

#define IIcadDimDiametric_get_CenterType(This,Type)	\
    ( (This)->lpVtbl -> get_CenterType(This,Type) ) 

#define IIcadDimDiametric_put_CenterType(This,Type)	\
    ( (This)->lpVtbl -> put_CenterType(This,Type) ) 

#define IIcadDimDiametric_get_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,Color) ) 

#define IIcadDimDiametric_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadDimDiametric_get_DimensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_DimensionLineWeight(This,pLineweight) ) 

#define IIcadDimDiametric_put_DimensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_DimensionLineWeight(This,Lineweight) ) 

#define IIcadDimDiametric_get_DimLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine1Suppress(This,Supress) ) 

#define IIcadDimDiametric_put_DimLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine1Suppress(This,Suppress) ) 

#define IIcadDimDiametric_get_DimLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine2Suppress(This,Supress) ) 

#define IIcadDimDiametric_put_DimLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine2Suppress(This,Suppress) ) 

#define IIcadDimDiametric_get_Fit(This,Fit)	\
    ( (This)->lpVtbl -> get_Fit(This,Fit) ) 

#define IIcadDimDiametric_put_Fit(This,Fit)	\
    ( (This)->lpVtbl -> put_Fit(This,Fit) ) 

#define IIcadDimDiametric_get_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_ForceLineInside(This,Inside) ) 

#define IIcadDimDiametric_put_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_ForceLineInside(This,Inside) ) 

#define IIcadDimDiametric_get_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> get_FractionFormat(This,Format) ) 

#define IIcadDimDiametric_put_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> put_FractionFormat(This,Format) ) 

#define IIcadDimDiametric_get_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_HorizontalTextPosition(This,Position) ) 

#define IIcadDimDiametric_put_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_HorizontalTextPosition(This,Position) ) 

#define IIcadDimDiametric_get_LeaderLength(This,LeaderLength)	\
    ( (This)->lpVtbl -> get_LeaderLength(This,LeaderLength) ) 

#define IIcadDimDiametric_put_LeaderLength(This,LeaderLength)	\
    ( (This)->lpVtbl -> put_LeaderLength(This,LeaderLength) ) 

#define IIcadDimDiametric_get_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimDiametric_put_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimDiametric_get_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimDiametric_put_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimDiametric_get_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_RoundDistance(This,Round) ) 

#define IIcadDimDiametric_put_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_RoundDistance(This,Round) ) 

#define IIcadDimDiametric_get_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_put_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroInches(This,Supress) ) 

#define IIcadDimDiametric_get_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_put_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimDiametric_get_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> get_TextInside(This,Inside) ) 

#define IIcadDimDiametric_put_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> put_TextInside(This,Inside) ) 

#define IIcadDimDiametric_get_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextInsideAlign(This,Alignment) ) 

#define IIcadDimDiametric_put_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextInsideAlign(This,Alignment) ) 

#define IIcadDimDiametric_get_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimDiametric_put_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimDiametric_get_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TextPrecision(This,Precision) ) 

#define IIcadDimDiametric_put_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TextPrecision(This,Precision) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltTextSuffix_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ BSTR *SuffixString);


void __RPC_STUB IIcadDimDiametric_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltTextSuffix_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ BSTR SuffixString);


void __RPC_STUB IIcadDimDiametric_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltTolerancePrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimDiametric_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltTolerancePrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimDiametric_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimDiametric_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimDiametric_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimDiametric_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimDiametric_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltUnits_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Enable);


void __RPC_STUB IIcadDimDiametric_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltUnits_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IIcadDimDiametric_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltUnitsFormat_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimUnits *Units);


void __RPC_STUB IIcadDimDiametric_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltUnitsFormat_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimUnits Units);


void __RPC_STUB IIcadDimDiametric_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltUnitsPrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimDiametric_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltUnitsPrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimDiametric_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_AltUnitsScale_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ double *Scale);


void __RPC_STUB IIcadDimDiametric_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_AltUnitsScale_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ double Scale);


void __RPC_STUB IIcadDimDiametric_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_Arrowhead1Block_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IIcadDimDiametric_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_Arrowhead1Block_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IIcadDimDiametric_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_Arrowhead1Type_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);


void __RPC_STUB IIcadDimDiametric_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_Arrowhead1Type_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimArrowheadType ArrowheadType);


void __RPC_STUB IIcadDimDiametric_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_Arrowhead2Block_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IIcadDimDiametric_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_Arrowhead2Block_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IIcadDimDiametric_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_Arrowhead2Type_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);


void __RPC_STUB IIcadDimDiametric_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_Arrowhead2Type_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimArrowheadType ArrowheadType);


void __RPC_STUB IIcadDimDiametric_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_CenterMarkSize_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ double *Size);


void __RPC_STUB IIcadDimDiametric_get_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_CenterMarkSize_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ double Size);


void __RPC_STUB IIcadDimDiametric_put_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_CenterType_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimCenterType *Type);


void __RPC_STUB IIcadDimDiametric_get_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_CenterType_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimCenterType Type);


void __RPC_STUB IIcadDimDiametric_put_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_DimensionLineColor_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimDiametric_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_DimensionLineColor_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimDiametric_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_DimensionLineWeight_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimDiametric_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_DimensionLineWeight_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimDiametric_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_DimLine1Suppress_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_DimLine1Suppress_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimDiametric_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_DimLine2Suppress_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_DimLine2Suppress_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimDiametric_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_Fit_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimFit *Fit);


void __RPC_STUB IIcadDimDiametric_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_Fit_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimFit Fit);


void __RPC_STUB IIcadDimDiametric_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_ForceLineInside_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimDiametric_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_ForceLineInside_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimDiametric_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_FractionFormat_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimFractionType *Format);


void __RPC_STUB IIcadDimDiametric_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_FractionFormat_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimFractionType Format);


void __RPC_STUB IIcadDimDiametric_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_HorizontalTextPosition_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimHorizontalJustification *Position);


void __RPC_STUB IIcadDimDiametric_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_HorizontalTextPosition_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimHorizontalJustification Position);


void __RPC_STUB IIcadDimDiametric_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_LeaderLength_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ double *LeaderLength);


void __RPC_STUB IIcadDimDiametric_get_LeaderLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_LeaderLength_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ double LeaderLength);


void __RPC_STUB IIcadDimDiametric_put_LeaderLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_LinearScaleFactor_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ double *ScaleFactor);


void __RPC_STUB IIcadDimDiametric_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_LinearScaleFactor_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ double ScaleFactor);


void __RPC_STUB IIcadDimDiametric_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_PrimaryUnitsPrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimDiametric_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_PrimaryUnitsPrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimDiametric_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_RoundDistance_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ double *Round);


void __RPC_STUB IIcadDimDiametric_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_RoundDistance_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ double Round);


void __RPC_STUB IIcadDimDiametric_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_SuppressZeroInches_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_SuppressZeroInches_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimDiametric_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_SuppressZeroFeet_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimDiametric_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_SuppressZeroFeet_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimDiametric_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_TextInside_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimDiametric_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_TextInside_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimDiametric_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_TextInsideAlign_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimDiametric_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_TextInsideAlign_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimDiametric_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_TextOutsideAlign_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimDiametric_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_TextOutsideAlign_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimDiametric_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_get_TextPrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimDiametric_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimDiametric_put_TextPrecision_Proxy( 
    IIcadDimDiametric * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimDiametric_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDimDiametric_INTERFACE_DEFINED__ */


#ifndef __IIcadDimOrdinate_INTERFACE_DEFINED__
#define __IIcadDimOrdinate_INTERFACE_DEFINED__

/* interface IIcadDimOrdinate */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimOrdinate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("907bc1b2-7288-4a7c-a6cb-5f6a28258cc0")
    IIcadDimOrdinate : public IIcadDimension
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *PrefixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR PrefixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *SuffixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR SuffixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *Enable) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ ZcDimUnits *Units) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ ZcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ double *Scale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ double Scale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ ZcDimFractionType *Format) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ ZcDimFractionType Format) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ double *ScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimOrdinateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimOrdinate * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimOrdinate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimOrdinate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimOrdinate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimOrdinate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimOrdinate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimOrdinate * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimOrdinate * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDimOrdinate * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDimOrdinate * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDimOrdinate * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDimOrdinate * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDimOrdinate * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDimOrdinate * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDimOrdinate * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDimOrdinate * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDimOrdinate * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDimOrdinate * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDimOrdinate * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IIcadDimOrdinate * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Enable);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Scale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Scale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimFractionType *Format);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimFractionType Format);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IIcadDimOrdinate * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IIcadDimOrdinate * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IIcadDimOrdinate * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IIcadDimOrdinate * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        END_INTERFACE
    } IIcadDimOrdinateVtbl;

    interface IIcadDimOrdinate
    {
        CONST_VTBL struct IIcadDimOrdinateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimOrdinate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimOrdinate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimOrdinate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimOrdinate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimOrdinate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimOrdinate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimOrdinate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimOrdinate_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimOrdinate_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimOrdinate_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimOrdinate_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimOrdinate_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimOrdinate__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimOrdinate_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimOrdinate_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimOrdinate_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimOrdinate_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimOrdinate_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimOrdinate_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDimOrdinate_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDimOrdinate_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDimOrdinate_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDimOrdinate_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDimOrdinate_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDimOrdinate_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDimOrdinate_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDimOrdinate_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimOrdinate_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimOrdinate_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDimOrdinate_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDimOrdinate_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDimOrdinate_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDimOrdinate_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDimOrdinate_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDimOrdinate_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDimOrdinate_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDimOrdinate_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDimOrdinate_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDimOrdinate_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDimOrdinate_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDimOrdinate_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDimOrdinate_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDimOrdinate_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDimOrdinate_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDimOrdinate_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDimOrdinate_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDimOrdinate_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDimOrdinate_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDimOrdinate_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDimOrdinate_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDimOrdinate_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimOrdinate_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimOrdinate_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimOrdinate_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimOrdinate_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimOrdinate_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimOrdinate_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDimOrdinate_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDimOrdinate_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDimOrdinate_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDimOrdinate_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDimOrdinate_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDimOrdinate_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimOrdinate_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimOrdinate_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDimOrdinate_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDimOrdinate_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimOrdinate_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDimOrdinate_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDimOrdinate_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDimOrdinate_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDimOrdinate_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDimOrdinate_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDimOrdinate_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDimOrdinate_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDimOrdinate_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDimOrdinate_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDimOrdinate_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDimOrdinate_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDimOrdinate_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDimOrdinate_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDimOrdinate_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDimOrdinate_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDimOrdinate_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDimOrdinate_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDimOrdinate_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDimOrdinate_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDimOrdinate_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDimOrdinate_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDimOrdinate_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimOrdinate_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimOrdinate_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimOrdinate_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimOrdinate_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimOrdinate_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimOrdinate_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimOrdinate_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimOrdinate_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimOrdinate_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimOrdinate_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimOrdinate_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimOrdinate_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimOrdinate_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDimOrdinate_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDimOrdinate_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDimOrdinate_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDimOrdinate_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDimOrdinate_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 


#define IIcadDimOrdinate_get_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_AltRoundDistance(This,Round) ) 

#define IIcadDimOrdinate_put_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_AltRoundDistance(This,Round) ) 

#define IIcadDimOrdinate_get_AltSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_AltSuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimOrdinate_get_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_get_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_put_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_get_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimOrdinate_put_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimOrdinate_get_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimOrdinate_put_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimOrdinate_get_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimOrdinate_put_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimOrdinate_get_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimOrdinate_put_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimOrdinate_get_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimOrdinate_get_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_put_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimOrdinate_get_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_put_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_get_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimOrdinate_put_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimOrdinate_get_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> get_AltUnits(This,Enable) ) 

#define IIcadDimOrdinate_put_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> put_AltUnits(This,Enable) ) 

#define IIcadDimOrdinate_get_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_AltUnitsFormat(This,Units) ) 

#define IIcadDimOrdinate_put_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_AltUnitsFormat(This,Units) ) 

#define IIcadDimOrdinate_get_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimOrdinate_put_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimOrdinate_get_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> get_AltUnitsScale(This,Scale) ) 

#define IIcadDimOrdinate_put_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> put_AltUnitsScale(This,Scale) ) 

#define IIcadDimOrdinate_get_ExtensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_ExtensionLineWeight(This,pLineweight) ) 

#define IIcadDimOrdinate_put_ExtensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_ExtensionLineWeight(This,Lineweight) ) 

#define IIcadDimOrdinate_get_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_ExtensionLineColor(This,Color) ) 

#define IIcadDimOrdinate_put_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_ExtensionLineColor(This,Color) ) 

#define IIcadDimOrdinate_get_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> get_FractionFormat(This,Format) ) 

#define IIcadDimOrdinate_put_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> put_FractionFormat(This,Format) ) 

#define IIcadDimOrdinate_get_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimOrdinate_put_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimOrdinate_get_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimOrdinate_put_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimOrdinate_get_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_RoundDistance(This,Round) ) 

#define IIcadDimOrdinate_put_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_RoundDistance(This,Round) ) 

#define IIcadDimOrdinate_get_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_put_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroInches(This,Supress) ) 

#define IIcadDimOrdinate_get_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimOrdinate_put_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroFeet(This,Supress) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltTextSuffix_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ BSTR *SuffixString);


void __RPC_STUB IIcadDimOrdinate_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltTextSuffix_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ BSTR SuffixString);


void __RPC_STUB IIcadDimOrdinate_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltTolerancePrecision_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimOrdinate_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltTolerancePrecision_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimOrdinate_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimOrdinate_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimOrdinate_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimOrdinate_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimOrdinate_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimOrdinate_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimOrdinate_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimOrdinate_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimOrdinate_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltUnits_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *Enable);


void __RPC_STUB IIcadDimOrdinate_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltUnits_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IIcadDimOrdinate_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltUnitsFormat_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ ZcDimUnits *Units);


void __RPC_STUB IIcadDimOrdinate_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltUnitsFormat_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ ZcDimUnits Units);


void __RPC_STUB IIcadDimOrdinate_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltUnitsPrecision_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimOrdinate_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltUnitsPrecision_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimOrdinate_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_AltUnitsScale_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ double *Scale);


void __RPC_STUB IIcadDimOrdinate_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_AltUnitsScale_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ double Scale);


void __RPC_STUB IIcadDimOrdinate_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_ExtensionLineWeight_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimOrdinate_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_ExtensionLineWeight_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimOrdinate_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_ExtensionLineColor_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimOrdinate_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_ExtensionLineColor_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimOrdinate_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_FractionFormat_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ ZcDimFractionType *Format);


void __RPC_STUB IIcadDimOrdinate_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_FractionFormat_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ ZcDimFractionType Format);


void __RPC_STUB IIcadDimOrdinate_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_LinearScaleFactor_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ double *ScaleFactor);


void __RPC_STUB IIcadDimOrdinate_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_LinearScaleFactor_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ double ScaleFactor);


void __RPC_STUB IIcadDimOrdinate_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_PrimaryUnitsPrecision_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimOrdinate_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_PrimaryUnitsPrecision_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimOrdinate_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_RoundDistance_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ double *Round);


void __RPC_STUB IIcadDimOrdinate_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_RoundDistance_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ double Round);


void __RPC_STUB IIcadDimOrdinate_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_SuppressZeroInches_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimOrdinate_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_SuppressZeroInches_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimOrdinate_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_get_SuppressZeroFeet_Proxy( 
    IIcadDimOrdinate * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimOrdinate_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimOrdinate_put_SuppressZeroFeet_Proxy( 
    IIcadDimOrdinate * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimOrdinate_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDimOrdinate_INTERFACE_DEFINED__ */


#ifndef __IIcadDimRadial_INTERFACE_DEFINED__
#define __IIcadDimRadial_INTERFACE_DEFINED__

/* interface IIcadDimRadial */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimRadial;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6d67a773-436f-45d8-a8a0-b36f2f9c4ef7")
    IIcadDimRadial : public IIcadDimension
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *PrefixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR PrefixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *SuffixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR SuffixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *Enable) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ ZcDimUnits *Units) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ ZcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ double *Scale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ double Scale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArrowheadBlock( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ArrowheadBlock( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArrowheadType( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ArrowheadType( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CenterMarkSize( 
            /* [retval][out] */ double *Size) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterMarkSize( 
            /* [in] */ double Size) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CenterType( 
            /* [retval][out] */ ZcDimCenterType *Type) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterType( 
            /* [in] */ ZcDimCenterType Type) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLineSuppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLineSuppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ ZcDimFit *Fit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ ZcDimFit Fit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ ZcDimFractionType *Format) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ ZcDimFractionType Format) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ ZcDimHorizontalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ ZcDimHorizontalJustification Position) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LeaderLength( 
            /* [retval][out] */ double *LeaderLength) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LeaderLength( 
            /* [in] */ double LeaderLength) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ double *ScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimRadialVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimRadial * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimRadial * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimRadial * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimRadial * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimRadial * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimRadial * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimRadial * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimRadial * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimRadial * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimRadial * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimRadial * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimRadial * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimRadial * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimRadial * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDimRadial * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDimRadial * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDimRadial * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDimRadial * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDimRadial * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDimRadial * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDimRadial * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDimRadial * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDimRadial * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDimRadial * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDimRadial * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDimRadial * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDimRadial * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDimRadial * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDimRadial * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDimRadial * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDimRadial * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDimRadial * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDimRadial * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDimRadial * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDimRadial * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDimRadial * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDimRadial * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDimRadial * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDimRadial * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IIcadDimRadial * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Enable);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Scale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IIcadDimRadial * This,
            /* [in] */ double Scale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadBlock )( 
            IIcadDimRadial * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadBlock )( 
            IIcadDimRadial * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadType )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadType )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterMarkSize )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Size);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterMarkSize )( 
            IIcadDimRadial * This,
            /* [in] */ double Size);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterType )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimCenterType *Type);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterType )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimCenterType Type);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadDimRadial * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IIcadDimRadial * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineSuppress )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineSuppress )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimFit *Fit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimFit Fit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimFractionType *Format);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimFractionType Format);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimHorizontalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimHorizontalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LeaderLength )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *LeaderLength);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LeaderLength )( 
            IIcadDimRadial * This,
            /* [in] */ double LeaderLength);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IIcadDimRadial * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IIcadDimRadial * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IIcadDimRadial * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IIcadDimRadial * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IIcadDimRadial * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IIcadDimRadial * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IIcadDimRadial * This,
            /* [in] */ ZcDimPrecision Precision);
        
        END_INTERFACE
    } IIcadDimRadialVtbl;

    interface IIcadDimRadial
    {
        CONST_VTBL struct IIcadDimRadialVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimRadial_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimRadial_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimRadial_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimRadial_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimRadial_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimRadial_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimRadial_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimRadial_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimRadial_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimRadial_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimRadial_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimRadial_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimRadial__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimRadial_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimRadial_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimRadial_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimRadial_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimRadial_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimRadial_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDimRadial_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDimRadial_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDimRadial_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDimRadial_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDimRadial_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDimRadial_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDimRadial_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDimRadial_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimRadial_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimRadial_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDimRadial_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDimRadial_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDimRadial_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDimRadial_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDimRadial_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDimRadial_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDimRadial_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDimRadial_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDimRadial_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDimRadial_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDimRadial_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDimRadial_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDimRadial_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDimRadial_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDimRadial_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDimRadial_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDimRadial_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDimRadial_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDimRadial_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDimRadial_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDimRadial_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDimRadial_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimRadial_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimRadial_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimRadial_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimRadial_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimRadial_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimRadial_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDimRadial_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDimRadial_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDimRadial_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDimRadial_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDimRadial_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDimRadial_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRadial_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRadial_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDimRadial_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDimRadial_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRadial_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimRadial_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDimRadial_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDimRadial_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDimRadial_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDimRadial_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDimRadial_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDimRadial_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDimRadial_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDimRadial_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDimRadial_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDimRadial_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDimRadial_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDimRadial_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDimRadial_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDimRadial_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDimRadial_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDimRadial_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDimRadial_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDimRadial_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDimRadial_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDimRadial_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDimRadial_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDimRadial_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimRadial_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimRadial_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimRadial_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimRadial_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimRadial_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimRadial_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimRadial_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimRadial_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRadial_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRadial_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimRadial_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimRadial_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDimRadial_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDimRadial_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDimRadial_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDimRadial_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDimRadial_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 


#define IIcadDimRadial_get_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_AltRoundDistance(This,Round) ) 

#define IIcadDimRadial_put_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_AltRoundDistance(This,Round) ) 

#define IIcadDimRadial_get_AltSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRadial_put_AltSuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimRadial_get_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_put_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_get_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_put_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_get_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_put_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_get_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimRadial_put_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimRadial_get_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimRadial_put_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimRadial_get_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimRadial_put_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimRadial_get_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRadial_put_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRadial_get_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_put_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRadial_get_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_put_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_get_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_put_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_get_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> get_AltUnits(This,Enable) ) 

#define IIcadDimRadial_put_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> put_AltUnits(This,Enable) ) 

#define IIcadDimRadial_get_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_AltUnitsFormat(This,Units) ) 

#define IIcadDimRadial_put_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_AltUnitsFormat(This,Units) ) 

#define IIcadDimRadial_get_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimRadial_put_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimRadial_get_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> get_AltUnitsScale(This,Scale) ) 

#define IIcadDimRadial_put_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> put_AltUnitsScale(This,Scale) ) 

#define IIcadDimRadial_get_ArrowheadBlock(This,BlockName)	\
    ( (This)->lpVtbl -> get_ArrowheadBlock(This,BlockName) ) 

#define IIcadDimRadial_put_ArrowheadBlock(This,BlockName)	\
    ( (This)->lpVtbl -> put_ArrowheadBlock(This,BlockName) ) 

#define IIcadDimRadial_get_ArrowheadType(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_ArrowheadType(This,ArrowheadType) ) 

#define IIcadDimRadial_put_ArrowheadType(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_ArrowheadType(This,ArrowheadType) ) 

#define IIcadDimRadial_get_CenterMarkSize(This,Size)	\
    ( (This)->lpVtbl -> get_CenterMarkSize(This,Size) ) 

#define IIcadDimRadial_put_CenterMarkSize(This,Size)	\
    ( (This)->lpVtbl -> put_CenterMarkSize(This,Size) ) 

#define IIcadDimRadial_get_CenterType(This,Type)	\
    ( (This)->lpVtbl -> get_CenterType(This,Type) ) 

#define IIcadDimRadial_put_CenterType(This,Type)	\
    ( (This)->lpVtbl -> put_CenterType(This,Type) ) 

#define IIcadDimRadial_get_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,Color) ) 

#define IIcadDimRadial_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadDimRadial_get_DimensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_DimensionLineWeight(This,pLineweight) ) 

#define IIcadDimRadial_put_DimensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_DimensionLineWeight(This,Lineweight) ) 

#define IIcadDimRadial_get_DimLineSuppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLineSuppress(This,Supress) ) 

#define IIcadDimRadial_put_DimLineSuppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLineSuppress(This,Suppress) ) 

#define IIcadDimRadial_get_Fit(This,Fit)	\
    ( (This)->lpVtbl -> get_Fit(This,Fit) ) 

#define IIcadDimRadial_put_Fit(This,Fit)	\
    ( (This)->lpVtbl -> put_Fit(This,Fit) ) 

#define IIcadDimRadial_get_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_ForceLineInside(This,Inside) ) 

#define IIcadDimRadial_put_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_ForceLineInside(This,Inside) ) 

#define IIcadDimRadial_get_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> get_FractionFormat(This,Format) ) 

#define IIcadDimRadial_put_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> put_FractionFormat(This,Format) ) 

#define IIcadDimRadial_get_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_HorizontalTextPosition(This,Position) ) 

#define IIcadDimRadial_put_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_HorizontalTextPosition(This,Position) ) 

#define IIcadDimRadial_get_LeaderLength(This,LeaderLength)	\
    ( (This)->lpVtbl -> get_LeaderLength(This,LeaderLength) ) 

#define IIcadDimRadial_put_LeaderLength(This,LeaderLength)	\
    ( (This)->lpVtbl -> put_LeaderLength(This,LeaderLength) ) 

#define IIcadDimRadial_get_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRadial_put_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRadial_get_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimRadial_put_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimRadial_get_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_RoundDistance(This,Round) ) 

#define IIcadDimRadial_put_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_RoundDistance(This,Round) ) 

#define IIcadDimRadial_get_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_put_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroInches(This,Supress) ) 

#define IIcadDimRadial_get_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_put_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimRadial_get_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> get_TextInside(This,Inside) ) 

#define IIcadDimRadial_put_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> put_TextInside(This,Inside) ) 

#define IIcadDimRadial_get_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextInsideAlign(This,Alignment) ) 

#define IIcadDimRadial_put_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextInsideAlign(This,Alignment) ) 

#define IIcadDimRadial_get_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimRadial_put_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimRadial_get_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TextPrecision(This,Precision) ) 

#define IIcadDimRadial_put_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TextPrecision(This,Precision) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltTextSuffix_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ BSTR *SuffixString);


void __RPC_STUB IIcadDimRadial_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltTextSuffix_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ BSTR SuffixString);


void __RPC_STUB IIcadDimRadial_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltTolerancePrecision_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRadial_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltTolerancePrecision_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRadial_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRadial_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRadial_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRadial_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRadial_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRadial_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRadial_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRadial_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRadial_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltUnits_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Enable);


void __RPC_STUB IIcadDimRadial_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltUnits_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IIcadDimRadial_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltUnitsFormat_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimUnits *Units);


void __RPC_STUB IIcadDimRadial_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltUnitsFormat_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimUnits Units);


void __RPC_STUB IIcadDimRadial_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltUnitsPrecision_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRadial_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltUnitsPrecision_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRadial_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_AltUnitsScale_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ double *Scale);


void __RPC_STUB IIcadDimRadial_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_AltUnitsScale_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ double Scale);


void __RPC_STUB IIcadDimRadial_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_ArrowheadBlock_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IIcadDimRadial_get_ArrowheadBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_ArrowheadBlock_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IIcadDimRadial_put_ArrowheadBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_ArrowheadType_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);


void __RPC_STUB IIcadDimRadial_get_ArrowheadType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_ArrowheadType_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimArrowheadType ArrowheadType);


void __RPC_STUB IIcadDimRadial_put_ArrowheadType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_CenterMarkSize_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ double *Size);


void __RPC_STUB IIcadDimRadial_get_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_CenterMarkSize_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ double Size);


void __RPC_STUB IIcadDimRadial_put_CenterMarkSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_CenterType_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimCenterType *Type);


void __RPC_STUB IIcadDimRadial_get_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_CenterType_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimCenterType Type);


void __RPC_STUB IIcadDimRadial_put_CenterType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_DimensionLineColor_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimRadial_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_DimensionLineColor_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimRadial_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_DimensionLineWeight_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimRadial_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_DimensionLineWeight_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimRadial_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_DimLineSuppress_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRadial_get_DimLineSuppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_DimLineSuppress_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimRadial_put_DimLineSuppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_Fit_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimFit *Fit);


void __RPC_STUB IIcadDimRadial_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_Fit_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimFit Fit);


void __RPC_STUB IIcadDimRadial_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_ForceLineInside_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimRadial_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_ForceLineInside_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimRadial_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_FractionFormat_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimFractionType *Format);


void __RPC_STUB IIcadDimRadial_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_FractionFormat_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimFractionType Format);


void __RPC_STUB IIcadDimRadial_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_HorizontalTextPosition_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimHorizontalJustification *Position);


void __RPC_STUB IIcadDimRadial_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_HorizontalTextPosition_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimHorizontalJustification Position);


void __RPC_STUB IIcadDimRadial_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_LeaderLength_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ double *LeaderLength);


void __RPC_STUB IIcadDimRadial_get_LeaderLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_LeaderLength_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ double LeaderLength);


void __RPC_STUB IIcadDimRadial_put_LeaderLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_LinearScaleFactor_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ double *ScaleFactor);


void __RPC_STUB IIcadDimRadial_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_LinearScaleFactor_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ double ScaleFactor);


void __RPC_STUB IIcadDimRadial_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_PrimaryUnitsPrecision_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRadial_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_PrimaryUnitsPrecision_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRadial_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_RoundDistance_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ double *Round);


void __RPC_STUB IIcadDimRadial_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_RoundDistance_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ double Round);


void __RPC_STUB IIcadDimRadial_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_SuppressZeroInches_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRadial_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_SuppressZeroInches_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRadial_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_SuppressZeroFeet_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRadial_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_SuppressZeroFeet_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRadial_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_TextInside_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimRadial_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_TextInside_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimRadial_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_TextInsideAlign_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimRadial_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_TextInsideAlign_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimRadial_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_TextOutsideAlign_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimRadial_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_TextOutsideAlign_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimRadial_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_get_TextPrecision_Proxy( 
    IIcadDimRadial * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRadial_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRadial_put_TextPrecision_Proxy( 
    IIcadDimRadial * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRadial_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDimRadial_INTERFACE_DEFINED__ */


#ifndef __IIcadDimRotated_INTERFACE_DEFINED__
#define __IIcadDimRotated_INTERFACE_DEFINED__

/* interface IIcadDimRotated */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDimRotated;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2c5ab771-9271-4f1f-91bc-0e69f5633747")
    IIcadDimRotated : public IIcadDimension
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltRoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltRoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextPrefix( 
            /* [retval][out] */ BSTR *PrefixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextPrefix( 
            /* [in] */ BSTR PrefixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTextSuffix( 
            /* [retval][out] */ BSTR *SuffixString) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTextSuffix( 
            /* [in] */ BSTR SuffixString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltTolerancePrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltTolerancePrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressLeadingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressLeadingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressTrailingZeros( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressTrailingZeros( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltToleranceSuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltToleranceSuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnits( 
            /* [retval][out] */ VARIANT_BOOL *Enable) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnits( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsFormat( 
            /* [retval][out] */ ZcDimUnits *Units) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsFormat( 
            /* [in] */ ZcDimUnits Units) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AltUnitsScale( 
            /* [retval][out] */ double *Scale) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AltUnitsScale( 
            /* [in] */ double Scale) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineExtend( 
            /* [retval][out] */ double *Distance) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineExtend( 
            /* [in] */ double Distance) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *Extension) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double Extension) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ ZcDimFit *Fit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ ZcDimFit Fit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FractionFormat( 
            /* [retval][out] */ ZcDimFractionType *Format) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FractionFormat( 
            /* [in] */ ZcDimFractionType Format) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ ZcDimHorizontalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ ZcDimHorizontalJustification Position) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LinearScaleFactor( 
            /* [retval][out] */ double *ScaleFactor) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LinearScaleFactor( 
            /* [in] */ double ScaleFactor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PrimaryUnitsPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PrimaryUnitsPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoundDistance( 
            /* [retval][out] */ double *Round) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RoundDistance( 
            /* [in] */ double Round) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroInches( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroInches( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressZeroFeet( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SuppressZeroFeet( 
            /* [in] */ VARIANT_BOOL Supress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Point( 
            /* [retval][out] */ VARIANT *vPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Point( 
            /* [in] */ VARIANT vPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Point( 
            /* [retval][out] */ VARIANT *vPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Point( 
            /* [in] */ VARIANT vPoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDimRotatedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDimRotated * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDimRotated * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDimRotated * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDimRotated * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDimRotated * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDimRotated * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDimRotated * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDimRotated * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDimRotated * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDimRotated * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDimRotated * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDimRotated * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDimRotated * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDimRotated * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDimRotated * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDimRotated * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDimRotated * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDimRotated * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDimRotated * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDimRotated * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDimRotated * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDimRotated * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDimRotated * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDimRotated * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDimRotated * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDimRotated * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDimRotated * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDimRotated * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDimRotated * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDimRotated * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDimRotated * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDimRotated * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDimRotated * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDimRotated * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDimRotated * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDimRotated * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDimRotated * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDimRotated * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDimRotated * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltRoundDistance )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltRoundDistance )( 
            IIcadDimRotated * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltSuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltSuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextPrefix )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextPrefix )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTextSuffix )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTextSuffix )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltTolerancePrecision )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltTolerancePrecision )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressLeadingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressTrailingZeros )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltToleranceSuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltToleranceSuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnits )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Enable);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnits )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsFormat )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsFormat )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsPrecision )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsPrecision )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AltUnitsScale )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Scale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AltUnitsScale )( 
            IIcadDimRotated * This,
            /* [in] */ double Scale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IIcadDimRotated * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IIcadDimRotated * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadDimRotated * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineExtend )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Distance);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineExtend )( 
            IIcadDimRotated * This,
            /* [in] */ double Distance);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IIcadDimRotated * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IIcadDimRotated * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IIcadDimRotated * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Extension);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IIcadDimRotated * This,
            /* [in] */ double Extension);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimFit *Fit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimFit Fit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FractionFormat )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimFractionType *Format);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FractionFormat )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimFractionType Format);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimHorizontalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimHorizontalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinearScaleFactor )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinearScaleFactor )( 
            IIcadDimRotated * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryUnitsPrecision )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryUnitsPrecision )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoundDistance )( 
            IIcadDimRotated * This,
            /* [retval][out] */ double *Round);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoundDistance )( 
            IIcadDimRotated * This,
            /* [in] */ double Round);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroInches )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressZeroFeet )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IIcadDimRotated * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IIcadDimRotated * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Point )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT *vPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Point )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT vPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Point )( 
            IIcadDimRotated * This,
            /* [retval][out] */ VARIANT *vPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Point )( 
            IIcadDimRotated * This,
            /* [in] */ VARIANT vPoint);
        
        END_INTERFACE
    } IIcadDimRotatedVtbl;

    interface IIcadDimRotated
    {
        CONST_VTBL struct IIcadDimRotatedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDimRotated_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDimRotated_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDimRotated_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDimRotated_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDimRotated_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDimRotated_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDimRotated_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDimRotated_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDimRotated_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDimRotated_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDimRotated_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDimRotated_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDimRotated__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDimRotated_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDimRotated_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDimRotated_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDimRotated_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDimRotated_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDimRotated_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDimRotated_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDimRotated_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDimRotated_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDimRotated_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDimRotated_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDimRotated_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDimRotated_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDimRotated_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimRotated_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDimRotated_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDimRotated_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDimRotated_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDimRotated_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDimRotated_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDimRotated_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDimRotated_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDimRotated_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDimRotated_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDimRotated_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDimRotated_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDimRotated_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDimRotated_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDimRotated_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDimRotated_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDimRotated_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDimRotated_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDimRotated_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDimRotated_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDimRotated_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDimRotated_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDimRotated_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDimRotated_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimRotated_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDimRotated_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimRotated_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDimRotated_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimRotated_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDimRotated_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDimRotated_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDimRotated_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDimRotated_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDimRotated_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDimRotated_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDimRotated_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRotated_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRotated_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDimRotated_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDimRotated_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRotated_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimRotated_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDimRotated_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDimRotated_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDimRotated_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDimRotated_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDimRotated_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDimRotated_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDimRotated_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDimRotated_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDimRotated_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDimRotated_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDimRotated_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDimRotated_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDimRotated_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDimRotated_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDimRotated_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDimRotated_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDimRotated_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDimRotated_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDimRotated_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDimRotated_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDimRotated_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDimRotated_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimRotated_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDimRotated_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimRotated_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDimRotated_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimRotated_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDimRotated_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimRotated_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDimRotated_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRotated_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRotated_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimRotated_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDimRotated_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDimRotated_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDimRotated_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDimRotated_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDimRotated_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDimRotated_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 


#define IIcadDimRotated_get_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_AltRoundDistance(This,Round) ) 

#define IIcadDimRotated_put_AltRoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_AltRoundDistance(This,Round) ) 

#define IIcadDimRotated_get_AltSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRotated_put_AltSuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_AltSuppressLeadingZeros(This,Suppress) ) 

#define IIcadDimRotated_get_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_put_AltSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_get_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_put_AltSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_get_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_put_AltSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_get_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimRotated_put_AltTextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_AltTextPrefix(This,PrefixString) ) 

#define IIcadDimRotated_get_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimRotated_put_AltTextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_AltTextSuffix(This,SuffixString) ) 

#define IIcadDimRotated_get_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimRotated_put_AltTolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltTolerancePrecision(This,Precision) ) 

#define IIcadDimRotated_get_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRotated_put_AltToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDimRotated_get_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_put_AltToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDimRotated_get_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_put_AltToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_get_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_put_AltToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_AltToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_get_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> get_AltUnits(This,Enable) ) 

#define IIcadDimRotated_put_AltUnits(This,Enable)	\
    ( (This)->lpVtbl -> put_AltUnits(This,Enable) ) 

#define IIcadDimRotated_get_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_AltUnitsFormat(This,Units) ) 

#define IIcadDimRotated_put_AltUnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_AltUnitsFormat(This,Units) ) 

#define IIcadDimRotated_get_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimRotated_put_AltUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_AltUnitsPrecision(This,Precision) ) 

#define IIcadDimRotated_get_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> get_AltUnitsScale(This,Scale) ) 

#define IIcadDimRotated_put_AltUnitsScale(This,Scale)	\
    ( (This)->lpVtbl -> put_AltUnitsScale(This,Scale) ) 

#define IIcadDimRotated_get_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimRotated_put_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName) ) 

#define IIcadDimRotated_get_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimRotated_put_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDimRotated_get_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimRotated_put_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName) ) 

#define IIcadDimRotated_get_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimRotated_put_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDimRotated_get_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,Color) ) 

#define IIcadDimRotated_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadDimRotated_get_DimensionLineExtend(This,Distance)	\
    ( (This)->lpVtbl -> get_DimensionLineExtend(This,Distance) ) 

#define IIcadDimRotated_put_DimensionLineExtend(This,Distance)	\
    ( (This)->lpVtbl -> put_DimensionLineExtend(This,Distance) ) 

#define IIcadDimRotated_get_DimLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine1Suppress(This,Supress) ) 

#define IIcadDimRotated_put_DimLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine1Suppress(This,Suppress) ) 

#define IIcadDimRotated_get_DimLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine2Suppress(This,Supress) ) 

#define IIcadDimRotated_put_DimLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine2Suppress(This,Suppress) ) 

#define IIcadDimRotated_get_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_DimLineInside(This,Inside) ) 

#define IIcadDimRotated_put_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_DimLineInside(This,Inside) ) 

#define IIcadDimRotated_get_DimensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_DimensionLineWeight(This,pLineweight) ) 

#define IIcadDimRotated_put_DimensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_DimensionLineWeight(This,Lineweight) ) 

#define IIcadDimRotated_get_ExtensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_ExtensionLineWeight(This,pLineweight) ) 

#define IIcadDimRotated_put_ExtensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_ExtensionLineWeight(This,Lineweight) ) 

#define IIcadDimRotated_get_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_ExtensionLineColor(This,Color) ) 

#define IIcadDimRotated_put_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_ExtensionLineColor(This,Color) ) 

#define IIcadDimRotated_get_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> get_ExtensionLineExtend(This,Extension) ) 

#define IIcadDimRotated_put_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> put_ExtensionLineExtend(This,Extension) ) 

#define IIcadDimRotated_get_ExtLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine1Suppress(This,Supress) ) 

#define IIcadDimRotated_put_ExtLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine1Suppress(This,Suppress) ) 

#define IIcadDimRotated_get_ExtLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine2Suppress(This,Supress) ) 

#define IIcadDimRotated_put_ExtLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine2Suppress(This,Suppress) ) 

#define IIcadDimRotated_get_Fit(This,Fit)	\
    ( (This)->lpVtbl -> get_Fit(This,Fit) ) 

#define IIcadDimRotated_put_Fit(This,Fit)	\
    ( (This)->lpVtbl -> put_Fit(This,Fit) ) 

#define IIcadDimRotated_get_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_ForceLineInside(This,Inside) ) 

#define IIcadDimRotated_put_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_ForceLineInside(This,Inside) ) 

#define IIcadDimRotated_get_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> get_FractionFormat(This,Format) ) 

#define IIcadDimRotated_put_FractionFormat(This,Format)	\
    ( (This)->lpVtbl -> put_FractionFormat(This,Format) ) 

#define IIcadDimRotated_get_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_HorizontalTextPosition(This,Position) ) 

#define IIcadDimRotated_put_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_HorizontalTextPosition(This,Position) ) 

#define IIcadDimRotated_get_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRotated_put_LinearScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_LinearScaleFactor(This,ScaleFactor) ) 

#define IIcadDimRotated_get_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimRotated_put_PrimaryUnitsPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_PrimaryUnitsPrecision(This,Precision) ) 

#define IIcadDimRotated_get_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> get_RoundDistance(This,Round) ) 

#define IIcadDimRotated_put_RoundDistance(This,Round)	\
    ( (This)->lpVtbl -> put_RoundDistance(This,Round) ) 

#define IIcadDimRotated_get_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_put_SuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroInches(This,Supress) ) 

#define IIcadDimRotated_get_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_put_SuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressZeroFeet(This,Supress) ) 

#define IIcadDimRotated_get_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> get_TextInside(This,Inside) ) 

#define IIcadDimRotated_put_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> put_TextInside(This,Inside) ) 

#define IIcadDimRotated_get_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextInsideAlign(This,Alignment) ) 

#define IIcadDimRotated_put_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextInsideAlign(This,Alignment) ) 

#define IIcadDimRotated_get_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimRotated_put_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextOutsideAlign(This,Alignment) ) 

#define IIcadDimRotated_get_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TextPrecision(This,Precision) ) 

#define IIcadDimRotated_put_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TextPrecision(This,Precision) ) 

#define IIcadDimRotated_get_ExtLine1Point(This,vPoint)	\
    ( (This)->lpVtbl -> get_ExtLine1Point(This,vPoint) ) 

#define IIcadDimRotated_put_ExtLine1Point(This,vPoint)	\
    ( (This)->lpVtbl -> put_ExtLine1Point(This,vPoint) ) 

#define IIcadDimRotated_get_ExtLine2Point(This,vPoint)	\
    ( (This)->lpVtbl -> get_ExtLine2Point(This,vPoint) ) 

#define IIcadDimRotated_put_ExtLine2Point(This,vPoint)	\
    ( (This)->lpVtbl -> put_ExtLine2Point(This,vPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltTextSuffix_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ BSTR *SuffixString);


void __RPC_STUB IIcadDimRotated_get_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltTextSuffix_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ BSTR SuffixString);


void __RPC_STUB IIcadDimRotated_put_AltTextSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltTolerancePrecision_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRotated_get_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltTolerancePrecision_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRotated_put_AltTolerancePrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltToleranceSuppressLeadingZeros_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRotated_put_AltToleranceSuppressLeadingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltToleranceSuppressTrailingZeros_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRotated_put_AltToleranceSuppressTrailingZeros_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltToleranceSuppressZeroInches_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRotated_put_AltToleranceSuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltToleranceSuppressZeroFeet_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRotated_put_AltToleranceSuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltUnits_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Enable);


void __RPC_STUB IIcadDimRotated_get_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltUnits_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IIcadDimRotated_put_AltUnits_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltUnitsFormat_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimUnits *Units);


void __RPC_STUB IIcadDimRotated_get_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltUnitsFormat_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimUnits Units);


void __RPC_STUB IIcadDimRotated_put_AltUnitsFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltUnitsPrecision_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRotated_get_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltUnitsPrecision_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRotated_put_AltUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_AltUnitsScale_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ double *Scale);


void __RPC_STUB IIcadDimRotated_get_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_AltUnitsScale_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ double Scale);


void __RPC_STUB IIcadDimRotated_put_AltUnitsScale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_Arrowhead1Block_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IIcadDimRotated_get_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_Arrowhead1Block_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IIcadDimRotated_put_Arrowhead1Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_Arrowhead1Type_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);


void __RPC_STUB IIcadDimRotated_get_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_Arrowhead1Type_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimArrowheadType ArrowheadType);


void __RPC_STUB IIcadDimRotated_put_Arrowhead1Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_Arrowhead2Block_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ BSTR *BlockName);


void __RPC_STUB IIcadDimRotated_get_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_Arrowhead2Block_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ BSTR BlockName);


void __RPC_STUB IIcadDimRotated_put_Arrowhead2Block_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_Arrowhead2Type_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);


void __RPC_STUB IIcadDimRotated_get_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_Arrowhead2Type_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimArrowheadType ArrowheadType);


void __RPC_STUB IIcadDimRotated_put_Arrowhead2Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_DimensionLineColor_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimRotated_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_DimensionLineColor_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimRotated_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_DimensionLineExtend_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ double *Distance);


void __RPC_STUB IIcadDimRotated_get_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_DimensionLineExtend_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ double Distance);


void __RPC_STUB IIcadDimRotated_put_DimensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_DimLine1Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_DimLine1Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimRotated_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_DimLine2Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_DimLine2Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimRotated_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_DimLineInside_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimRotated_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_DimLineInside_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimRotated_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_DimensionLineWeight_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimRotated_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_DimensionLineWeight_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimRotated_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ExtensionLineWeight_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDimRotated_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ExtensionLineWeight_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDimRotated_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ExtensionLineColor_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDimRotated_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ExtensionLineColor_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDimRotated_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ExtensionLineExtend_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ double *Extension);


void __RPC_STUB IIcadDimRotated_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ExtensionLineExtend_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ double Extension);


void __RPC_STUB IIcadDimRotated_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ExtLine1Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ExtLine1Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimRotated_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ExtLine2Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ExtLine2Suppress_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDimRotated_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_Fit_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimFit *Fit);


void __RPC_STUB IIcadDimRotated_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_Fit_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimFit Fit);


void __RPC_STUB IIcadDimRotated_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ForceLineInside_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimRotated_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ForceLineInside_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimRotated_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_FractionFormat_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimFractionType *Format);


void __RPC_STUB IIcadDimRotated_get_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_FractionFormat_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimFractionType Format);


void __RPC_STUB IIcadDimRotated_put_FractionFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_HorizontalTextPosition_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimHorizontalJustification *Position);


void __RPC_STUB IIcadDimRotated_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_HorizontalTextPosition_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimHorizontalJustification Position);


void __RPC_STUB IIcadDimRotated_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_LinearScaleFactor_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ double *ScaleFactor);


void __RPC_STUB IIcadDimRotated_get_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_LinearScaleFactor_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ double ScaleFactor);


void __RPC_STUB IIcadDimRotated_put_LinearScaleFactor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_PrimaryUnitsPrecision_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRotated_get_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_PrimaryUnitsPrecision_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRotated_put_PrimaryUnitsPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_RoundDistance_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ double *Round);


void __RPC_STUB IIcadDimRotated_get_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_RoundDistance_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ double Round);


void __RPC_STUB IIcadDimRotated_put_RoundDistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_SuppressZeroInches_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_SuppressZeroInches_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRotated_put_SuppressZeroInches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_SuppressZeroFeet_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDimRotated_get_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_SuppressZeroFeet_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Supress);


void __RPC_STUB IIcadDimRotated_put_SuppressZeroFeet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_TextInside_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDimRotated_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_TextInside_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDimRotated_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_TextInsideAlign_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimRotated_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_TextInsideAlign_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimRotated_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_TextOutsideAlign_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDimRotated_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_TextOutsideAlign_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDimRotated_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_TextPrecision_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDimRotated_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_TextPrecision_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDimRotated_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ExtLine1Point_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT *vPoint);


void __RPC_STUB IIcadDimRotated_get_ExtLine1Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ExtLine1Point_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT vPoint);


void __RPC_STUB IIcadDimRotated_put_ExtLine1Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_get_ExtLine2Point_Proxy( 
    IIcadDimRotated * This,
    /* [retval][out] */ VARIANT *vPoint);


void __RPC_STUB IIcadDimRotated_get_ExtLine2Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDimRotated_put_ExtLine2Point_Proxy( 
    IIcadDimRotated * This,
    /* [in] */ VARIANT vPoint);


void __RPC_STUB IIcadDimRotated_put_ExtLine2Point_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDimRotated_INTERFACE_DEFINED__ */


#ifndef __IIcadDim3PointAngular_INTERFACE_DEFINED__
#define __IIcadDim3PointAngular_INTERFACE_DEFINED__

/* interface IIcadDim3PointAngular */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDim3PointAngular;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9f338359-7023-400e-ab3f-46ca91811615")
    IIcadDim3PointAngular : public IIcadDimension
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AngleFormat( 
            /* [retval][out] */ ZcAngleUnits *Movement) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AngleFormat( 
            /* [in] */ ZcAngleUnits Movement) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AngleVertex( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AngleVertex( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead1Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead1Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Block( 
            /* [retval][out] */ BSTR *BlockName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Block( 
            /* [in] */ BSTR BlockName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arrowhead2Type( 
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Arrowhead2Type( 
            /* [in] */ ZcDimArrowheadType ArrowheadType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineWeight( 
            /* [retval][out] */ ZcLineWeight *pLineweight) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineWeight( 
            /* [in] */ ZcLineWeight Lineweight) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DimLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineColor( 
            /* [retval][out] */ ZcColors *Color) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineColor( 
            /* [in] */ ZcColors Color) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionLineExtend( 
            /* [retval][out] */ double *Extension) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtensionLineExtend( 
            /* [in] */ double Extension) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1StartPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1StartPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1EndPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1EndPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine1Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine1Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2EndPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2EndPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2StartPoint( 
            /* [retval][out] */ VARIANT *pVarPoint) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2StartPoint( 
            /* [in] */ VARIANT varPoint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExtLine2Suppress( 
            /* [retval][out] */ VARIANT_BOOL *Supress) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExtLine2Suppress( 
            /* [in] */ VARIANT_BOOL Suppress) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Fit( 
            /* [retval][out] */ ZcDimFit *Fit) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Fit( 
            /* [in] */ ZcDimFit Fit) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ForceLineInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ForceLineInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalTextPosition( 
            /* [retval][out] */ ZcDimHorizontalJustification *Position) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalTextPosition( 
            /* [in] */ ZcDimHorizontalJustification Position) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInside( 
            /* [retval][out] */ VARIANT_BOOL *Inside) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInside( 
            /* [in] */ VARIANT_BOOL Inside) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextInsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextInsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextOutsideAlign( 
            /* [retval][out] */ VARIANT_BOOL *Alignment) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextOutsideAlign( 
            /* [in] */ VARIANT_BOOL Alignment) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextPrecision( 
            /* [retval][out] */ ZcDimPrecision *Precision) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextPrecision( 
            /* [in] */ ZcDimPrecision Precision) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDim3PointAngularVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDim3PointAngular * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDim3PointAngular * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDim3PointAngular * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDim3PointAngular * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDim3PointAngular * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDim3PointAngular * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDim3PointAngular * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Handle )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *pstrHandle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectID )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ long *plngID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *_handitem )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ long *pHanditem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetXData )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR AppName,
            /* [out][in] */ VARIANT *TypeArray,
            /* [out][in] */ VARIANT *DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetXData )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT TypeArray,
            /* [in] */ VARIANT DataArray);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IIcadDim3PointAngular * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcColors *pColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityName )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *pEntName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntityType )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcEntityType *pType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layer )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *pLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Layer )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR Layer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetype )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *pLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Linetype )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR Linetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinetypeScale )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *LinetypeScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LinetypeScale )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double LinetypeScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *pVisible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ IIcadHyperlinks **ppHyperlinks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrueColor )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ IIcadAcCmColor **ppAcCmColor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TrueColor )( 
            IIcadDim3PointAngular * This,
            /* [in] */ IIcadAcCmColor *pAcCmColor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayPolar )( 
            IIcadDim3PointAngular * This,
            /* [in] */ int NumberOfObjects,
            /* [in] */ double IncludedAngle,
            /* [in] */ VARIANT varCenterPoint,
            /* [optional][in] */ VARIANT varPointOnAxis,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL RotateObjects,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ArrayRectangular )( 
            IIcadDim3PointAngular * This,
            /* [in] */ int NumberOfRows,
            /* [in] */ int NumberOfColumns,
            /* [in] */ int NumberOfLevels,
            /* [in] */ double GapBetweenRows,
            /* [in] */ double GapBetweenColumns,
            /* [optional][in] */ double GapBetweenLevels,
            /* [retval][out] */ IIcadSelectionSet **ppObjects);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ IIcadEntity **ppCopy);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Erase )( 
            IIcadDim3PointAngular * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBoundingBox )( 
            IIcadDim3PointAngular * This,
            /* [out][in] */ VARIANT *pVarMinPoint,
            /* [out][in] */ VARIANT *pVarMaxPoint,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOnlyVisible);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Highlight )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL HighlightFlag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IntersectWith )( 
            IIcadDim3PointAngular * This,
            /* [in] */ IDispatch *IntersectingObject,
            /* [in] */ ZcIntersectOptions Option,
            /* [retval][out] */ VARIANT *pVarIntersectingPoints);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Mirror3D )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL MakeCopy,
            /* [retval][out] */ IIcadEntity **MirroredEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Rotate3D )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ double RotationAngle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ScaleEntity )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varBasePoint,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransformBy )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varMatrix);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IIcadDim3PointAngular * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lineweight )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Lineweight )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArrowheadSize )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *ArrowheadSize);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ArrowheadSize )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double ArrowheadSize);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *DecimalSeparator);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR DecimalSeparator);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineOffset )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Offset);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineOffset )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Offset);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Measurement )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Measurement )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Value);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Normal )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *pVarExtrusionDirection);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Normal )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varExtrusionDirection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleFactor )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *ScaleFactor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleFactor )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double ScaleFactor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleName )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StyleName )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressLeadingZeros )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressLeadingZeros )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressTrailingZeros )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressTrailingZeros )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextColor )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextColor )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextGap )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Gap);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextGap )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Gap);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextHeight )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Height);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextHeight )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Height);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextMovement )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimTextMovement *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextMovement )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimTextMovement Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPosition )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *pVarPosition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPosition )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPosition);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOverride )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOverride )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrefix )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *PrefixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrefix )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR PrefixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextString )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *String);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextString )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR String);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextRotation )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Rotation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextRotation )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Rotation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyle )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *StyleName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextStyle )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR StyleName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextSuffix )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *SuffixString);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextSuffix )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR SuffixString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceDisplay )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimToleranceMethod *TolDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceDisplay )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimToleranceMethod TolDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceHeightScale )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *HeightScale);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceHeightScale )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double HeightScale);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceJustification )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimToleranceJustify *TolJustify);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceJustification )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimToleranceJustify TolJustify);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceLowerLimit )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceLowerLimit )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressLeadingZeros )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressLeadingZeros )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressTrailingZeros )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressTrailingZeros )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroInches )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroInches )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceSuppressZeroFeet )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceSuppressZeroFeet )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Supress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToleranceUpperLimit )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Limit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToleranceUpperLimit )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Limit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TolerancePrecision )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TolerancePrecision )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimPrecision Precision);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnitsFormat )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimLUnits *Units);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UnitsFormat )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimLUnits Units);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalTextPosition )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimVerticalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalTextPosition )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimVerticalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleFormat )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcAngleUnits *Movement);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AngleFormat )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcAngleUnits Movement);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleVertex )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AngleVertex )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Block )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Block )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead1Type )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead1Type )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Block )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ BSTR *BlockName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Block )( 
            IIcadDim3PointAngular * This,
            /* [in] */ BSTR BlockName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arrowhead2Type )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimArrowheadType *ArrowheadType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arrowhead2Type )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimArrowheadType ArrowheadType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineColor )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineColor )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionLineWeight )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimensionLineWeight )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineWeight )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcLineWeight *pLineweight);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineWeight )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcLineWeight Lineweight);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine1Suppress )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine1Suppress )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLine2Suppress )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLine2Suppress )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimLineInside )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DimLineInside )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineColor )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcColors *Color);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineColor )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcColors Color);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionLineExtend )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ double *Extension);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtensionLineExtend )( 
            IIcadDim3PointAngular * This,
            /* [in] */ double Extension);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1StartPoint )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1StartPoint )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1EndPoint )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1EndPoint )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine1Suppress )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine1Suppress )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2EndPoint )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2EndPoint )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2StartPoint )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT *pVarPoint);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2StartPoint )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT varPoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtLine2Suppress )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Supress);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExtLine2Suppress )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Suppress);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Fit )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimFit *Fit);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Fit )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimFit Fit);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceLineInside )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceLineInside )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalTextPosition )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimHorizontalJustification *Position);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalTextPosition )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimHorizontalJustification Position);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInside )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Inside);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInside )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Inside);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextInsideAlign )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextInsideAlign )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextOutsideAlign )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ VARIANT_BOOL *Alignment);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextOutsideAlign )( 
            IIcadDim3PointAngular * This,
            /* [in] */ VARIANT_BOOL Alignment);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextPrecision )( 
            IIcadDim3PointAngular * This,
            /* [retval][out] */ ZcDimPrecision *Precision);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextPrecision )( 
            IIcadDim3PointAngular * This,
            /* [in] */ ZcDimPrecision Precision);
        
        END_INTERFACE
    } IIcadDim3PointAngularVtbl;

    interface IIcadDim3PointAngular
    {
        CONST_VTBL struct IIcadDim3PointAngularVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDim3PointAngular_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDim3PointAngular_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDim3PointAngular_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDim3PointAngular_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDim3PointAngular_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDim3PointAngular_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDim3PointAngular_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDim3PointAngular_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDim3PointAngular_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadDim3PointAngular_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDim3PointAngular_get_Handle(This,pstrHandle)	\
    ( (This)->lpVtbl -> get_Handle(This,pstrHandle) ) 

#define IIcadDim3PointAngular_get_ObjectID(This,plngID)	\
    ( (This)->lpVtbl -> get_ObjectID(This,plngID) ) 

#define IIcadDim3PointAngular__handitem(This,pHanditem)	\
    ( (This)->lpVtbl -> _handitem(This,pHanditem) ) 

#define IIcadDim3PointAngular_GetXData(This,AppName,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> GetXData(This,AppName,TypeArray,DataArray) ) 

#define IIcadDim3PointAngular_SetXData(This,TypeArray,DataArray)	\
    ( (This)->lpVtbl -> SetXData(This,TypeArray,DataArray) ) 

#define IIcadDim3PointAngular_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IIcadDim3PointAngular_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadDim3PointAngular_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 


#define IIcadDim3PointAngular_get_Color(This,pColor)	\
    ( (This)->lpVtbl -> get_Color(This,pColor) ) 

#define IIcadDim3PointAngular_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define IIcadDim3PointAngular_get_EntityName(This,pEntName)	\
    ( (This)->lpVtbl -> get_EntityName(This,pEntName) ) 

#define IIcadDim3PointAngular_get_EntityType(This,pType)	\
    ( (This)->lpVtbl -> get_EntityType(This,pType) ) 

#define IIcadDim3PointAngular_get_Layer(This,pLayer)	\
    ( (This)->lpVtbl -> get_Layer(This,pLayer) ) 

#define IIcadDim3PointAngular_put_Layer(This,Layer)	\
    ( (This)->lpVtbl -> put_Layer(This,Layer) ) 

#define IIcadDim3PointAngular_get_Linetype(This,pLinetype)	\
    ( (This)->lpVtbl -> get_Linetype(This,pLinetype) ) 

#define IIcadDim3PointAngular_put_Linetype(This,Linetype)	\
    ( (This)->lpVtbl -> put_Linetype(This,Linetype) ) 

#define IIcadDim3PointAngular_get_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> get_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDim3PointAngular_put_LinetypeScale(This,LinetypeScale)	\
    ( (This)->lpVtbl -> put_LinetypeScale(This,LinetypeScale) ) 

#define IIcadDim3PointAngular_get_Visible(This,pVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pVisible) ) 

#define IIcadDim3PointAngular_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define IIcadDim3PointAngular_get_Hyperlinks(This,ppHyperlinks)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,ppHyperlinks) ) 

#define IIcadDim3PointAngular_get_TrueColor(This,ppAcCmColor)	\
    ( (This)->lpVtbl -> get_TrueColor(This,ppAcCmColor) ) 

#define IIcadDim3PointAngular_put_TrueColor(This,pAcCmColor)	\
    ( (This)->lpVtbl -> put_TrueColor(This,pAcCmColor) ) 

#define IIcadDim3PointAngular_ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects)	\
    ( (This)->lpVtbl -> ArrayPolar(This,NumberOfObjects,IncludedAngle,varCenterPoint,varPointOnAxis,RotateObjects,ppObjects) ) 

#define IIcadDim3PointAngular_ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects)	\
    ( (This)->lpVtbl -> ArrayRectangular(This,NumberOfRows,NumberOfColumns,NumberOfLevels,GapBetweenRows,GapBetweenColumns,GapBetweenLevels,ppObjects) ) 

#define IIcadDim3PointAngular_Copy(This,ppCopy)	\
    ( (This)->lpVtbl -> Copy(This,ppCopy) ) 

#define IIcadDim3PointAngular_Erase(This)	\
    ( (This)->lpVtbl -> Erase(This) ) 

#define IIcadDim3PointAngular_GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible)	\
    ( (This)->lpVtbl -> GetBoundingBox(This,pVarMinPoint,pVarMaxPoint,bOnlyVisible) ) 

#define IIcadDim3PointAngular_Highlight(This,HighlightFlag)	\
    ( (This)->lpVtbl -> Highlight(This,HighlightFlag) ) 

#define IIcadDim3PointAngular_IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints)	\
    ( (This)->lpVtbl -> IntersectWith(This,IntersectingObject,Option,pVarIntersectingPoints) ) 

#define IIcadDim3PointAngular_Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror(This,varPoint1,varPoint2,MakeCopy,MirroredEntity) ) 

#define IIcadDim3PointAngular_Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity)	\
    ( (This)->lpVtbl -> Mirror3D(This,varPoint1,varPoint2,varPoint3,MakeCopy,MirroredEntity) ) 

#define IIcadDim3PointAngular_Move(This,varPoint1,varPoint2)	\
    ( (This)->lpVtbl -> Move(This,varPoint1,varPoint2) ) 

#define IIcadDim3PointAngular_Rotate(This,varBasePoint,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate(This,varBasePoint,RotationAngle) ) 

#define IIcadDim3PointAngular_Rotate3D(This,varPoint1,varPoint2,RotationAngle)	\
    ( (This)->lpVtbl -> Rotate3D(This,varPoint1,varPoint2,RotationAngle) ) 

#define IIcadDim3PointAngular_ScaleEntity(This,varBasePoint,ScaleFactor)	\
    ( (This)->lpVtbl -> ScaleEntity(This,varBasePoint,ScaleFactor) ) 

#define IIcadDim3PointAngular_TransformBy(This,varMatrix)	\
    ( (This)->lpVtbl -> TransformBy(This,varMatrix) ) 

#define IIcadDim3PointAngular_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define IIcadDim3PointAngular_get_Lineweight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_Lineweight(This,pLineweight) ) 

#define IIcadDim3PointAngular_put_Lineweight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_Lineweight(This,Lineweight) ) 


#define IIcadDim3PointAngular_get_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> get_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDim3PointAngular_put_ArrowheadSize(This,ArrowheadSize)	\
    ( (This)->lpVtbl -> put_ArrowheadSize(This,ArrowheadSize) ) 

#define IIcadDim3PointAngular_get_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDim3PointAngular_put_DecimalSeparator(This,DecimalSeparator)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,DecimalSeparator) ) 

#define IIcadDim3PointAngular_get_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> get_ExtensionLineOffset(This,Offset) ) 

#define IIcadDim3PointAngular_put_ExtensionLineOffset(This,Offset)	\
    ( (This)->lpVtbl -> put_ExtensionLineOffset(This,Offset) ) 

#define IIcadDim3PointAngular_get_Measurement(This,Value)	\
    ( (This)->lpVtbl -> get_Measurement(This,Value) ) 

#define IIcadDim3PointAngular_put_Measurement(This,Value)	\
    ( (This)->lpVtbl -> put_Measurement(This,Value) ) 

#define IIcadDim3PointAngular_get_Normal(This,pVarExtrusionDirection)	\
    ( (This)->lpVtbl -> get_Normal(This,pVarExtrusionDirection) ) 

#define IIcadDim3PointAngular_put_Normal(This,varExtrusionDirection)	\
    ( (This)->lpVtbl -> put_Normal(This,varExtrusionDirection) ) 

#define IIcadDim3PointAngular_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define IIcadDim3PointAngular_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define IIcadDim3PointAngular_get_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> get_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDim3PointAngular_put_ScaleFactor(This,ScaleFactor)	\
    ( (This)->lpVtbl -> put_ScaleFactor(This,ScaleFactor) ) 

#define IIcadDim3PointAngular_get_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> get_StyleName(This,StyleName) ) 

#define IIcadDim3PointAngular_put_StyleName(This,StyleName)	\
    ( (This)->lpVtbl -> put_StyleName(This,StyleName) ) 

#define IIcadDim3PointAngular_get_SuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressLeadingZeros(This,Supress) ) 

#define IIcadDim3PointAngular_put_SuppressLeadingZeros(This,Suppress)	\
    ( (This)->lpVtbl -> put_SuppressLeadingZeros(This,Suppress) ) 

#define IIcadDim3PointAngular_get_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDim3PointAngular_put_SuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_SuppressTrailingZeros(This,Supress) ) 

#define IIcadDim3PointAngular_get_TextColor(This,Color)	\
    ( (This)->lpVtbl -> get_TextColor(This,Color) ) 

#define IIcadDim3PointAngular_put_TextColor(This,Color)	\
    ( (This)->lpVtbl -> put_TextColor(This,Color) ) 

#define IIcadDim3PointAngular_get_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> get_TextGap(This,Gap) ) 

#define IIcadDim3PointAngular_put_TextGap(This,Gap)	\
    ( (This)->lpVtbl -> put_TextGap(This,Gap) ) 

#define IIcadDim3PointAngular_get_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> get_TextHeight(This,Height) ) 

#define IIcadDim3PointAngular_put_TextHeight(This,Height)	\
    ( (This)->lpVtbl -> put_TextHeight(This,Height) ) 

#define IIcadDim3PointAngular_get_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> get_TextMovement(This,Movement) ) 

#define IIcadDim3PointAngular_put_TextMovement(This,Movement)	\
    ( (This)->lpVtbl -> put_TextMovement(This,Movement) ) 

#define IIcadDim3PointAngular_get_TextPosition(This,pVarPosition)	\
    ( (This)->lpVtbl -> get_TextPosition(This,pVarPosition) ) 

#define IIcadDim3PointAngular_put_TextPosition(This,varPosition)	\
    ( (This)->lpVtbl -> put_TextPosition(This,varPosition) ) 

#define IIcadDim3PointAngular_get_TextOverride(This,String)	\
    ( (This)->lpVtbl -> get_TextOverride(This,String) ) 

#define IIcadDim3PointAngular_put_TextOverride(This,String)	\
    ( (This)->lpVtbl -> put_TextOverride(This,String) ) 

#define IIcadDim3PointAngular_get_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> get_TextPrefix(This,PrefixString) ) 

#define IIcadDim3PointAngular_put_TextPrefix(This,PrefixString)	\
    ( (This)->lpVtbl -> put_TextPrefix(This,PrefixString) ) 

#define IIcadDim3PointAngular_get_TextString(This,String)	\
    ( (This)->lpVtbl -> get_TextString(This,String) ) 

#define IIcadDim3PointAngular_put_TextString(This,String)	\
    ( (This)->lpVtbl -> put_TextString(This,String) ) 

#define IIcadDim3PointAngular_get_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_TextRotation(This,Rotation) ) 

#define IIcadDim3PointAngular_put_TextRotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_TextRotation(This,Rotation) ) 

#define IIcadDim3PointAngular_get_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> get_TextStyle(This,StyleName) ) 

#define IIcadDim3PointAngular_put_TextStyle(This,StyleName)	\
    ( (This)->lpVtbl -> put_TextStyle(This,StyleName) ) 

#define IIcadDim3PointAngular_get_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> get_TextSuffix(This,SuffixString) ) 

#define IIcadDim3PointAngular_put_TextSuffix(This,SuffixString)	\
    ( (This)->lpVtbl -> put_TextSuffix(This,SuffixString) ) 

#define IIcadDim3PointAngular_get_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> get_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDim3PointAngular_put_ToleranceDisplay(This,TolDisplay)	\
    ( (This)->lpVtbl -> put_ToleranceDisplay(This,TolDisplay) ) 

#define IIcadDim3PointAngular_get_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> get_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDim3PointAngular_put_ToleranceHeightScale(This,HeightScale)	\
    ( (This)->lpVtbl -> put_ToleranceHeightScale(This,HeightScale) ) 

#define IIcadDim3PointAngular_get_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> get_ToleranceJustification(This,TolJustify) ) 

#define IIcadDim3PointAngular_put_ToleranceJustification(This,TolJustify)	\
    ( (This)->lpVtbl -> put_ToleranceJustification(This,TolJustify) ) 

#define IIcadDim3PointAngular_get_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDim3PointAngular_put_ToleranceLowerLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceLowerLimit(This,Limit) ) 

#define IIcadDim3PointAngular_get_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDim3PointAngular_put_ToleranceSuppressLeadingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressLeadingZeros(This,Supress) ) 

#define IIcadDim3PointAngular_get_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDim3PointAngular_put_ToleranceSuppressTrailingZeros(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressTrailingZeros(This,Supress) ) 

#define IIcadDim3PointAngular_get_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDim3PointAngular_put_ToleranceSuppressZeroInches(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroInches(This,Supress) ) 

#define IIcadDim3PointAngular_get_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> get_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDim3PointAngular_put_ToleranceSuppressZeroFeet(This,Supress)	\
    ( (This)->lpVtbl -> put_ToleranceSuppressZeroFeet(This,Supress) ) 

#define IIcadDim3PointAngular_get_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> get_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDim3PointAngular_put_ToleranceUpperLimit(This,Limit)	\
    ( (This)->lpVtbl -> put_ToleranceUpperLimit(This,Limit) ) 

#define IIcadDim3PointAngular_get_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TolerancePrecision(This,Precision) ) 

#define IIcadDim3PointAngular_put_TolerancePrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TolerancePrecision(This,Precision) ) 

#define IIcadDim3PointAngular_get_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> get_UnitsFormat(This,Units) ) 

#define IIcadDim3PointAngular_put_UnitsFormat(This,Units)	\
    ( (This)->lpVtbl -> put_UnitsFormat(This,Units) ) 

#define IIcadDim3PointAngular_get_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_VerticalTextPosition(This,Position) ) 

#define IIcadDim3PointAngular_put_VerticalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_VerticalTextPosition(This,Position) ) 


#define IIcadDim3PointAngular_get_AngleFormat(This,Movement)	\
    ( (This)->lpVtbl -> get_AngleFormat(This,Movement) ) 

#define IIcadDim3PointAngular_put_AngleFormat(This,Movement)	\
    ( (This)->lpVtbl -> put_AngleFormat(This,Movement) ) 

#define IIcadDim3PointAngular_get_AngleVertex(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_AngleVertex(This,pVarPoint) ) 

#define IIcadDim3PointAngular_put_AngleVertex(This,varPoint)	\
    ( (This)->lpVtbl -> put_AngleVertex(This,varPoint) ) 

#define IIcadDim3PointAngular_get_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead1Block(This,BlockName) ) 

#define IIcadDim3PointAngular_put_Arrowhead1Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead1Block(This,BlockName) ) 

#define IIcadDim3PointAngular_get_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDim3PointAngular_put_Arrowhead1Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead1Type(This,ArrowheadType) ) 

#define IIcadDim3PointAngular_get_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> get_Arrowhead2Block(This,BlockName) ) 

#define IIcadDim3PointAngular_put_Arrowhead2Block(This,BlockName)	\
    ( (This)->lpVtbl -> put_Arrowhead2Block(This,BlockName) ) 

#define IIcadDim3PointAngular_get_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> get_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDim3PointAngular_put_Arrowhead2Type(This,ArrowheadType)	\
    ( (This)->lpVtbl -> put_Arrowhead2Type(This,ArrowheadType) ) 

#define IIcadDim3PointAngular_get_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_DimensionLineColor(This,Color) ) 

#define IIcadDim3PointAngular_put_DimensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_DimensionLineColor(This,Color) ) 

#define IIcadDim3PointAngular_get_DimensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_DimensionLineWeight(This,pLineweight) ) 

#define IIcadDim3PointAngular_put_DimensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_DimensionLineWeight(This,Lineweight) ) 

#define IIcadDim3PointAngular_get_ExtensionLineWeight(This,pLineweight)	\
    ( (This)->lpVtbl -> get_ExtensionLineWeight(This,pLineweight) ) 

#define IIcadDim3PointAngular_put_ExtensionLineWeight(This,Lineweight)	\
    ( (This)->lpVtbl -> put_ExtensionLineWeight(This,Lineweight) ) 

#define IIcadDim3PointAngular_get_DimLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine1Suppress(This,Supress) ) 

#define IIcadDim3PointAngular_put_DimLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine1Suppress(This,Suppress) ) 

#define IIcadDim3PointAngular_get_DimLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_DimLine2Suppress(This,Supress) ) 

#define IIcadDim3PointAngular_put_DimLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_DimLine2Suppress(This,Suppress) ) 

#define IIcadDim3PointAngular_get_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_DimLineInside(This,Inside) ) 

#define IIcadDim3PointAngular_put_DimLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_DimLineInside(This,Inside) ) 

#define IIcadDim3PointAngular_get_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> get_ExtensionLineColor(This,Color) ) 

#define IIcadDim3PointAngular_put_ExtensionLineColor(This,Color)	\
    ( (This)->lpVtbl -> put_ExtensionLineColor(This,Color) ) 

#define IIcadDim3PointAngular_get_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> get_ExtensionLineExtend(This,Extension) ) 

#define IIcadDim3PointAngular_put_ExtensionLineExtend(This,Extension)	\
    ( (This)->lpVtbl -> put_ExtensionLineExtend(This,Extension) ) 

#define IIcadDim3PointAngular_get_ExtLine1StartPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_ExtLine1StartPoint(This,pVarPoint) ) 

#define IIcadDim3PointAngular_put_ExtLine1StartPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_ExtLine1StartPoint(This,varPoint) ) 

#define IIcadDim3PointAngular_get_ExtLine1EndPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_ExtLine1EndPoint(This,pVarPoint) ) 

#define IIcadDim3PointAngular_put_ExtLine1EndPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_ExtLine1EndPoint(This,varPoint) ) 

#define IIcadDim3PointAngular_get_ExtLine1Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine1Suppress(This,Supress) ) 

#define IIcadDim3PointAngular_put_ExtLine1Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine1Suppress(This,Suppress) ) 

#define IIcadDim3PointAngular_get_ExtLine2EndPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_ExtLine2EndPoint(This,pVarPoint) ) 

#define IIcadDim3PointAngular_put_ExtLine2EndPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_ExtLine2EndPoint(This,varPoint) ) 

#define IIcadDim3PointAngular_get_ExtLine2StartPoint(This,pVarPoint)	\
    ( (This)->lpVtbl -> get_ExtLine2StartPoint(This,pVarPoint) ) 

#define IIcadDim3PointAngular_put_ExtLine2StartPoint(This,varPoint)	\
    ( (This)->lpVtbl -> put_ExtLine2StartPoint(This,varPoint) ) 

#define IIcadDim3PointAngular_get_ExtLine2Suppress(This,Supress)	\
    ( (This)->lpVtbl -> get_ExtLine2Suppress(This,Supress) ) 

#define IIcadDim3PointAngular_put_ExtLine2Suppress(This,Suppress)	\
    ( (This)->lpVtbl -> put_ExtLine2Suppress(This,Suppress) ) 

#define IIcadDim3PointAngular_get_Fit(This,Fit)	\
    ( (This)->lpVtbl -> get_Fit(This,Fit) ) 

#define IIcadDim3PointAngular_put_Fit(This,Fit)	\
    ( (This)->lpVtbl -> put_Fit(This,Fit) ) 

#define IIcadDim3PointAngular_get_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> get_ForceLineInside(This,Inside) ) 

#define IIcadDim3PointAngular_put_ForceLineInside(This,Inside)	\
    ( (This)->lpVtbl -> put_ForceLineInside(This,Inside) ) 

#define IIcadDim3PointAngular_get_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> get_HorizontalTextPosition(This,Position) ) 

#define IIcadDim3PointAngular_put_HorizontalTextPosition(This,Position)	\
    ( (This)->lpVtbl -> put_HorizontalTextPosition(This,Position) ) 

#define IIcadDim3PointAngular_get_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> get_TextInside(This,Inside) ) 

#define IIcadDim3PointAngular_put_TextInside(This,Inside)	\
    ( (This)->lpVtbl -> put_TextInside(This,Inside) ) 

#define IIcadDim3PointAngular_get_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextInsideAlign(This,Alignment) ) 

#define IIcadDim3PointAngular_put_TextInsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextInsideAlign(This,Alignment) ) 

#define IIcadDim3PointAngular_get_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> get_TextOutsideAlign(This,Alignment) ) 

#define IIcadDim3PointAngular_put_TextOutsideAlign(This,Alignment)	\
    ( (This)->lpVtbl -> put_TextOutsideAlign(This,Alignment) ) 

#define IIcadDim3PointAngular_get_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> get_TextPrecision(This,Precision) ) 

#define IIcadDim3PointAngular_put_TextPrecision(This,Precision)	\
    ( (This)->lpVtbl -> put_TextPrecision(This,Precision) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_DimensionLineColor_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDim3PointAngular_get_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_DimensionLineColor_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDim3PointAngular_put_DimensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_DimensionLineWeight_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDim3PointAngular_get_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_DimensionLineWeight_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDim3PointAngular_put_DimensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtensionLineWeight_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ ZcLineWeight *pLineweight);


void __RPC_STUB IIcadDim3PointAngular_get_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtensionLineWeight_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ ZcLineWeight Lineweight);


void __RPC_STUB IIcadDim3PointAngular_put_ExtensionLineWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_DimLine1Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDim3PointAngular_get_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_DimLine1Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDim3PointAngular_put_DimLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_DimLine2Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDim3PointAngular_get_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_DimLine2Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDim3PointAngular_put_DimLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_DimLineInside_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDim3PointAngular_get_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_DimLineInside_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDim3PointAngular_put_DimLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtensionLineColor_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ ZcColors *Color);


void __RPC_STUB IIcadDim3PointAngular_get_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtensionLineColor_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ ZcColors Color);


void __RPC_STUB IIcadDim3PointAngular_put_ExtensionLineColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtensionLineExtend_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ double *Extension);


void __RPC_STUB IIcadDim3PointAngular_get_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtensionLineExtend_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ double Extension);


void __RPC_STUB IIcadDim3PointAngular_put_ExtensionLineExtend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtLine1StartPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT *pVarPoint);


void __RPC_STUB IIcadDim3PointAngular_get_ExtLine1StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtLine1StartPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT varPoint);


void __RPC_STUB IIcadDim3PointAngular_put_ExtLine1StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtLine1EndPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT *pVarPoint);


void __RPC_STUB IIcadDim3PointAngular_get_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtLine1EndPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT varPoint);


void __RPC_STUB IIcadDim3PointAngular_put_ExtLine1EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtLine1Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDim3PointAngular_get_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtLine1Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDim3PointAngular_put_ExtLine1Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtLine2EndPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT *pVarPoint);


void __RPC_STUB IIcadDim3PointAngular_get_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtLine2EndPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT varPoint);


void __RPC_STUB IIcadDim3PointAngular_put_ExtLine2EndPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtLine2StartPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT *pVarPoint);


void __RPC_STUB IIcadDim3PointAngular_get_ExtLine2StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtLine2StartPoint_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT varPoint);


void __RPC_STUB IIcadDim3PointAngular_put_ExtLine2StartPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ExtLine2Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Supress);


void __RPC_STUB IIcadDim3PointAngular_get_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ExtLine2Suppress_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Suppress);


void __RPC_STUB IIcadDim3PointAngular_put_ExtLine2Suppress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_Fit_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ ZcDimFit *Fit);


void __RPC_STUB IIcadDim3PointAngular_get_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_Fit_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ ZcDimFit Fit);


void __RPC_STUB IIcadDim3PointAngular_put_Fit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_ForceLineInside_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDim3PointAngular_get_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_ForceLineInside_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDim3PointAngular_put_ForceLineInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_HorizontalTextPosition_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ ZcDimHorizontalJustification *Position);


void __RPC_STUB IIcadDim3PointAngular_get_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_HorizontalTextPosition_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ ZcDimHorizontalJustification Position);


void __RPC_STUB IIcadDim3PointAngular_put_HorizontalTextPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_TextInside_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Inside);


void __RPC_STUB IIcadDim3PointAngular_get_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_TextInside_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Inside);


void __RPC_STUB IIcadDim3PointAngular_put_TextInside_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_TextInsideAlign_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDim3PointAngular_get_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_TextInsideAlign_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDim3PointAngular_put_TextInsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_TextOutsideAlign_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ VARIANT_BOOL *Alignment);


void __RPC_STUB IIcadDim3PointAngular_get_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_TextOutsideAlign_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ VARIANT_BOOL Alignment);


void __RPC_STUB IIcadDim3PointAngular_put_TextOutsideAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_get_TextPrecision_Proxy( 
    IIcadDim3PointAngular * This,
    /* [retval][out] */ ZcDimPrecision *Precision);


void __RPC_STUB IIcadDim3PointAngular_get_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput] */ HRESULT STDMETHODCALLTYPE IIcadDim3PointAngular_put_TextPrecision_Proxy( 
    IIcadDim3PointAngular * This,
    /* [in] */ ZcDimPrecision Precision);


void __RPC_STUB IIcadDim3PointAngular_put_TextPrecision_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIcadDim3PointAngular_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_Icad_0000_0107 */
/* [local] */ 







extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_Icad_0000_0107_v0_0_s_ifspec;

#ifndef __IIcadModelSpace_INTERFACE_DEFINED__
#define __IIcadModelSpace_INTERFACE_DEFINED__

/* interface IIcadModelSpace */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadModelSpace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("de971305-b2bc-4001-ac0b-63fc334eff5f")
    IIcadModelSpace : public IIcadEntities
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ IIcadDocument **ppDoc) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Layout( 
            /* [retval][out] */ IIcadLayout **ppLayout) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasExtensionDictionary( 
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetExtensionDictionary( 
            /* [retval][out] */ IIcadDictionary **ppExtDictionary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadModelSpaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadModelSpace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadModelSpace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadModelSpace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadModelSpace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadModelSpace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadModelSpace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadModelSpace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadModelSpace * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadModelSpace * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadModelSpace * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadModelSpace * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadModelSpace * This,
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcad3DFace **pp3DFace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IIcadModelSpace * This,
            /* [in] */ long M,
            /* [in] */ long N,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolygonMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcad3DPoly **pp3DPoly);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IIcadArc **ppArc);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IIcadModelSpace * This,
            /* [in] */ double Height,
            /* [in] */ ZcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IIcadAttribute **ppAttribute);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppBox);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcadCircle **ppCircle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDim3PointAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAligned **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ VARIANT varFarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimDiametric **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varDefintionPoint,
            /* [in] */ VARIANT varLeaderEndPoint,
            /* [in] */ VARIANT_BOOL UseXAxis,
            /* [retval][out] */ IIcadDimOrdinate **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimRadial **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varDimLineLocation,
            /* [in] */ double Rotation,
            /* [retval][out] */ IIcadDimRotated **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varMajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IIcadEllipse **ppEllipse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IIcadModelSpace * This,
            /* [in] */ ZcHatchType PatternType,
            /* [in] */ BSTR PatternName,
            /* [defaultvalue][in] */ VARIANT_BOOL Associativity,
            /* [retval][out] */ IIcadHatch **ppHatch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IIcadModelSpace * This,
            /* [in] */ BSTR ImageFile,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double ScaleFactor,
            /* [defaultvalue][optional][in] */ double RotationAngle,
            /* [retval][out] */ IIcadRasterImage **ppImage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadXline **ppInfiniteLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoints,
            /* [optional][in] */ IIcadEntity *Annotation,
            /* [defaultvalue][optional][in] */ ZcLeaderType Type,
            /* [retval][out] */ IIcadLeader **ppLeader);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadLightWeightPolyline **ppLWPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varStartPoint,
            /* [in] */ VARIANT varEndPoint,
            /* [retval][out] */ IIcadLine **ppLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IIcadMText **ppMText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPointEntity )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoint,
            /* [retval][out] */ IIcadPointEntity **ppPointEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolyline **ppPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [in] */ VARIANT ListOfFaceIndices,
            /* [retval][out] */ IIcadPolyfaceMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadRay **ppRay);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcadSolid **ppSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcad3DSolid **ppSphere);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoints,
            /* [in] */ VARIANT varStartTangent,
            /* [in] */ VARIANT varEndTangent,
            /* [retval][out] */ IIcadSpline **ppSpline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IIcadModelSpace * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IIcadText **ppText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IIcadModelSpace * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ VARIANT varDirection,
            /* [retval][out] */ IIcadTolerance **ppTolerance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IIcad3DSolid **pTorus);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varPoints,
            /* [retval][out] */ IIcadTrace **ppTrace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppWedge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IIcadModelSpace * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IIcadModelSpace * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ IIcadEntity *pPath,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolidAlongPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IIcadModelSpace * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ VARIANT varAxisPoint,
            /* [in] */ VARIANT varDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IIcad3DSolid **ppRevolvedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IIcadModelSpace * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOverlay,
            /* [retval][out] */ IIcadExternalReference **ppXRef);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR BlockName,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadBlockReference **ppBlockInsert);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IIcadModelSpace * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double Height,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadShape **ppShape);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IIcadModelSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadMLine **ppMLine);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            IIcadModelSpace * This,
            /* [retval][out] */ IIcadDocument **ppDoc);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IIcadModelSpace * This,
            /* [retval][out] */ IIcadLayout **ppLayout);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadModelSpace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadModelSpace * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        END_INTERFACE
    } IIcadModelSpaceVtbl;

    interface IIcadModelSpace
    {
        CONST_VTBL struct IIcadModelSpaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadModelSpace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadModelSpace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadModelSpace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadModelSpace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadModelSpace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadModelSpace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadModelSpace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadModelSpace_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadModelSpace_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadModelSpace_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadModelSpace_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadModelSpace_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadModelSpace_Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace)	\
    ( (This)->lpVtbl -> Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace) ) 

#define IIcadModelSpace_Add3DMesh(This,M,N,varVertices,ppMesh)	\
    ( (This)->lpVtbl -> Add3DMesh(This,M,N,varVertices,ppMesh) ) 

#define IIcadModelSpace_Add3DPoly(This,varVertices,pp3DPoly)	\
    ( (This)->lpVtbl -> Add3DPoly(This,varVertices,pp3DPoly) ) 

#define IIcadModelSpace_AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc)	\
    ( (This)->lpVtbl -> AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc) ) 

#define IIcadModelSpace_AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute) ) 

#define IIcadModelSpace_AddBox(This,varOrigin,Length,Width,Height,ppBox)	\
    ( (This)->lpVtbl -> AddBox(This,varOrigin,Length,Width,Height,ppBox) ) 

#define IIcadModelSpace_AddCircle(This,varCenter,Radius,ppCircle)	\
    ( (This)->lpVtbl -> AddCircle(This,varCenter,Radius,ppCircle) ) 

#define IIcadModelSpace_AddCone(This,varCenter,BaseRadius,Height,ppCone)	\
    ( (This)->lpVtbl -> AddCone(This,varCenter,BaseRadius,Height,ppCone) ) 

#define IIcadModelSpace_AddCylinder(This,varCenter,Radius,Height,ppCylinder)	\
    ( (This)->lpVtbl -> AddCylinder(This,varCenter,Radius,Height,ppCylinder) ) 

#define IIcadModelSpace_AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadModelSpace_AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension) ) 

#define IIcadModelSpace_AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadModelSpace_AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension) ) 

#define IIcadModelSpace_AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension)	\
    ( (This)->lpVtbl -> AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension) ) 

#define IIcadModelSpace_AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension) ) 

#define IIcadModelSpace_AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension) ) 

#define IIcadModelSpace_AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse)	\
    ( (This)->lpVtbl -> AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse) ) 

#define IIcadModelSpace_AddHatch(This,PatternType,PatternName,Associativity,ppHatch)	\
    ( (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,ppHatch) ) 

#define IIcadModelSpace_AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage)	\
    ( (This)->lpVtbl -> AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage) ) 

#define IIcadModelSpace_AddXline(This,varPoint1,varPoint2,ppInfiniteLine)	\
    ( (This)->lpVtbl -> AddXline(This,varPoint1,varPoint2,ppInfiniteLine) ) 

#define IIcadModelSpace_AddLeader(This,varPoints,Annotation,Type,ppLeader)	\
    ( (This)->lpVtbl -> AddLeader(This,varPoints,Annotation,Type,ppLeader) ) 

#define IIcadModelSpace_AddLightWeightPolyline(This,varVertices,ppLWPolyline)	\
    ( (This)->lpVtbl -> AddLightWeightPolyline(This,varVertices,ppLWPolyline) ) 

#define IIcadModelSpace_AddLine(This,varStartPoint,varEndPoint,ppLine)	\
    ( (This)->lpVtbl -> AddLine(This,varStartPoint,varEndPoint,ppLine) ) 

#define IIcadModelSpace_AddMText(This,varInsertionPoint,Width,Text,ppMText)	\
    ( (This)->lpVtbl -> AddMText(This,varInsertionPoint,Width,Text,ppMText) ) 

#define IIcadModelSpace_AddPointEntity(This,varPoint,ppPointEntity)	\
    ( (This)->lpVtbl -> AddPointEntity(This,varPoint,ppPointEntity) ) 

#define IIcadModelSpace_AddPolyline(This,varVertices,ppPolyline)	\
    ( (This)->lpVtbl -> AddPolyline(This,varVertices,ppPolyline) ) 

#define IIcadModelSpace_AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh)	\
    ( (This)->lpVtbl -> AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh) ) 

#define IIcadModelSpace_AddRay(This,varPoint1,varPoint2,ppRay)	\
    ( (This)->lpVtbl -> AddRay(This,varPoint1,varPoint2,ppRay) ) 

#define IIcadModelSpace_AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid)	\
    ( (This)->lpVtbl -> AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid) ) 

#define IIcadModelSpace_AddSphere(This,varCenter,Radius,ppSphere)	\
    ( (This)->lpVtbl -> AddSphere(This,varCenter,Radius,ppSphere) ) 

#define IIcadModelSpace_AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline)	\
    ( (This)->lpVtbl -> AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline) ) 

#define IIcadModelSpace_AddText(This,TextString,varInsertionPoint,Height,ppText)	\
    ( (This)->lpVtbl -> AddText(This,TextString,varInsertionPoint,Height,ppText) ) 

#define IIcadModelSpace_AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance)	\
    ( (This)->lpVtbl -> AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance) ) 

#define IIcadModelSpace_AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus)	\
    ( (This)->lpVtbl -> AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus) ) 

#define IIcadModelSpace_AddTrace(This,varPoints,ppTrace)	\
    ( (This)->lpVtbl -> AddTrace(This,varPoints,ppTrace) ) 

#define IIcadModelSpace_AddWedge(This,varOrigin,Length,Width,Height,ppWedge)	\
    ( (This)->lpVtbl -> AddWedge(This,varOrigin,Length,Width,Height,ppWedge) ) 

#define IIcadModelSpace_AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone)	\
    ( (This)->lpVtbl -> AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone) ) 

#define IIcadModelSpace_AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder)	\
    ( (This)->lpVtbl -> AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder) ) 

#define IIcadModelSpace_AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid)	\
    ( (This)->lpVtbl -> AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid) ) 

#define IIcadModelSpace_AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath)	\
    ( (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath) ) 

#define IIcadModelSpace_AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid)	\
    ( (This)->lpVtbl -> AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid) ) 

#define IIcadModelSpace_AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef)	\
    ( (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef) ) 

#define IIcadModelSpace_InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert)	\
    ( (This)->lpVtbl -> InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert) ) 

#define IIcadModelSpace_AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape)	\
    ( (This)->lpVtbl -> AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape) ) 

#define IIcadModelSpace_AddRegion(This,ObjectList,pRegions)	\
    ( (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions) ) 

#define IIcadModelSpace_AddMLine(This,varVertices,ppMLine)	\
    ( (This)->lpVtbl -> AddMLine(This,varVertices,ppMLine) ) 


#define IIcadModelSpace_get_Document(This,ppDoc)	\
    ( (This)->lpVtbl -> get_Document(This,ppDoc) ) 

#define IIcadModelSpace_get_Layout(This,ppLayout)	\
    ( (This)->lpVtbl -> get_Layout(This,ppLayout) ) 

#define IIcadModelSpace_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadModelSpace_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadModelSpace_INTERFACE_DEFINED__ */


#ifndef __IIcadPaperSpace_INTERFACE_DEFINED__
#define __IIcadPaperSpace_INTERFACE_DEFINED__

/* interface IIcadPaperSpace */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadPaperSpace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("195c4b04-05d9-45bf-8af6-61c929b44eb5")
    IIcadPaperSpace : public IIcadEntities
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPViewport( 
            /* [optional][in] */ VARIANT varCenter,
            /* [optional][in] */ double Width,
            /* [optional][in] */ double Height,
            /* [retval][out] */ IIcadPViewport **ppViewport) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Layout( 
            /* [retval][out] */ IIcadLayout **ppLayout) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasExtensionDictionary( 
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetExtensionDictionary( 
            /* [retval][out] */ IIcadDictionary **ppExtDictionary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadPaperSpaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadPaperSpace * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadPaperSpace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadPaperSpace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadPaperSpace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadPaperSpace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadPaperSpace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadPaperSpace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadPaperSpace * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IIcadPaperSpace * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadPaperSpace * This,
            /* [retval][out] */ IIcadDocument **ppParent);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IIcadPaperSpace * This,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IIcadPaperSpace * This,
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DFace )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcad3DFace **pp3DFace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DMesh )( 
            IIcadPaperSpace * This,
            /* [in] */ long M,
            /* [in] */ long N,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolygonMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Add3DPoly )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcad3DPoly **pp3DPoly);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddArc )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double StartAngle,
            /* [in] */ double EndAngle,
            /* [retval][out] */ IIcadArc **ppArc);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IIcadPaperSpace * This,
            /* [in] */ double Height,
            /* [in] */ ZcAttributeMode Mode,
            /* [in] */ BSTR Prompt,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR Tag,
            /* [in] */ BSTR Value,
            /* [retval][out] */ IIcadAttribute **ppAttribute);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddBox )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppBox);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCircle )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcadCircle **ppCircle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCone )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double BaseRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddCylinder )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDim3PointAngular )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDim3PointAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAligned )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAligned **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimAngular )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varAngleVertex,
            /* [in] */ VARIANT varFirstEndPoint,
            /* [in] */ VARIANT varSecondEndPoint,
            /* [in] */ VARIANT varTextLocation,
            /* [retval][out] */ IIcadDimAngular **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimDiametric )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ VARIANT varFarChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimDiametric **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimOrdinate )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varDefintionPoint,
            /* [in] */ VARIANT varLeaderEndPoint,
            /* [in] */ VARIANT_BOOL UseXAxis,
            /* [retval][out] */ IIcadDimOrdinate **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRadial )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varChordPoint,
            /* [in] */ double LeaderLength,
            /* [retval][out] */ IIcadDimRadial **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddDimRotated )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varExtPoint1,
            /* [in] */ VARIANT varExtPoint2,
            /* [in] */ VARIANT varDimLineLocation,
            /* [in] */ double Rotation,
            /* [retval][out] */ IIcadDimRotated **ppDimension);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipse )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ VARIANT varMajorAxis,
            /* [in] */ double RadiusRatio,
            /* [retval][out] */ IIcadEllipse **ppEllipse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddHatch )( 
            IIcadPaperSpace * This,
            /* [in] */ ZcHatchType PatternType,
            /* [in] */ BSTR PatternName,
            /* [defaultvalue][in] */ VARIANT_BOOL Associativity,
            /* [retval][out] */ IIcadHatch **ppHatch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRaster )( 
            IIcadPaperSpace * This,
            /* [in] */ BSTR ImageFile,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double ScaleFactor,
            /* [defaultvalue][optional][in] */ double RotationAngle,
            /* [retval][out] */ IIcadRasterImage **ppImage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddXline )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadXline **ppInfiniteLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLeader )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoints,
            /* [optional][in] */ IIcadEntity *Annotation,
            /* [defaultvalue][optional][in] */ ZcLeaderType Type,
            /* [retval][out] */ IIcadLeader **ppLeader);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLightWeightPolyline )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadLightWeightPolyline **ppLWPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varStartPoint,
            /* [in] */ VARIANT varEndPoint,
            /* [retval][out] */ IIcadLine **ppLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMText )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Width,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IIcadMText **ppMText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPointEntity )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoint,
            /* [retval][out] */ IIcadPointEntity **ppPointEntity);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadPolyline **ppPolyline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPolyfaceMesh )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [in] */ VARIANT ListOfFaceIndices,
            /* [retval][out] */ IIcadPolyfaceMesh **ppMesh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRay )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [retval][out] */ IIcadRay **ppRay);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSolid )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoint1,
            /* [in] */ VARIANT varPoint2,
            /* [in] */ VARIANT varPoint3,
            /* [optional][in] */ VARIANT varPoint4,
            /* [retval][out] */ IIcadSolid **ppSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSphere )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double Radius,
            /* [retval][out] */ IIcad3DSolid **ppSphere);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddSpline )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoints,
            /* [in] */ VARIANT varStartTangent,
            /* [in] */ VARIANT varEndTangent,
            /* [retval][out] */ IIcadSpline **ppSpline);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddText )( 
            IIcadPaperSpace * This,
            /* [in] */ BSTR TextString,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ double Height,
            /* [retval][out] */ IIcadText **ppText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTolerance )( 
            IIcadPaperSpace * This,
            /* [in] */ BSTR Text,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ VARIANT varDirection,
            /* [retval][out] */ IIcadTolerance **ppTolerance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTorus )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double TorusRadius,
            /* [in] */ double TubeRadius,
            /* [retval][out] */ IIcad3DSolid **pTorus);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTrace )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varPoints,
            /* [retval][out] */ IIcadTrace **ppTrace);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddWedge )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varOrigin,
            /* [in] */ double Length,
            /* [in] */ double Width,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppWedge);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCone )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCone);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddEllipticalCylinder )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varCenter,
            /* [in] */ double MajorRadius,
            /* [in] */ double MinorRadius,
            /* [in] */ double Height,
            /* [retval][out] */ IIcad3DSolid **ppEllipticalCylinder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolid )( 
            IIcadPaperSpace * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ double Height,
            /* [in] */ double TaperAngle,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtrudedSolidAlongPath )( 
            IIcadPaperSpace * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ IIcadEntity *pPath,
            /* [retval][out] */ IIcad3DSolid **ppExtrudedSolidAlongPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRevolvedSolid )( 
            IIcadPaperSpace * This,
            /* [in] */ IIcadRegion *pProfile,
            /* [in] */ VARIANT varAxisPoint,
            /* [in] */ VARIANT varDir,
            /* [in] */ double Angle,
            /* [retval][out] */ IIcad3DSolid **ppRevolvedSolid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachExternalReference )( 
            IIcadPaperSpace * This,
            /* [in] */ BSTR PathName,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL bOverlay,
            /* [retval][out] */ IIcadExternalReference **ppXRef);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertBlock )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varInsertionPoint,
            /* [in] */ BSTR BlockName,
            /* [defaultvalue][optional][in] */ double XScale,
            /* [defaultvalue][optional][in] */ double YScale,
            /* [defaultvalue][optional][in] */ double ZScale,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadBlockReference **ppBlockInsert);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            IIcadPaperSpace * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double Height,
            /* [defaultvalue][optional][in] */ double Rotation,
            /* [retval][out] */ IIcadShape **ppShape);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddRegion )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT ObjectList,
            /* [retval][out] */ VARIANT *pRegions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMLine )( 
            IIcadPaperSpace * This,
            /* [in] */ VARIANT varVertices,
            /* [retval][out] */ IIcadMLine **ppMLine);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPViewport )( 
            IIcadPaperSpace * This,
            /* [optional][in] */ VARIANT varCenter,
            /* [optional][in] */ double Width,
            /* [optional][in] */ double Height,
            /* [retval][out] */ IIcadPViewport **ppViewport);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            IIcadPaperSpace * This,
            /* [retval][out] */ IIcadLayout **ppLayout);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExtensionDictionary )( 
            IIcadPaperSpace * This,
            /* [retval][out] */ VARIANT_BOOL *bHasDictionary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExtensionDictionary )( 
            IIcadPaperSpace * This,
            /* [retval][out] */ IIcadDictionary **ppExtDictionary);
        
        END_INTERFACE
    } IIcadPaperSpaceVtbl;

    interface IIcadPaperSpace
    {
        CONST_VTBL struct IIcadPaperSpaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadPaperSpace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadPaperSpace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadPaperSpace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadPaperSpace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadPaperSpace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadPaperSpace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadPaperSpace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadPaperSpace_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadPaperSpace_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IIcadPaperSpace_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadPaperSpace_get__NewEnum(This,ppUnk)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppUnk) ) 

#define IIcadPaperSpace_Item(This,Index,ppItem)	\
    ( (This)->lpVtbl -> Item(This,Index,ppItem) ) 

#define IIcadPaperSpace_Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace)	\
    ( (This)->lpVtbl -> Add3DFace(This,varPoint1,varPoint2,varPoint3,varPoint4,pp3DFace) ) 

#define IIcadPaperSpace_Add3DMesh(This,M,N,varVertices,ppMesh)	\
    ( (This)->lpVtbl -> Add3DMesh(This,M,N,varVertices,ppMesh) ) 

#define IIcadPaperSpace_Add3DPoly(This,varVertices,pp3DPoly)	\
    ( (This)->lpVtbl -> Add3DPoly(This,varVertices,pp3DPoly) ) 

#define IIcadPaperSpace_AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc)	\
    ( (This)->lpVtbl -> AddArc(This,varCenter,Radius,StartAngle,EndAngle,ppArc) ) 

#define IIcadPaperSpace_AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute)	\
    ( (This)->lpVtbl -> AddAttribute(This,Height,Mode,Prompt,varInsertionPoint,Tag,Value,ppAttribute) ) 

#define IIcadPaperSpace_AddBox(This,varOrigin,Length,Width,Height,ppBox)	\
    ( (This)->lpVtbl -> AddBox(This,varOrigin,Length,Width,Height,ppBox) ) 

#define IIcadPaperSpace_AddCircle(This,varCenter,Radius,ppCircle)	\
    ( (This)->lpVtbl -> AddCircle(This,varCenter,Radius,ppCircle) ) 

#define IIcadPaperSpace_AddCone(This,varCenter,BaseRadius,Height,ppCone)	\
    ( (This)->lpVtbl -> AddCone(This,varCenter,BaseRadius,Height,ppCone) ) 

#define IIcadPaperSpace_AddCylinder(This,varCenter,Radius,Height,ppCylinder)	\
    ( (This)->lpVtbl -> AddCylinder(This,varCenter,Radius,Height,ppCylinder) ) 

#define IIcadPaperSpace_AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDim3PointAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadPaperSpace_AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAligned(This,varExtPoint1,varExtPoint2,varTextLocation,ppDimension) ) 

#define IIcadPaperSpace_AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimAngular(This,varAngleVertex,varFirstEndPoint,varSecondEndPoint,varTextLocation,ppDimension) ) 

#define IIcadPaperSpace_AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimDiametric(This,varChordPoint,varFarChordPoint,LeaderLength,ppDimension) ) 

#define IIcadPaperSpace_AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension)	\
    ( (This)->lpVtbl -> AddDimOrdinate(This,varDefintionPoint,varLeaderEndPoint,UseXAxis,ppDimension) ) 

#define IIcadPaperSpace_AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRadial(This,varCenter,varChordPoint,LeaderLength,ppDimension) ) 

#define IIcadPaperSpace_AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension)	\
    ( (This)->lpVtbl -> AddDimRotated(This,varExtPoint1,varExtPoint2,varDimLineLocation,Rotation,ppDimension) ) 

#define IIcadPaperSpace_AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse)	\
    ( (This)->lpVtbl -> AddEllipse(This,varCenter,varMajorAxis,RadiusRatio,ppEllipse) ) 

#define IIcadPaperSpace_AddHatch(This,PatternType,PatternName,Associativity,ppHatch)	\
    ( (This)->lpVtbl -> AddHatch(This,PatternType,PatternName,Associativity,ppHatch) ) 

#define IIcadPaperSpace_AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage)	\
    ( (This)->lpVtbl -> AddRaster(This,ImageFile,varInsertionPoint,ScaleFactor,RotationAngle,ppImage) ) 

#define IIcadPaperSpace_AddXline(This,varPoint1,varPoint2,ppInfiniteLine)	\
    ( (This)->lpVtbl -> AddXline(This,varPoint1,varPoint2,ppInfiniteLine) ) 

#define IIcadPaperSpace_AddLeader(This,varPoints,Annotation,Type,ppLeader)	\
    ( (This)->lpVtbl -> AddLeader(This,varPoints,Annotation,Type,ppLeader) ) 

#define IIcadPaperSpace_AddLightWeightPolyline(This,varVertices,ppLWPolyline)	\
    ( (This)->lpVtbl -> AddLightWeightPolyline(This,varVertices,ppLWPolyline) ) 

#define IIcadPaperSpace_AddLine(This,varStartPoint,varEndPoint,ppLine)	\
    ( (This)->lpVtbl -> AddLine(This,varStartPoint,varEndPoint,ppLine) ) 

#define IIcadPaperSpace_AddMText(This,varInsertionPoint,Width,Text,ppMText)	\
    ( (This)->lpVtbl -> AddMText(This,varInsertionPoint,Width,Text,ppMText) ) 

#define IIcadPaperSpace_AddPointEntity(This,varPoint,ppPointEntity)	\
    ( (This)->lpVtbl -> AddPointEntity(This,varPoint,ppPointEntity) ) 

#define IIcadPaperSpace_AddPolyline(This,varVertices,ppPolyline)	\
    ( (This)->lpVtbl -> AddPolyline(This,varVertices,ppPolyline) ) 

#define IIcadPaperSpace_AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh)	\
    ( (This)->lpVtbl -> AddPolyfaceMesh(This,varVertices,ListOfFaceIndices,ppMesh) ) 

#define IIcadPaperSpace_AddRay(This,varPoint1,varPoint2,ppRay)	\
    ( (This)->lpVtbl -> AddRay(This,varPoint1,varPoint2,ppRay) ) 

#define IIcadPaperSpace_AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid)	\
    ( (This)->lpVtbl -> AddSolid(This,varPoint1,varPoint2,varPoint3,varPoint4,ppSolid) ) 

#define IIcadPaperSpace_AddSphere(This,varCenter,Radius,ppSphere)	\
    ( (This)->lpVtbl -> AddSphere(This,varCenter,Radius,ppSphere) ) 

#define IIcadPaperSpace_AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline)	\
    ( (This)->lpVtbl -> AddSpline(This,varPoints,varStartTangent,varEndTangent,ppSpline) ) 

#define IIcadPaperSpace_AddText(This,TextString,varInsertionPoint,Height,ppText)	\
    ( (This)->lpVtbl -> AddText(This,TextString,varInsertionPoint,Height,ppText) ) 

#define IIcadPaperSpace_AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance)	\
    ( (This)->lpVtbl -> AddTolerance(This,Text,varInsertionPoint,varDirection,ppTolerance) ) 

#define IIcadPaperSpace_AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus)	\
    ( (This)->lpVtbl -> AddTorus(This,varCenter,TorusRadius,TubeRadius,pTorus) ) 

#define IIcadPaperSpace_AddTrace(This,varPoints,ppTrace)	\
    ( (This)->lpVtbl -> AddTrace(This,varPoints,ppTrace) ) 

#define IIcadPaperSpace_AddWedge(This,varOrigin,Length,Width,Height,ppWedge)	\
    ( (This)->lpVtbl -> AddWedge(This,varOrigin,Length,Width,Height,ppWedge) ) 

#define IIcadPaperSpace_AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone)	\
    ( (This)->lpVtbl -> AddEllipticalCone(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCone) ) 

#define IIcadPaperSpace_AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder)	\
    ( (This)->lpVtbl -> AddEllipticalCylinder(This,varCenter,MajorRadius,MinorRadius,Height,ppEllipticalCylinder) ) 

#define IIcadPaperSpace_AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid)	\
    ( (This)->lpVtbl -> AddExtrudedSolid(This,pProfile,Height,TaperAngle,ppExtrudedSolid) ) 

#define IIcadPaperSpace_AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath)	\
    ( (This)->lpVtbl -> AddExtrudedSolidAlongPath(This,pProfile,pPath,ppExtrudedSolidAlongPath) ) 

#define IIcadPaperSpace_AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid)	\
    ( (This)->lpVtbl -> AddRevolvedSolid(This,pProfile,varAxisPoint,varDir,Angle,ppRevolvedSolid) ) 

#define IIcadPaperSpace_AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef)	\
    ( (This)->lpVtbl -> AttachExternalReference(This,PathName,Name,varInsertionPoint,XScale,YScale,ZScale,Rotation,bOverlay,ppXRef) ) 

#define IIcadPaperSpace_InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert)	\
    ( (This)->lpVtbl -> InsertBlock(This,varInsertionPoint,BlockName,XScale,YScale,ZScale,Rotation,ppBlockInsert) ) 

#define IIcadPaperSpace_AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape)	\
    ( (This)->lpVtbl -> AddShape(This,Name,varInsertionPoint,Height,Rotation,ppShape) ) 

#define IIcadPaperSpace_AddRegion(This,ObjectList,pRegions)	\
    ( (This)->lpVtbl -> AddRegion(This,ObjectList,pRegions) ) 

#define IIcadPaperSpace_AddMLine(This,varVertices,ppMLine)	\
    ( (This)->lpVtbl -> AddMLine(This,varVertices,ppMLine) ) 


#define IIcadPaperSpace_AddPViewport(This,varCenter,Width,Height,ppViewport)	\
    ( (This)->lpVtbl -> AddPViewport(This,varCenter,Width,Height,ppViewport) ) 

#define IIcadPaperSpace_get_Layout(This,ppLayout)	\
    ( (This)->lpVtbl -> get_Layout(This,ppLayout) ) 

#define IIcadPaperSpace_get_HasExtensionDictionary(This,bHasDictionary)	\
    ( (This)->lpVtbl -> get_HasExtensionDictionary(This,bHasDictionary) ) 

#define IIcadPaperSpace_GetExtensionDictionary(This,ppExtDictionary)	\
    ( (This)->lpVtbl -> GetExtensionDictionary(This,ppExtDictionary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadPaperSpace_INTERFACE_DEFINED__ */


#ifndef __IIcadDocument_INTERFACE_DEFINED__
#define __IIcadDocument_INTERFACE_DEFINED__

/* interface IIcadDocument */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDocument;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e06aa0c6-ae52-42ac-9e48-37cb38e3c338")
    IIcadDocument : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Active( 
            /* [retval][out] */ VARIANT_BOOL *Active) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveDimStyle( 
            /* [retval][out] */ IIcadDimensionStyle **ppDimStyle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveDimStyle( 
            /* [in] */ IIcadDimensionStyle *pDimStyle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveLayer( 
            /* [retval][out] */ IIcadLayer **ppLayer) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveLayer( 
            /* [in] */ IIcadLayer *pLayer) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveLinetype( 
            /* [retval][out] */ IIcadLinetype **ppLinetype) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveLinetype( 
            /* [in] */ IIcadLinetype *pLinetype) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActivePViewport( 
            /* [retval][out] */ IIcadPViewport **ppVPort) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActivePViewport( 
            /* [in] */ IIcadPViewport *pVPort) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveSelectionSet( 
            /* [retval][out] */ IIcadSelectionSet **ppSelSet) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveSpace( 
            /* [retval][out] */ ZcPMSpace *pSpace) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveSpace( 
            /* [in] */ ZcPMSpace Space) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveTextStyle( 
            /* [retval][out] */ IIcadTextStyle **ppTextStyle) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveTextStyle( 
            /* [in] */ IIcadTextStyle *pTextStyle) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveUCS( 
            /* [retval][out] */ IIcadUserCoordSystem **ppUCS) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveUCS( 
            /* [in] */ IIcadUserCoordSystem *pUCS) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveViewport( 
            /* [retval][out] */ IIcadViewport **ppViewport) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveViewport( 
            /* [in] */ IIcadViewport *pViewport) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Blocks( 
            /* [retval][out] */ IIcadBlocks **ppBlocks) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DimensionStyles( 
            /* [retval][out] */ IIcadDimensionStyles **ppDimensionStyles) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Layers( 
            /* [retval][out] */ IIcadLayers **ppLayers) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Linetypes( 
            /* [retval][out] */ IIcadLinetypes **ppLinetypes) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegisteredApplications( 
            /* [retval][out] */ IIcadRegisteredApplications **ppAppIDs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionSets( 
            /* [retval][out] */ IIcadSelectionSets **ppSelSets) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextStyles( 
            /* [retval][out] */ IIcadTextStyles **ppTextStyles) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UserCoordinateSystems( 
            /* [retval][out] */ IIcadUserCoordSystems **ppUserCoordSystems) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Viewports( 
            /* [retval][out] */ IIcadViewports **ppViewports) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Views( 
            /* [retval][out] */ IIcadViews **ppViews) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ModelSpace( 
            /* [retval][out] */ IIcadModelSpace **ppEntities) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PaperSpace( 
            /* [retval][out] */ IIcadPaperSpace **ppEntities) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **ppApp) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocuments **ppParent) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Preferences( 
            /* [retval][out] */ IIcadDatabasePreferences **ppPreferences) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ BSTR *pstrFullAppName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pAppName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *pPath) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ReadOnly( 
            /* [retval][out] */ VARIANT_BOOL *pbReadOnly) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *pbSaved) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MSpace( 
            /* [retval][out] */ VARIANT_BOOL *pSpace) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MSpace( 
            /* [in] */ VARIANT_BOOL Space) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjectSnapMode( 
            /* [retval][out] */ VARIANT_BOOL *SnapMode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ObjectSnapMode( 
            /* [in] */ VARIANT_BOOL SnapMode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ElevationModelSpace( 
            /* [retval][out] */ double *Elevation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ElevationModelSpace( 
            /* [in] */ double Elevation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ElevationPaperSpace( 
            /* [retval][out] */ double *Elevation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ElevationPaperSpace( 
            /* [in] */ double Elevation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Limits( 
            /* [retval][out] */ VARIANT *pVarLimits) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Limits( 
            /* [in] */ VARIANT varLimits) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Utility( 
            /* [retval][out] */ IIcadUtility **ppUtility) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HWND( 
            /* [retval][out] */ long *pHWND) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WindowState( 
            /* [retval][out] */ ZcWindowState *pState) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_WindowState( 
            /* [in] */ ZcWindowState State) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Groups( 
            /* [retval][out] */ IIcadGroups **ppGroups) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Dictionaries( 
            /* [retval][out] */ IIcadDictionaries **ppDictionaries) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PickfirstSelectionSet( 
            /* [retval][out] */ IIcadSelectionSet **ppSelectionset) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE WindowTitle( 
            /* [retval][out] */ BSTR *pTitle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE StartUndoMark( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EndUndoMark( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PlotConfigurations( 
            /* [retval][out] */ IIcadPlotConfigurations **ppPlotConfigurations) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Layouts( 
            /* [retval][out] */ IIcadLayouts **ppLayouts) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveLayout( 
            /* [retval][out] */ IIcadLayout **ppLayout) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ActiveLayout( 
            /* [in] */ IIcadLayout *pLayout) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Plot( 
            /* [retval][out] */ IIcadPlot **ppPlot) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SummaryInfo( 
            /* [retval][out] */ IIcadSummaryInfo **ppSummary) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SaveChanges,
            /* [optional][in] */ BSTR File) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Export( 
            /* [in] */ BSTR FileName,
            /* [in] */ BSTR Extension,
            /* [optional][in] */ IIcadSelectionSet *SelectionSet) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Import( 
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double ScaleFactor = 1) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE New( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PrintDrawing( 
            /* [defaultvalue][optional][in] */ short nCopies = 1) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PrintPreview( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR SaveFile,
            /* [defaultvalue][optional][in] */ ZcSaveAsType Version = zc2004_dwg) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CopyObjects( 
            /* [in] */ IIcadSelectionSet *pSelectionset,
            /* [defaultvalue][optional][in] */ IDispatch *pDispatch,
            /* [retval][out] */ IIcadSelectionSet **ppSelectionset) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SendCommand( 
            /* [in] */ BSTR Command) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE WBlock( 
            /* [in] */ BSTR FileName,
            /* [in] */ IIcadSelectionSet *SelectionSet,
            /* [optional][in] */ VARIANT varOrigin) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetVariable( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ VARIANT *pValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetVariable( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLispVariable( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ VARIANT *pValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetLispVariable( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EvaluateLispExpression( 
            /* [in] */ BSTR LispExpression,
            /* [retval][out] */ VARIANT *LispResult) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE HandleToObject( 
            /* [in] */ BSTR Handle,
            /* [retval][out] */ IDispatch **pObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PurgeAll( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Regen( 
            /* [defaultvalue][optional][in] */ ZcWhichViewport Viewports = zcActiveViewport) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LoadShapeFile( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ObjectIdToObject( 
            /* [in] */ long ObjectID,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDocument * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDocument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDocument * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDocument * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDocument * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDocument * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Active )( 
            IIcadDocument * This,
            /* [retval][out] */ VARIANT_BOOL *Active);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveDimStyle )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadDimensionStyle **ppDimStyle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveDimStyle )( 
            IIcadDocument * This,
            /* [in] */ IIcadDimensionStyle *pDimStyle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveLayer )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadLayer **ppLayer);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveLayer )( 
            IIcadDocument * This,
            /* [in] */ IIcadLayer *pLayer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveLinetype )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadLinetype **ppLinetype);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveLinetype )( 
            IIcadDocument * This,
            /* [in] */ IIcadLinetype *pLinetype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActivePViewport )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadPViewport **ppVPort);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActivePViewport )( 
            IIcadDocument * This,
            /* [in] */ IIcadPViewport *pVPort);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveSelectionSet )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadSelectionSet **ppSelSet);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveSpace )( 
            IIcadDocument * This,
            /* [retval][out] */ ZcPMSpace *pSpace);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveSpace )( 
            IIcadDocument * This,
            /* [in] */ ZcPMSpace Space);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveTextStyle )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadTextStyle **ppTextStyle);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveTextStyle )( 
            IIcadDocument * This,
            /* [in] */ IIcadTextStyle *pTextStyle);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveUCS )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadUserCoordSystem **ppUCS);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveUCS )( 
            IIcadDocument * This,
            /* [in] */ IIcadUserCoordSystem *pUCS);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveViewport )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadViewport **ppViewport);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveViewport )( 
            IIcadDocument * This,
            /* [in] */ IIcadViewport *pViewport);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Blocks )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadBlocks **ppBlocks);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DimensionStyles )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadDimensionStyles **ppDimensionStyles);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layers )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadLayers **ppLayers);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Linetypes )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadLinetypes **ppLinetypes);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegisteredApplications )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadRegisteredApplications **ppAppIDs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionSets )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadSelectionSets **ppSelSets);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextStyles )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadTextStyles **ppTextStyles);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserCoordinateSystems )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadUserCoordSystems **ppUserCoordSystems);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Viewports )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadViewports **ppViewports);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Views )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadViews **ppViews);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ModelSpace )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadModelSpace **ppEntities);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaperSpace )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadPaperSpace **ppEntities);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadApplication **ppApp);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadDocuments **ppParent);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preferences )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadDatabasePreferences **ppPreferences);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            IIcadDocument * This,
            /* [retval][out] */ BSTR *pstrFullAppName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IIcadDocument * This,
            /* [retval][out] */ BSTR *pAppName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IIcadDocument * This,
            /* [retval][out] */ BSTR *pPath);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnly )( 
            IIcadDocument * This,
            /* [retval][out] */ VARIANT_BOOL *pbReadOnly);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            IIcadDocument * This,
            /* [retval][out] */ VARIANT_BOOL *pbSaved);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MSpace )( 
            IIcadDocument * This,
            /* [retval][out] */ VARIANT_BOOL *pSpace);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MSpace )( 
            IIcadDocument * This,
            /* [in] */ VARIANT_BOOL Space);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSnapMode )( 
            IIcadDocument * This,
            /* [retval][out] */ VARIANT_BOOL *SnapMode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSnapMode )( 
            IIcadDocument * This,
            /* [in] */ VARIANT_BOOL SnapMode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ElevationModelSpace )( 
            IIcadDocument * This,
            /* [retval][out] */ double *Elevation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ElevationModelSpace )( 
            IIcadDocument * This,
            /* [in] */ double Elevation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ElevationPaperSpace )( 
            IIcadDocument * This,
            /* [retval][out] */ double *Elevation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ElevationPaperSpace )( 
            IIcadDocument * This,
            /* [in] */ double Elevation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Limits )( 
            IIcadDocument * This,
            /* [retval][out] */ VARIANT *pVarLimits);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Limits )( 
            IIcadDocument * This,
            /* [in] */ VARIANT varLimits);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Utility )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadUtility **ppUtility);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HWND )( 
            IIcadDocument * This,
            /* [retval][out] */ long *pHWND);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            IIcadDocument * This,
            /* [retval][out] */ ZcWindowState *pState);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            IIcadDocument * This,
            /* [in] */ ZcWindowState State);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Groups )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadGroups **ppGroups);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Dictionaries )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadDictionaries **ppDictionaries);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PickfirstSelectionSet )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadSelectionSet **ppSelectionset);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *WindowTitle )( 
            IIcadDocument * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *StartUndoMark )( 
            IIcadDocument * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EndUndoMark )( 
            IIcadDocument * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlotConfigurations )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadPlotConfigurations **ppPlotConfigurations);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Layouts )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadLayouts **ppLayouts);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveLayout )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadLayout **ppLayout);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveLayout )( 
            IIcadDocument * This,
            /* [in] */ IIcadLayout *pLayout);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Plot )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadPlot **ppPlot);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SummaryInfo )( 
            IIcadDocument * This,
            /* [retval][out] */ IIcadSummaryInfo **ppSummary);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            IIcadDocument * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IIcadDocument * This,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SaveChanges,
            /* [optional][in] */ BSTR File);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Export )( 
            IIcadDocument * This,
            /* [in] */ BSTR FileName,
            /* [in] */ BSTR Extension,
            /* [optional][in] */ IIcadSelectionSet *SelectionSet);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Import )( 
            IIcadDocument * This,
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT varInsertionPoint,
            /* [defaultvalue][optional][in] */ double ScaleFactor);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *New )( 
            IIcadDocument * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PrintDrawing )( 
            IIcadDocument * This,
            /* [defaultvalue][optional][in] */ short nCopies);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PrintPreview )( 
            IIcadDocument * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            IIcadDocument * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            IIcadDocument * This,
            /* [in] */ BSTR SaveFile,
            /* [defaultvalue][optional][in] */ ZcSaveAsType Version);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CopyObjects )( 
            IIcadDocument * This,
            /* [in] */ IIcadSelectionSet *pSelectionset,
            /* [defaultvalue][optional][in] */ IDispatch *pDispatch,
            /* [retval][out] */ IIcadSelectionSet **ppSelectionset);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendCommand )( 
            IIcadDocument * This,
            /* [in] */ BSTR Command);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *WBlock )( 
            IIcadDocument * This,
            /* [in] */ BSTR FileName,
            /* [in] */ IIcadSelectionSet *SelectionSet,
            /* [optional][in] */ VARIANT varOrigin);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetVariable )( 
            IIcadDocument * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ VARIANT *pValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetVariable )( 
            IIcadDocument * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLispVariable )( 
            IIcadDocument * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ VARIANT *pValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetLispVariable )( 
            IIcadDocument * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EvaluateLispExpression )( 
            IIcadDocument * This,
            /* [in] */ BSTR LispExpression,
            /* [retval][out] */ VARIANT *LispResult);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *HandleToObject )( 
            IIcadDocument * This,
            /* [in] */ BSTR Handle,
            /* [retval][out] */ IDispatch **pObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PurgeAll )( 
            IIcadDocument * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Regen )( 
            IIcadDocument * This,
            /* [defaultvalue][optional][in] */ ZcWhichViewport Viewports);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LoadShapeFile )( 
            IIcadDocument * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ObjectIdToObject )( 
            IIcadDocument * This,
            /* [in] */ long ObjectID,
            /* [retval][out] */ IDispatch **ppObject);
        
        END_INTERFACE
    } IIcadDocumentVtbl;

    interface IIcadDocument
    {
        CONST_VTBL struct IIcadDocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDocument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDocument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDocument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDocument_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDocument_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDocument_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDocument_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDocument_get_Active(This,Active)	\
    ( (This)->lpVtbl -> get_Active(This,Active) ) 

#define IIcadDocument_get_ActiveDimStyle(This,ppDimStyle)	\
    ( (This)->lpVtbl -> get_ActiveDimStyle(This,ppDimStyle) ) 

#define IIcadDocument_put_ActiveDimStyle(This,pDimStyle)	\
    ( (This)->lpVtbl -> put_ActiveDimStyle(This,pDimStyle) ) 

#define IIcadDocument_get_ActiveLayer(This,ppLayer)	\
    ( (This)->lpVtbl -> get_ActiveLayer(This,ppLayer) ) 

#define IIcadDocument_put_ActiveLayer(This,pLayer)	\
    ( (This)->lpVtbl -> put_ActiveLayer(This,pLayer) ) 

#define IIcadDocument_get_ActiveLinetype(This,ppLinetype)	\
    ( (This)->lpVtbl -> get_ActiveLinetype(This,ppLinetype) ) 

#define IIcadDocument_put_ActiveLinetype(This,pLinetype)	\
    ( (This)->lpVtbl -> put_ActiveLinetype(This,pLinetype) ) 

#define IIcadDocument_get_ActivePViewport(This,ppVPort)	\
    ( (This)->lpVtbl -> get_ActivePViewport(This,ppVPort) ) 

#define IIcadDocument_put_ActivePViewport(This,pVPort)	\
    ( (This)->lpVtbl -> put_ActivePViewport(This,pVPort) ) 

#define IIcadDocument_get_ActiveSelectionSet(This,ppSelSet)	\
    ( (This)->lpVtbl -> get_ActiveSelectionSet(This,ppSelSet) ) 

#define IIcadDocument_get_ActiveSpace(This,pSpace)	\
    ( (This)->lpVtbl -> get_ActiveSpace(This,pSpace) ) 

#define IIcadDocument_put_ActiveSpace(This,Space)	\
    ( (This)->lpVtbl -> put_ActiveSpace(This,Space) ) 

#define IIcadDocument_get_ActiveTextStyle(This,ppTextStyle)	\
    ( (This)->lpVtbl -> get_ActiveTextStyle(This,ppTextStyle) ) 

#define IIcadDocument_put_ActiveTextStyle(This,pTextStyle)	\
    ( (This)->lpVtbl -> put_ActiveTextStyle(This,pTextStyle) ) 

#define IIcadDocument_get_ActiveUCS(This,ppUCS)	\
    ( (This)->lpVtbl -> get_ActiveUCS(This,ppUCS) ) 

#define IIcadDocument_put_ActiveUCS(This,pUCS)	\
    ( (This)->lpVtbl -> put_ActiveUCS(This,pUCS) ) 

#define IIcadDocument_get_ActiveViewport(This,ppViewport)	\
    ( (This)->lpVtbl -> get_ActiveViewport(This,ppViewport) ) 

#define IIcadDocument_put_ActiveViewport(This,pViewport)	\
    ( (This)->lpVtbl -> put_ActiveViewport(This,pViewport) ) 

#define IIcadDocument_get_Blocks(This,ppBlocks)	\
    ( (This)->lpVtbl -> get_Blocks(This,ppBlocks) ) 

#define IIcadDocument_get_DimensionStyles(This,ppDimensionStyles)	\
    ( (This)->lpVtbl -> get_DimensionStyles(This,ppDimensionStyles) ) 

#define IIcadDocument_get_Layers(This,ppLayers)	\
    ( (This)->lpVtbl -> get_Layers(This,ppLayers) ) 

#define IIcadDocument_get_Linetypes(This,ppLinetypes)	\
    ( (This)->lpVtbl -> get_Linetypes(This,ppLinetypes) ) 

#define IIcadDocument_get_RegisteredApplications(This,ppAppIDs)	\
    ( (This)->lpVtbl -> get_RegisteredApplications(This,ppAppIDs) ) 

#define IIcadDocument_get_SelectionSets(This,ppSelSets)	\
    ( (This)->lpVtbl -> get_SelectionSets(This,ppSelSets) ) 

#define IIcadDocument_get_TextStyles(This,ppTextStyles)	\
    ( (This)->lpVtbl -> get_TextStyles(This,ppTextStyles) ) 

#define IIcadDocument_get_UserCoordinateSystems(This,ppUserCoordSystems)	\
    ( (This)->lpVtbl -> get_UserCoordinateSystems(This,ppUserCoordSystems) ) 

#define IIcadDocument_get_Viewports(This,ppViewports)	\
    ( (This)->lpVtbl -> get_Viewports(This,ppViewports) ) 

#define IIcadDocument_get_Views(This,ppViews)	\
    ( (This)->lpVtbl -> get_Views(This,ppViews) ) 

#define IIcadDocument_get_ModelSpace(This,ppEntities)	\
    ( (This)->lpVtbl -> get_ModelSpace(This,ppEntities) ) 

#define IIcadDocument_get_PaperSpace(This,ppEntities)	\
    ( (This)->lpVtbl -> get_PaperSpace(This,ppEntities) ) 

#define IIcadDocument_get_Application(This,ppApp)	\
    ( (This)->lpVtbl -> get_Application(This,ppApp) ) 

#define IIcadDocument_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define IIcadDocument_get_Preferences(This,ppPreferences)	\
    ( (This)->lpVtbl -> get_Preferences(This,ppPreferences) ) 

#define IIcadDocument_get_FullName(This,pstrFullAppName)	\
    ( (This)->lpVtbl -> get_FullName(This,pstrFullAppName) ) 

#define IIcadDocument_get_Name(This,pAppName)	\
    ( (This)->lpVtbl -> get_Name(This,pAppName) ) 

#define IIcadDocument_get_Path(This,pPath)	\
    ( (This)->lpVtbl -> get_Path(This,pPath) ) 

#define IIcadDocument_get_ReadOnly(This,pbReadOnly)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,pbReadOnly) ) 

#define IIcadDocument_get_Saved(This,pbSaved)	\
    ( (This)->lpVtbl -> get_Saved(This,pbSaved) ) 

#define IIcadDocument_get_MSpace(This,pSpace)	\
    ( (This)->lpVtbl -> get_MSpace(This,pSpace) ) 

#define IIcadDocument_put_MSpace(This,Space)	\
    ( (This)->lpVtbl -> put_MSpace(This,Space) ) 

#define IIcadDocument_get_ObjectSnapMode(This,SnapMode)	\
    ( (This)->lpVtbl -> get_ObjectSnapMode(This,SnapMode) ) 

#define IIcadDocument_put_ObjectSnapMode(This,SnapMode)	\
    ( (This)->lpVtbl -> put_ObjectSnapMode(This,SnapMode) ) 

#define IIcadDocument_get_ElevationModelSpace(This,Elevation)	\
    ( (This)->lpVtbl -> get_ElevationModelSpace(This,Elevation) ) 

#define IIcadDocument_put_ElevationModelSpace(This,Elevation)	\
    ( (This)->lpVtbl -> put_ElevationModelSpace(This,Elevation) ) 

#define IIcadDocument_get_ElevationPaperSpace(This,Elevation)	\
    ( (This)->lpVtbl -> get_ElevationPaperSpace(This,Elevation) ) 

#define IIcadDocument_put_ElevationPaperSpace(This,Elevation)	\
    ( (This)->lpVtbl -> put_ElevationPaperSpace(This,Elevation) ) 

#define IIcadDocument_get_Limits(This,pVarLimits)	\
    ( (This)->lpVtbl -> get_Limits(This,pVarLimits) ) 

#define IIcadDocument_put_Limits(This,varLimits)	\
    ( (This)->lpVtbl -> put_Limits(This,varLimits) ) 

#define IIcadDocument_get_Utility(This,ppUtility)	\
    ( (This)->lpVtbl -> get_Utility(This,ppUtility) ) 

#define IIcadDocument_get_HWND(This,pHWND)	\
    ( (This)->lpVtbl -> get_HWND(This,pHWND) ) 

#define IIcadDocument_get_WindowState(This,pState)	\
    ( (This)->lpVtbl -> get_WindowState(This,pState) ) 

#define IIcadDocument_put_WindowState(This,State)	\
    ( (This)->lpVtbl -> put_WindowState(This,State) ) 

#define IIcadDocument_get_Groups(This,ppGroups)	\
    ( (This)->lpVtbl -> get_Groups(This,ppGroups) ) 

#define IIcadDocument_get_Dictionaries(This,ppDictionaries)	\
    ( (This)->lpVtbl -> get_Dictionaries(This,ppDictionaries) ) 

#define IIcadDocument_PickfirstSelectionSet(This,ppSelectionset)	\
    ( (This)->lpVtbl -> PickfirstSelectionSet(This,ppSelectionset) ) 

#define IIcadDocument_WindowTitle(This,pTitle)	\
    ( (This)->lpVtbl -> WindowTitle(This,pTitle) ) 

#define IIcadDocument_StartUndoMark(This)	\
    ( (This)->lpVtbl -> StartUndoMark(This) ) 

#define IIcadDocument_EndUndoMark(This)	\
    ( (This)->lpVtbl -> EndUndoMark(This) ) 

#define IIcadDocument_get_PlotConfigurations(This,ppPlotConfigurations)	\
    ( (This)->lpVtbl -> get_PlotConfigurations(This,ppPlotConfigurations) ) 

#define IIcadDocument_get_Layouts(This,ppLayouts)	\
    ( (This)->lpVtbl -> get_Layouts(This,ppLayouts) ) 

#define IIcadDocument_get_ActiveLayout(This,ppLayout)	\
    ( (This)->lpVtbl -> get_ActiveLayout(This,ppLayout) ) 

#define IIcadDocument_put_ActiveLayout(This,pLayout)	\
    ( (This)->lpVtbl -> put_ActiveLayout(This,pLayout) ) 

#define IIcadDocument_get_Plot(This,ppPlot)	\
    ( (This)->lpVtbl -> get_Plot(This,ppPlot) ) 

#define IIcadDocument_get_SummaryInfo(This,ppSummary)	\
    ( (This)->lpVtbl -> get_SummaryInfo(This,ppSummary) ) 

#define IIcadDocument_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define IIcadDocument_Close(This,SaveChanges,File)	\
    ( (This)->lpVtbl -> Close(This,SaveChanges,File) ) 

#define IIcadDocument_Export(This,FileName,Extension,SelectionSet)	\
    ( (This)->lpVtbl -> Export(This,FileName,Extension,SelectionSet) ) 

#define IIcadDocument_Import(This,FileName,varInsertionPoint,ScaleFactor)	\
    ( (This)->lpVtbl -> Import(This,FileName,varInsertionPoint,ScaleFactor) ) 

#define IIcadDocument_New(This)	\
    ( (This)->lpVtbl -> New(This) ) 

#define IIcadDocument_PrintDrawing(This,nCopies)	\
    ( (This)->lpVtbl -> PrintDrawing(This,nCopies) ) 

#define IIcadDocument_PrintPreview(This)	\
    ( (This)->lpVtbl -> PrintPreview(This) ) 

#define IIcadDocument_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define IIcadDocument_SaveAs(This,SaveFile,Version)	\
    ( (This)->lpVtbl -> SaveAs(This,SaveFile,Version) ) 

#define IIcadDocument_CopyObjects(This,pSelectionset,pDispatch,ppSelectionset)	\
    ( (This)->lpVtbl -> CopyObjects(This,pSelectionset,pDispatch,ppSelectionset) ) 

#define IIcadDocument_SendCommand(This,Command)	\
    ( (This)->lpVtbl -> SendCommand(This,Command) ) 

#define IIcadDocument_WBlock(This,FileName,SelectionSet,varOrigin)	\
    ( (This)->lpVtbl -> WBlock(This,FileName,SelectionSet,varOrigin) ) 

#define IIcadDocument_GetVariable(This,Name,pValue)	\
    ( (This)->lpVtbl -> GetVariable(This,Name,pValue) ) 

#define IIcadDocument_SetVariable(This,Name,Value)	\
    ( (This)->lpVtbl -> SetVariable(This,Name,Value) ) 

#define IIcadDocument_GetLispVariable(This,Name,pValue)	\
    ( (This)->lpVtbl -> GetLispVariable(This,Name,pValue) ) 

#define IIcadDocument_SetLispVariable(This,Name,Value)	\
    ( (This)->lpVtbl -> SetLispVariable(This,Name,Value) ) 

#define IIcadDocument_EvaluateLispExpression(This,LispExpression,LispResult)	\
    ( (This)->lpVtbl -> EvaluateLispExpression(This,LispExpression,LispResult) ) 

#define IIcadDocument_HandleToObject(This,Handle,pObject)	\
    ( (This)->lpVtbl -> HandleToObject(This,Handle,pObject) ) 

#define IIcadDocument_PurgeAll(This)	\
    ( (This)->lpVtbl -> PurgeAll(This) ) 

#define IIcadDocument_Regen(This,Viewports)	\
    ( (This)->lpVtbl -> Regen(This,Viewports) ) 

#define IIcadDocument_LoadShapeFile(This,FileName)	\
    ( (This)->lpVtbl -> LoadShapeFile(This,FileName) ) 

#define IIcadDocument_ObjectIdToObject(This,ObjectID,ppObject)	\
    ( (This)->lpVtbl -> ObjectIdToObject(This,ObjectID,ppObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDocument_INTERFACE_DEFINED__ */


#ifndef __IIcadDatabasePreferences_INTERFACE_DEFINED__
#define __IIcadDatabasePreferences_INTERFACE_DEFINED__

/* interface IIcadDatabasePreferences */
/* [unique][hidden][dual][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IIcadDatabasePreferences;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7cd932dc-a081-4f62-babe-d4c86a431c33")
    IIcadDatabasePreferences : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IIcadApplication **Application) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IIcadDocument **Document) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ContourLinesPerSurface( 
            /* [retval][out] */ int *NumberOfLines) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContourLinesPerSurface( 
            /* [in] */ int NumberOfLines) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DisplaySilhouette( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DisplaySilhouette( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MaxActiveViewports( 
            /* [retval][out] */ int *Number) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxActiveViewports( 
            /* [in] */ int Number) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjectSnapMode( 
            /* [retval][out] */ ZcObjectSnapMode *SnapMode) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ObjectSnapMode( 
            /* [in] */ ZcObjectSnapMode SnapMode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RenderSmoothness( 
            /* [retval][out] */ double *RenderSmoothness) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RenderSmoothness( 
            /* [in] */ double RenderSmoothness) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SegmentPerPolyline( 
            /* [retval][out] */ int *Number) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SegmentPerPolyline( 
            /* [in] */ int Number) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SolidFill( 
            /* [retval][out] */ VARIANT_BOOL *SolidFill) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SolidFill( 
            /* [in] */ VARIANT_BOOL SolidFill) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TextFrameDisplay( 
            /* [retval][out] */ VARIANT_BOOL *TextFrameDisplay) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextFrameDisplay( 
            /* [in] */ VARIANT_BOOL TextFrameDisplay) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_XRefLayerVisibility( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_XRefLayerVisibility( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IIcadDatabasePreferencesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIcadDatabasePreferences * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIcadDatabasePreferences * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIcadDatabasePreferences * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIcadDatabasePreferences * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIcadDatabasePreferences * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIcadDatabasePreferences * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIcadDatabasePreferences * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ IIcadApplication **Application);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ IIcadDocument **Document);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContourLinesPerSurface )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ int *NumberOfLines);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContourLinesPerSurface )( 
            IIcadDatabasePreferences * This,
            /* [in] */ int NumberOfLines);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplaySilhouette )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplaySilhouette )( 
            IIcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxActiveViewports )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ int *Number);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxActiveViewports )( 
            IIcadDatabasePreferences * This,
            /* [in] */ int Number);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectSnapMode )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ ZcObjectSnapMode *SnapMode);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObjectSnapMode )( 
            IIcadDatabasePreferences * This,
            /* [in] */ ZcObjectSnapMode SnapMode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderSmoothness )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ double *RenderSmoothness);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RenderSmoothness )( 
            IIcadDatabasePreferences * This,
            /* [in] */ double RenderSmoothness);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SegmentPerPolyline )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ int *Number);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SegmentPerPolyline )( 
            IIcadDatabasePreferences * This,
            /* [in] */ int Number);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SolidFill )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *SolidFill);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SolidFill )( 
            IIcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL SolidFill);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextFrameDisplay )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *TextFrameDisplay);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextFrameDisplay )( 
            IIcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL TextFrameDisplay);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_XRefLayerVisibility )( 
            IIcadDatabasePreferences * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_XRefLayerVisibility )( 
            IIcadDatabasePreferences * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        END_INTERFACE
    } IIcadDatabasePreferencesVtbl;

    interface IIcadDatabasePreferences
    {
        CONST_VTBL struct IIcadDatabasePreferencesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIcadDatabasePreferences_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIcadDatabasePreferences_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIcadDatabasePreferences_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIcadDatabasePreferences_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIcadDatabasePreferences_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIcadDatabasePreferences_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIcadDatabasePreferences_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIcadDatabasePreferences_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define IIcadDatabasePreferences_get_Parent(This,Document)	\
    ( (This)->lpVtbl -> get_Parent(This,Document) ) 

#define IIcadDatabasePreferences_get_ContourLinesPerSurface(This,NumberOfLines)	\
    ( (This)->lpVtbl -> get_ContourLinesPerSurface(This,NumberOfLines) ) 

#define IIcadDatabasePreferences_put_ContourLinesPerSurface(This,NumberOfLines)	\
    ( (This)->lpVtbl -> put_ContourLinesPerSurface(This,NumberOfLines) ) 

#define IIcadDatabasePreferences_get_DisplaySilhouette(This,Visible)	\
    ( (This)->lpVtbl -> get_DisplaySilhouette(This,Visible) ) 

#define IIcadDatabasePreferences_put_DisplaySilhouette(This,Visible)	\
    ( (This)->lpVtbl -> put_DisplaySilhouette(This,Visible) ) 

#define IIcadDatabasePreferences_get_MaxActiveViewports(This,Number)	\
    ( (This)->lpVtbl -> get_MaxActiveViewports(This,Number) ) 

#define IIcadDatabasePreferences_put_MaxActiveViewports(This,Number)	\
    ( (This)->lpVtbl -> put_MaxActiveViewports(This,Number) ) 

#define IIcadDatabasePreferences_get_ObjectSnapMode(This,SnapMode)	\
    ( (This)->lpVtbl -> get_ObjectSnapMode(This,SnapMode) ) 

#define IIcadDatabasePreferences_put_ObjectSnapMode(This,SnapMode)	\
    ( (This)->lpVtbl -> put_ObjectSnapMode(This,SnapMode) ) 

#define IIcadDatabasePreferences_get_RenderSmoothness(This,RenderSmoothness)	\
    ( (This)->lpVtbl -> get_RenderSmoothness(This,RenderSmoothness) ) 

#define IIcadDatabasePreferences_put_RenderSmoothness(This,RenderSmoothness)	\
    ( (This)->lpVtbl -> put_RenderSmoothness(This,RenderSmoothness) ) 

#define IIcadDatabasePreferences_get_SegmentPerPolyline(This,Number)	\
    ( (This)->lpVtbl -> get_SegmentPerPolyline(This,Number) ) 

#define IIcadDatabasePreferences_put_SegmentPerPolyline(This,Number)	\
    ( (This)->lpVtbl -> put_SegmentPerPolyline(This,Number) ) 

#define IIcadDatabasePreferences_get_SolidFill(This,SolidFill)	\
    ( (This)->lpVtbl -> get_SolidFill(This,SolidFill) ) 

#define IIcadDatabasePreferences_put_SolidFill(This,SolidFill)	\
    ( (This)->lpVtbl -> put_SolidFill(This,SolidFill) ) 

#define IIcadDatabasePreferences_get_TextFrameDisplay(This,TextFrameDisplay)	\
    ( (This)->lpVtbl -> get_TextFrameDisplay(This,TextFrameDisplay) ) 

#define IIcadDatabasePreferences_put_TextFrameDisplay(This,TextFrameDisplay)	\
    ( (This)->lpVtbl -> put_TextFrameDisplay(This,TextFrameDisplay) ) 

#define IIcadDatabasePreferences_get_XRefLayerVisibility(This,Visible)	\
    ( (This)->lpVtbl -> get_XRefLayerVisibility(This,Visible) ) 

#define IIcadDatabasePreferences_put_XRefLayerVisibility(This,Visible)	\
    ( (This)->lpVtbl -> put_XRefLayerVisibility(This,Visible) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIcadDatabasePreferences_INTERFACE_DEFINED__ */



#ifndef __ZwCAD_LIBRARY_DEFINED__
#define __ZwCAD_LIBRARY_DEFINED__

/* library ZwCAD */
/* [helpstring][lcid][version][uuid] */ 




























































































































































































































































































































EXTERN_C const IID LIBID_ZwCAD;

#ifndef ___IcadWorkspaceEvents_DISPINTERFACE_DEFINED__
#define ___IcadWorkspaceEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IcadWorkspaceEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__IcadWorkspaceEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("34101d49-aa92-4896-a25d-9861e7b8d91e")
    _IcadWorkspaceEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IcadWorkspaceEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IcadWorkspaceEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IcadWorkspaceEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IcadWorkspaceEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IcadWorkspaceEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IcadWorkspaceEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IcadWorkspaceEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IcadWorkspaceEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _IcadWorkspaceEventsVtbl;

    interface _IcadWorkspaceEvents
    {
        CONST_VTBL struct _IcadWorkspaceEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IcadWorkspaceEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IcadWorkspaceEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IcadWorkspaceEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IcadWorkspaceEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IcadWorkspaceEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IcadWorkspaceEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IcadWorkspaceEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IcadWorkspaceEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IZwcadApplicationEvents_DISPINTERFACE_DEFINED__
#define __IZwcadApplicationEvents_DISPINTERFACE_DEFINED__

/* dispinterface IZwcadApplicationEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID_IZwcadApplicationEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("8156c5cc-4167-45e3-b1d5-7c5bb810de83")
    IZwcadApplicationEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct IZwcadApplicationEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IZwcadApplicationEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IZwcadApplicationEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IZwcadApplicationEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IZwcadApplicationEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IZwcadApplicationEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IZwcadApplicationEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IZwcadApplicationEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IZwcadApplicationEventsVtbl;

    interface IZwcadApplicationEvents
    {
        CONST_VTBL struct IZwcadApplicationEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IZwcadApplicationEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IZwcadApplicationEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IZwcadApplicationEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IZwcadApplicationEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IZwcadApplicationEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IZwcadApplicationEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IZwcadApplicationEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __IZwcadApplicationEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___EIcadDocument_DISPINTERFACE_DEFINED__
#define ___EIcadDocument_DISPINTERFACE_DEFINED__

/* dispinterface _EIcadDocument */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__EIcadDocument;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("6c3b24f7-1b6e-41be-80d6-8f835de34912")
    _EIcadDocument : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _EIcadDocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EIcadDocument * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EIcadDocument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EIcadDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EIcadDocument * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EIcadDocument * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EIcadDocument * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EIcadDocument * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _EIcadDocumentVtbl;

    interface _EIcadDocument
    {
        CONST_VTBL struct _EIcadDocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EIcadDocument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EIcadDocument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EIcadDocument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EIcadDocument_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EIcadDocument_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EIcadDocument_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EIcadDocument_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___EIcadDocument_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ZwcadDimension;

#ifdef __cplusplus

class DECLSPEC_UUID("30f5f533-a2b2-4902-a638-85d29d7d82d3")
ZwcadDimension;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimAngular;

#ifdef __cplusplus

class DECLSPEC_UUID("512a9fde-b3fa-435a-9efa-e36d699bad0c")
ZwcadDimAngular;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimAligned;

#ifdef __cplusplus

class DECLSPEC_UUID("f1dd8702-a7ca-4237-bab2-e2c2c9a8c0e4")
ZwcadDimAligned;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimDiametric;

#ifdef __cplusplus

class DECLSPEC_UUID("e823421e-ae58-47fe-b741-17c964d993c8")
ZwcadDimDiametric;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimOrdinate;

#ifdef __cplusplus

class DECLSPEC_UUID("bcc6e66e-87f6-401a-a727-174ccb49a63e")
ZwcadDimOrdinate;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimRadial;

#ifdef __cplusplus

class DECLSPEC_UUID("ba21c70d-0053-45be-b434-699e5c583875")
ZwcadDimRadial;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimRotated;

#ifdef __cplusplus

class DECLSPEC_UUID("5f728296-12cc-4fe5-a16a-96eaa5a61379")
ZwcadDimRotated;
#endif

EXTERN_C const CLSID CLSID_ZwcadDim3PointAngular;

#ifdef __cplusplus

class DECLSPEC_UUID("97015bd4-285a-4a6b-b51a-1f3849621d1e")
ZwcadDim3PointAngular;
#endif

EXTERN_C const CLSID CLSID_ZwcadModelSpace;

#ifdef __cplusplus

class DECLSPEC_UUID("dd17d8ba-6101-4f22-aa62-4062b82adaf3")
ZwcadModelSpace;
#endif

EXTERN_C const CLSID CLSID_ZwcadPaperSpace;

#ifdef __cplusplus

class DECLSPEC_UUID("3fe4da7a-81af-422b-bc9c-3b2188931821")
ZwcadPaperSpace;
#endif

EXTERN_C const CLSID CLSID_ZwcadDocument;

#ifdef __cplusplus

class DECLSPEC_UUID("6eee4c76-6952-445d-862d-d22c7429770e")
ZwcadDocument;
#endif

EXTERN_C const CLSID CLSID_ZwcadDatabasePreferences;

#ifdef __cplusplus

class DECLSPEC_UUID("54cceea2-3c93-4d19-bf23-f33a1327077f")
ZwcadDatabasePreferences;
#endif

EXTERN_C const CLSID CLSID_ZwcadObject;

#ifdef __cplusplus

class DECLSPEC_UUID("8AB6DD86-35A2-4eb6-A7AE-BEC105966167")
ZwcadObject;
#endif

EXTERN_C const CLSID CLSID_ZwcadEntity;

#ifdef __cplusplus

class DECLSPEC_UUID("aa351e9b-e17b-44af-8fcb-69231b18ce0b")
ZwcadEntity;
#endif

EXTERN_C const CLSID CLSID_Zwcad3DFace;

#ifdef __cplusplus

class DECLSPEC_UUID("04615058-5ba9-4627-ae9a-c43d6939d6f2")
Zwcad3DFace;
#endif

EXTERN_C const CLSID CLSID_Zwcad3DPolyline;

#ifdef __cplusplus

class DECLSPEC_UUID("2cef7b6e-3415-4399-bb6f-a8a2fef70d4b")
Zwcad3DPolyline;
#endif

EXTERN_C const CLSID CLSID_ZwcadArc;

#ifdef __cplusplus

class DECLSPEC_UUID("a119b7c3-157d-44f8-9a78-ece5f844c530")
ZwcadArc;
#endif

EXTERN_C const CLSID CLSID_ZwcadAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("d663ed3d-5677-4bf2-a121-572327f8065d")
ZwcadAttribute;
#endif

EXTERN_C const CLSID CLSID_ZwcadAttributeReference;

#ifdef __cplusplus

class DECLSPEC_UUID("e6c8129f-85ef-4bb3-9476-1dca16a325da")
ZwcadAttributeReference;
#endif

EXTERN_C const CLSID CLSID_ZwcadAttributeReferences;

#ifdef __cplusplus

class DECLSPEC_UUID("708bd15c-afab-48a9-84dc-f9ccf3ceacdd")
ZwcadAttributeReferences;
#endif

EXTERN_C const CLSID CLSID_ZwcadBlockReference;

#ifdef __cplusplus

class DECLSPEC_UUID("761108c8-1f9c-4826-9d98-e1f72bc824f3")
ZwcadBlockReference;
#endif

EXTERN_C const CLSID CLSID_ZwcadCircle;

#ifdef __cplusplus

class DECLSPEC_UUID("933b2b7b-995b-44cd-80f6-418bd9e1d33d")
ZwcadCircle;
#endif

EXTERN_C const CLSID CLSID_ZwcadEllipse;

#ifdef __cplusplus

class DECLSPEC_UUID("b707acdf-ca97-459a-aae3-b5e906b20b1a")
ZwcadEllipse;
#endif

EXTERN_C const CLSID CLSID_ZwcadHatch;

#ifdef __cplusplus

class DECLSPEC_UUID("47e22211-0919-4563-8db5-135331ef2410")
ZwcadHatch;
#endif

EXTERN_C const CLSID CLSID_ZwcadLeader;

#ifdef __cplusplus

class DECLSPEC_UUID("dc33cabe-ff8e-42ae-878c-fab361e3f040")
ZwcadLeader;
#endif

EXTERN_C const CLSID CLSID_ZwcadLine;

#ifdef __cplusplus

class DECLSPEC_UUID("a64bed44-3442-443d-92cc-6f702343017b")
ZwcadLine;
#endif

EXTERN_C const CLSID CLSID_ZwcadLWPolyline;

#ifdef __cplusplus

class DECLSPEC_UUID("82843e19-d937-4f72-9976-0a0688816115")
ZwcadLWPolyline;
#endif

EXTERN_C const CLSID CLSID_ZwcadMText;

#ifdef __cplusplus

class DECLSPEC_UUID("0edc370f-038b-4b1c-a858-b984dab0a5db")
ZwcadMText;
#endif

EXTERN_C const CLSID CLSID_ZwcadPointEntity;

#ifdef __cplusplus

class DECLSPEC_UUID("75af6ebd-221f-4937-a393-0cc67346a193")
ZwcadPointEntity;
#endif

EXTERN_C const CLSID CLSID_ZwcadPolyline;

#ifdef __cplusplus

class DECLSPEC_UUID("c970c10c-d947-4b0e-835d-9cd475f5ac2f")
ZwcadPolyline;
#endif

EXTERN_C const CLSID CLSID_ZwcadPolygonMesh;

#ifdef __cplusplus

class DECLSPEC_UUID("b7b29492-7029-462e-b587-023253fd2a45")
ZwcadPolygonMesh;
#endif

EXTERN_C const CLSID CLSID_ZwcadPolyfaceMesh;

#ifdef __cplusplus

class DECLSPEC_UUID("8dab3a3d-8ad2-4c1e-b8b8-43d7be53ff26")
ZwcadPolyfaceMesh;
#endif

EXTERN_C const CLSID CLSID_ZwcadPViewport;

#ifdef __cplusplus

class DECLSPEC_UUID("e83905bd-3025-4a8f-a574-ab0c3b390c77")
ZwcadPViewport;
#endif

EXTERN_C const CLSID CLSID_ZwcadRasterImage;

#ifdef __cplusplus

class DECLSPEC_UUID("78839e54-3f85-45c9-8413-a9f7e19c46ff")
ZwcadRasterImage;
#endif

EXTERN_C const CLSID CLSID_ZwcadRay;

#ifdef __cplusplus

class DECLSPEC_UUID("621a3d50-c3d0-4ed6-afec-78074d944156")
ZwcadRay;
#endif

EXTERN_C const CLSID CLSID_ZwcadShape;

#ifdef __cplusplus

class DECLSPEC_UUID("03efc5c1-063e-4dd7-83d5-85a2c814920a")
ZwcadShape;
#endif

EXTERN_C const CLSID CLSID_ZwcadSolid;

#ifdef __cplusplus

class DECLSPEC_UUID("d8b3b766-8a29-4ddf-8c14-ca9b9418498a")
ZwcadSolid;
#endif

EXTERN_C const CLSID CLSID_ZwcadSpline;

#ifdef __cplusplus

class DECLSPEC_UUID("ab2ff5e3-cc15-4a73-889f-74b8c34d6535")
ZwcadSpline;
#endif

EXTERN_C const CLSID CLSID_ZwcadText;

#ifdef __cplusplus

class DECLSPEC_UUID("45180b03-2967-478b-8fad-ef1009ec836c")
ZwcadText;
#endif

EXTERN_C const CLSID CLSID_ZwcadTolerance;

#ifdef __cplusplus

class DECLSPEC_UUID("b83fccd5-8e36-4c4f-b7af-13c7481f9c7c")
ZwcadTolerance;
#endif

EXTERN_C const CLSID CLSID_ZwcadTrace;

#ifdef __cplusplus

class DECLSPEC_UUID("cc47c6e3-64b8-4485-a760-46532f1297ac")
ZwcadTrace;
#endif

EXTERN_C const CLSID CLSID_ZwcadXline;

#ifdef __cplusplus

class DECLSPEC_UUID("fbaf407e-a12a-425c-ba5a-d5a6d1885a93")
ZwcadXline;
#endif

EXTERN_C const CLSID CLSID_ZwcadExternalReference;

#ifdef __cplusplus

class DECLSPEC_UUID("dfece7f2-5b57-494e-bd4c-397073ec9d02")
ZwcadExternalReference;
#endif

EXTERN_C const CLSID CLSID_ZwcadDocuments;

#ifdef __cplusplus

class DECLSPEC_UUID("ae49f429-2006-4bfb-9043-a62eda231f8c")
ZwcadDocuments;
#endif

EXTERN_C const CLSID CLSID_ZwcadWindows;

#ifdef __cplusplus

class DECLSPEC_UUID("804dc1f3-bac1-4340-ae68-568099cfbf0a")
ZwcadWindows;
#endif

EXTERN_C const CLSID CLSID_ZwcadWindow;

#ifdef __cplusplus

class DECLSPEC_UUID("f8d6d7ff-dae3-4856-93ec-ca4100f03a3e")
ZwcadWindow;
#endif

EXTERN_C const CLSID CLSID_ZwcadApplication;

#ifdef __cplusplus

class DECLSPEC_UUID("2ED0A211-E1AD-4152-AA9C-B376FAE8FF95")
ZwcadApplication;
#endif

EXTERN_C const CLSID CLSID_ZwcadWorkspace;

#ifdef __cplusplus

class DECLSPEC_UUID("64887855-84ba-490b-81dd-0dd86e1493cb")
ZwcadWorkspace;
#endif

EXTERN_C const CLSID CLSID_ZwcadApplicationPreferences;

#ifdef __cplusplus

class DECLSPEC_UUID("c59eeeb7-a2b5-444a-aafc-d9eee27cdfaf")
ZwcadApplicationPreferences;
#endif

EXTERN_C const CLSID CLSID_ZwcadPoint;

#ifdef __cplusplus

class DECLSPEC_UUID("97a986a3-4405-4609-abeb-ac275082ec4d")
ZwcadPoint;
#endif

EXTERN_C const CLSID CLSID_ZwcadPoints;

#ifdef __cplusplus

class DECLSPEC_UUID("d5bcb4fb-acf9-479a-a79a-59604fe12ba3")
ZwcadPoints;
#endif

EXTERN_C const CLSID CLSID_ZwcadVector;

#ifdef __cplusplus

class DECLSPEC_UUID("2a4010a3-c5e2-4942-9960-6b99ff36e41a")
ZwcadVector;
#endif

EXTERN_C const CLSID CLSID_ZwcadMatrix;

#ifdef __cplusplus

class DECLSPEC_UUID("e6cab02e-f7d4-44e9-9e1a-44b101e39173")
ZwcadMatrix;
#endif

EXTERN_C const CLSID CLSID_ZwcadLibrary;

#ifdef __cplusplus

class DECLSPEC_UUID("319c3e44-3738-4f37-a0d9-4f82fff3b20f")
ZwcadLibrary;
#endif

EXTERN_C const CLSID CLSID_ZwcadUtility;

#ifdef __cplusplus

class DECLSPEC_UUID("783cfdd2-58bd-484c-a503-30d3fe84734e")
ZwcadUtility;
#endif

EXTERN_C const CLSID CLSID_ZwcadRegisteredApplication;

#ifdef __cplusplus

class DECLSPEC_UUID("8178dcdc-c949-4594-b94c-9118f265fc54")
ZwcadRegisteredApplication;
#endif

EXTERN_C const CLSID CLSID_ZwcadRegisteredApplications;

#ifdef __cplusplus

class DECLSPEC_UUID("a61adea5-abd1-4c15-b91a-89b879e3c118")
ZwcadRegisteredApplications;
#endif

EXTERN_C const CLSID CLSID_ZwcadBlock;

#ifdef __cplusplus

class DECLSPEC_UUID("99ddfb5c-c9fc-48a8-a4b9-a55736d81cdb")
ZwcadBlock;
#endif

EXTERN_C const CLSID CLSID_ZwcadBlocks;

#ifdef __cplusplus

class DECLSPEC_UUID("3935f44f-ea0e-40a8-a765-df50ae34f22e")
ZwcadBlocks;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("2b01443d-82e6-4d36-a3ad-aef2757b9e45")
ZwcadDimStyle;
#endif

EXTERN_C const CLSID CLSID_ZwcadDimStyles;

#ifdef __cplusplus

class DECLSPEC_UUID("dba17732-fc60-4967-a727-f8103c14f1f7")
ZwcadDimStyles;
#endif

EXTERN_C const CLSID CLSID_ZwcadLayer;

#ifdef __cplusplus

class DECLSPEC_UUID("cfd2525a-ce72-4f4f-9339-1492d351eefe")
ZwcadLayer;
#endif

EXTERN_C const CLSID CLSID_ZwcadLayers;

#ifdef __cplusplus

class DECLSPEC_UUID("4db62039-9cd9-4c36-9220-da5ab3ac070c")
ZwcadLayers;
#endif

EXTERN_C const CLSID CLSID_ZwcadLinetype;

#ifdef __cplusplus

class DECLSPEC_UUID("28f36eba-a64f-4fa9-ad48-a5ad02e3cbce")
ZwcadLinetype;
#endif

EXTERN_C const CLSID CLSID_ZwcadLinetypes;

#ifdef __cplusplus

class DECLSPEC_UUID("4f3e700f-3bd3-4e73-830f-2c63375b39b4")
ZwcadLinetypes;
#endif

EXTERN_C const CLSID CLSID_ZwcadTextStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("90eff54e-d4cf-49d9-bf9d-dc6a7a7b1a42")
ZwcadTextStyle;
#endif

EXTERN_C const CLSID CLSID_ZwcadTextStyles;

#ifdef __cplusplus

class DECLSPEC_UUID("cedb9ef4-7429-40e3-b4fd-8dca977dfd41")
ZwcadTextStyles;
#endif

EXTERN_C const CLSID CLSID_ZwcadUCS;

#ifdef __cplusplus

class DECLSPEC_UUID("673c3ad0-b0f4-4d81-8955-1b387d39425d")
ZwcadUCS;
#endif

EXTERN_C const CLSID CLSID_ZwcadUCSs;

#ifdef __cplusplus

class DECLSPEC_UUID("81d93f96-73d2-4a85-ac54-b4c428fa448b")
ZwcadUCSs;
#endif

EXTERN_C const CLSID CLSID_ZwcadView;

#ifdef __cplusplus

class DECLSPEC_UUID("50f93649-618c-45cb-b832-b3ebb517ecb2")
ZwcadView;
#endif

EXTERN_C const CLSID CLSID_ZwcadViews;

#ifdef __cplusplus

class DECLSPEC_UUID("594b8ff3-5d3c-4ba3-967f-87c29899fd17")
ZwcadViews;
#endif

EXTERN_C const CLSID CLSID_ZwcadViewport;

#ifdef __cplusplus

class DECLSPEC_UUID("8552fda7-625e-4af6-8c59-23bbefa3ba7c")
ZwcadViewport;
#endif

EXTERN_C const CLSID CLSID_ZwcadViewports;

#ifdef __cplusplus

class DECLSPEC_UUID("93e67fc8-123a-4a05-a6e2-ffeaa6eaa786")
ZwcadViewports;
#endif

EXTERN_C const CLSID CLSID_ZwcadSelectionSet;

#ifdef __cplusplus

class DECLSPEC_UUID("1169848c-ef20-4768-bd23-0c2ce79272d1")
ZwcadSelectionSet;
#endif

EXTERN_C const CLSID CLSID_ZwcadSelectionSets;

#ifdef __cplusplus

class DECLSPEC_UUID("55f88f37-91e5-49a4-bfd7-83cb4b86380e")
ZwcadSelectionSets;
#endif

EXTERN_C const CLSID CLSID_ZwcadPlotterPen;

#ifdef __cplusplus

class DECLSPEC_UUID("f5136f72-4d6e-4717-b1e0-dac0b7ed16a5")
ZwcadPlotterPen;
#endif

EXTERN_C const CLSID CLSID_ZwcadPlotterPens;

#ifdef __cplusplus

class DECLSPEC_UUID("8d025b79-a7f8-4b64-a597-ed09463480d4")
ZwcadPlotterPens;
#endif

EXTERN_C const CLSID CLSID_ZwcadPlotProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("2c121bcf-3f54-4f48-a8c6-e4f09d64b30c")
ZwcadPlotProperties;
#endif

EXTERN_C const CLSID CLSID_ZwcadPlotManager;

#ifdef __cplusplus

class DECLSPEC_UUID("a17fea47-d4c1-4d88-83b8-6162900d78ae")
ZwcadPlotManager;
#endif

EXTERN_C const CLSID CLSID_ZwcadGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("f5d24bbf-c902-4af3-adfe-5224da789a1f")
ZwcadGroup;
#endif

EXTERN_C const CLSID CLSID_ZwcadGroups;

#ifdef __cplusplus

class DECLSPEC_UUID("08408b6a-4231-41bb-aed8-96b768f43b71")
ZwcadGroups;
#endif

EXTERN_C const CLSID CLSID_ZwcadRegion;

#ifdef __cplusplus

class DECLSPEC_UUID("0852d14a-4622-4c20-b6f9-ff89156546f3")
ZwcadRegion;
#endif

EXTERN_C const CLSID CLSID_ZwcadMLine;

#ifdef __cplusplus

class DECLSPEC_UUID("036D749D-398B-4262-BDC5-4147EA1BE4E4")
ZwcadMLine;
#endif

EXTERN_C const CLSID CLSID_ZwcadXRecord;

#ifdef __cplusplus

class DECLSPEC_UUID("F43E72C5-8DE7-43ab-BC7A-4513B4FEF255")
ZwcadXRecord;
#endif

EXTERN_C const CLSID CLSID_ZwcadDictionary;

#ifdef __cplusplus

class DECLSPEC_UUID("177363F2-E967-45cb-8205-8834C75E283A")
ZwcadDictionary;
#endif

EXTERN_C const CLSID CLSID_ZwcadDictionaries;

#ifdef __cplusplus

class DECLSPEC_UUID("208D3806-F139-44af-93B8-34D2E36F6912")
ZwcadDictionaries;
#endif

EXTERN_C const CLSID CLSID_ZwcadState;

#ifdef __cplusplus

class DECLSPEC_UUID("6FFCAA4B-8E3C-400a-A2CF-0265B47E0DEF")
ZwcadState;
#endif

EXTERN_C const CLSID CLSID_ZwcadHyperlinks;

#ifdef __cplusplus

class DECLSPEC_UUID("EA1C6456-ABE1-4bed-B113-4D9CE690080F")
ZwcadHyperlinks;
#endif

EXTERN_C const CLSID CLSID_ZwcadHyperlink;

#ifdef __cplusplus

class DECLSPEC_UUID("1A6F9E0D-AAD6-461c-A3EA-ACA8B339661F")
ZwcadHyperlink;
#endif

EXTERN_C const CLSID CLSID_ZwcadPlotConfiguration;

#ifdef __cplusplus

class DECLSPEC_UUID("B9B183B8-2A2A-4b9a-868A-B24ABA306A31")
ZwcadPlotConfiguration;
#endif

EXTERN_C const CLSID CLSID_ZwcadPlotConfigurations;

#ifdef __cplusplus

class DECLSPEC_UUID("4C09F41A-03EF-43f9-B060-3DB58112BBF1")
ZwcadPlotConfigurations;
#endif

EXTERN_C const CLSID CLSID_ZwcadLayout;

#ifdef __cplusplus

class DECLSPEC_UUID("DD4CB8F2-43FF-4f00-BA3E-8CDEC45A1963")
ZwcadLayout;
#endif

EXTERN_C const CLSID CLSID_ZwcadLayouts;

#ifdef __cplusplus

class DECLSPEC_UUID("CC50144F-8B3F-44e4-A3F5-E73EF1F9055D")
ZwcadLayouts;
#endif

EXTERN_C const CLSID CLSID_ZwcadPlot;

#ifdef __cplusplus

class DECLSPEC_UUID("CF7CE06F-4BCE-4c1f-93E7-0CF352C60F0F")
ZwcadPlot;
#endif

EXTERN_C const CLSID CLSID_ZwcadSummaryInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("7D34C5AF-FEAB-4712-8286-B411272A3216")
ZwcadSummaryInfo;
#endif

EXTERN_C const CLSID CLSID_ZwcadSortentsTable;

#ifdef __cplusplus

class DECLSPEC_UUID("50F1C629-B435-48e3-8EA1-286EE79BA427")
ZwcadSortentsTable;
#endif

EXTERN_C const CLSID CLSID_ZwcadOle;

#ifdef __cplusplus

class DECLSPEC_UUID("3B448C2A-BD97-4438-97CF-7894C98E2B6C")
ZwcadOle;
#endif

EXTERN_C const CLSID CLSID_ZwcadAcCmColor;

#ifdef __cplusplus

class DECLSPEC_UUID("F13A0A35-EF7F-4c9e-A770-AE5CEC44DCEC")
ZwcadAcCmColor;
#endif

EXTERN_C const CLSID CLSID_Zwcad3DSolid;

#ifdef __cplusplus

class DECLSPEC_UUID("0D26A57C-D862-4812-A9AD-883FE5C45A5E")
Zwcad3DSolid;
#endif

EXTERN_C const CLSID CLSID_ZwcadMenuBar;

#ifdef __cplusplus

class DECLSPEC_UUID("4AEF5E43-958F-428f-B8E4-8FD75B12C91D")
ZwcadMenuBar;
#endif

EXTERN_C const CLSID CLSID_ZwcadMenuGroups;

#ifdef __cplusplus

class DECLSPEC_UUID("87D6B8A2-AC55-4473-A0CD-0B96146D4E13")
ZwcadMenuGroups;
#endif

EXTERN_C const CLSID CLSID_ZwcadMenuGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("AF41E069-BED3-4e73-91F0-83785C8EC454")
ZwcadMenuGroup;
#endif

EXTERN_C const CLSID CLSID_ZwcadPopupMenus;

#ifdef __cplusplus

class DECLSPEC_UUID("A74FB60B-CF11-4cd5-80F7-18378AD9985E")
ZwcadPopupMenus;
#endif

EXTERN_C const CLSID CLSID_ZwcadPopupMenu;

#ifdef __cplusplus

class DECLSPEC_UUID("7E1E1BF5-5B75-446d-889C-7F8A2A3C5214")
ZwcadPopupMenu;
#endif

EXTERN_C const CLSID CLSID_ZwcadPopupMenuItem;

#ifdef __cplusplus

class DECLSPEC_UUID("F3A2EE8A-F248-4637-8A34-01EF4BD7BE30")
ZwcadPopupMenuItem;
#endif

EXTERN_C const CLSID CLSID_ZwcadToolbars;

#ifdef __cplusplus

class DECLSPEC_UUID("7C3877B8-D344-4435-952D-D8C86B595685")
ZwcadToolbars;
#endif

EXTERN_C const CLSID CLSID_ZwcadToolbar;

#ifdef __cplusplus

class DECLSPEC_UUID("708266B5-1049-4bba-A23C-8AEB2C03BB02")
ZwcadToolbar;
#endif

EXTERN_C const CLSID CLSID_ZwcadToolbarItem;

#ifdef __cplusplus

class DECLSPEC_UUID("146EBD6B-C615-4de8-881A-243631F0F42C")
ZwcadToolbarItem;
#endif
#endif /* __ZwCAD_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


